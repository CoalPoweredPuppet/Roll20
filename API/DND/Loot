/*
global myrolls log gmC state on obj getObj iPart _ playerIsGM brPart RollRight formatNumber findObjs sendChat CONFIG lPart fPart gm_img gPart greenC redC grayC OuterDiv Campaign randomFromTo createObj fixNO toFront randomInteger
---CLOUD9 ERROR CLEARING---
*/
//-----COMMANDS--------
on("chat:message", function(msg) {
    var msgTxt = msg.content;
    if(msg.type == "api" && msgTxt.indexOf("!loot") !== -1) {
        var rolls = '';
        var msgFormula = msgTxt.split(" ");
        var times = msgFormula[1];
        _.times(times, function(x) {
            var lType = (randomInteger(100) < 95) ? "Loot-Items" : "Loot-Rare";
            var wQual = "";
            if(lType == "Loot-Rare") {
                var wQualList = ['Excellent', 'Good', 'Average', 'Poor', 'Broken'];
                wQual = "<b>" + wQualList[Math.floor(Math.random() * wQualList.length)] + "</b>";
            }
            rolls += "{{Item " + (x + 1) + "=" + wQual + " [[1t[" + lType + "] ]]}}";
        });
        //sendChat('', '&{template:5eDefault} {{showclassactions=1}} ' + rolls);
        sendChat('', rolls, function(ops) {
            var text = processInlinerolls3(ops[0]);
            sendChat('', text, function(ops) {
                var text = processInlinerolls3(ops[0]);
                var aLoottext = "&{template:5eDefault} {{show_character_name=1}} {{character_name=" + msg.who + "}} {{title=Looks for Loot}}";
                sendChat('', "/direct " + aLoottext);
                sendChat(msg.who, '/w gm &{template:5eDefault} {{showclassactions=1}} ' + text);
                sendChat(msg.who, "/w " + msg.who + '&{template:5eDefault} {{showclassactions=1}} ' + text);
            });
        });
    }
});
on('ready', function() {
    log("Loot Script Ready");
});

function processInlinerolltables(msg) {
    if(_.has(msg, 'inlinerolls')) {
        return _.chain(msg.inlinerolls).reduce(function(previous, current, index) {
            previous['$[[' + index + ']]'] = current.results.rolls[0].results[0].tableItem.name || 0;
            return previous;
        }, {}).reduce(function(previous, current, index) {
            return previous.replace(index, current);
        }, msg.content).value();
    } else {
        return msg.content;
    }
};

function processInlinerolls(msg) {
    if(_.has(msg, 'inlinerolls')) {
        return _.chain(msg.inlinerolls).reduce(function(previous, current, index) {
            previous['$[[' + index + ']]'] = current.results.total || 0;
            return previous;
        }, {}).reduce(function(previous, current, index) {
            return previous.replace(index, current);
        }, msg.content).value();
    } else {
        return msg.content;
    }
};

function processInlinerolls3(msg) {
    if(_.has(msg, 'inlinerolls')) {
        return _.chain(msg.inlinerolls).reduce(function(m, v, k) {
            var ti = _.reduce(v.results.rolls, function(m2, v2) {
                if(_.has(v2, 'table')) {
                    m2.push(_.reduce(v2.results, function(m3, v3) {
                        m3.push(v3.tableItem.name);
                        return m3;
                    }, []).join(', '));
                }
                return m2;
            }, []).join(', ');
            m['$[[' + k + ']]'] = (ti.length && ti) || v.results.total || 0;
            return m;
        }, {}).reduce(function(m, v, k) {
            return m.replace(k, v);
        }, msg.content).value();
    } else {
        return msg.content;
    }
}