/*
global myrolls log gmC state on obj getObj iPart _ playerIsGM brPart RollRight formatNumber findObjs sendChat CONFIG lPart fPart gm_img gPart greenC redC grayC OuterDiv Campaign randomFromTo createObj fixNO toFront randomInteger
---CLOUD9 ERROR CLEARING---
*/
/*------------------
DXWarlock - Roll20
------------------*/
/*------------------
PAGE CHANGE
------------------*/
on("change:campaign:playerpageid", function(obj, prev) {
	var currentPage = getObj("page", Campaign().get("playerpageid"));
	var pName = currentPage.get("name");
	sendChat('', "&{template:5eDefault} {{save=1}} {{title=" + pName + "}}");
});
/*------------------
Generic Functions
------------------*/
//make number
function formatNumber(num) {
	return num.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");
}
//-------PLAYER COLOR
function GetPColor(Player) {
	var cBy = Player.get('controlledby');
	var player = getObj('player', cBy);
	var pColor = player.get('color');
	return pColor;
}
//set character name
function RollRight(whoPC) {
	var character = findObjs({
		type: 'character',
		controlledby: whoPC
	})[0];
	return character;
}
//find level
function fLevel() {
	var characters = findObjs({
		_type: "character"
	});
	var chat = '';
	var lTotal = 0;
	var count = 0;
	_.each(characters, function(id) {
		var aa = id.get("inplayerjournals");
		var aSet = findObjs({
			_type: "attribute",
			name: "Level",
			_characterid: id.id
		}, {
			caseInsensitive: true
		})[0];
		if(aa == "all" && aSet !== undefined) {
			var a2 = parseInt(aSet.get("current"));
			count = count + 1;
			lTotal = lTotal + a2;
		}
	});
	lTotal = Math.round(lTotal / count);
	return lTotal;
}
//parse loot
function myrolls(loota) {
	for(var i = 0; i < loota.length; i++) {
		var ii = (loota[i].indexOf("[[") != -1);
		if(ii == true) {
			var num = loota[i].replace(/[^0-9]/g, '');
			var res1 = num.substr(0, 1);
			var res2 = num.substr(1, 4);
			var ia = 1;
			var tot = 0;
			while(ia <= res1) {
				var tot = tot + randomInteger(res2);
				ia++;
			}
			return tot;
		}
	}
}

function MakeRollNum(cont, inline) {
	return _.chain(inline).reduce(function(m, v, k) {
		m['$[[' + k + ']]'] = v.results.total || 0;
		return m;
	}, {}).reduce(function(m, v, k) {
		var d20 = m.replace(k, v);
		return m.replace(k, v);
	}, cont).value();
};
//-------------
var CONFIG = [
	{
		barId: 1,
		barRatioMax: 1.0,
		barRatioMin: 0.5,
		status: "green",
		whenLow: true
	},
	{
		barId: 1,
		barRatioMax: 0.5,
		barRatioMin: 0.25,
		status: "yellow",
		whenLow: true
	},
	{
		barId: 1,
		barRatioMax: 0.25,
		barRatioMin: 0,
		status: "brown",
		whenLow: true
	},
	{
		barId: 1,
		barRatioMax: 0,
		barRatioMin: -0.1,
		status: "red",
		whenLow: true
	},
	 ];
/*------------------
WEATHER STUFF
------------------*/
//---MONTH
var MonthId = [
	{
		Month: 1,
		Name: 'January',
		Base: 20
	},
	{
		Month: 2,
		Name: 'February',
		Base: 40
	},
	{
		Month: 3,
		Name: 'March',
		Base: 50
	},
	{
		Month: 4,
		Name: 'April',
		Base: 60
	},
	{
		Month: 5,
		Name: 'May',
		Base: 70
	},
	{
		Month: 6,
		Name: 'June',
		Base: 90
	},
	{
		Month: 7,
		Name: 'July',
		Base: 90
	},
	{
		Month: 8,
		Name: 'August',
		Base: 90
	},
	{
		Month: 9,
		Name: 'September',
		Base: 80
	},
	{
		Month: 10,
		Name: 'October',
		Base: 70
	},
	{
		Month: 11,
		Name: 'November',
		Base: 40
	},
	{
		Month: 12,
		Name: 'December',
		Base: 20
	}
	 ];