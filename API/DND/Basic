/*
global myrolls log gmC state on obj getObj iPart _ playerIsGM brPart RollRight formatNumber findObjs sendChat CONFIG lPart fPart gm_img gPart greenC redC grayC OuterDiv Campaign randomFromTo createObj fixNO toFront randomInteger
*/
on("ready", function() {
    if(state.bloodlist == undefined) state.bloodlist = [];
    var currentTime = new Date();
    var new1 = (new Date(currentTime));
    log(Math.floor(currentTime.getTime()/1000));
    var hours = currentTime.getHours() + 1;
    var minutes = currentTime.getMinutes();
    if(minutes < 10) minutes = "0" + minutes;
    var time = hours + ":" + minutes;
    sendChat('API', "/w GM &{template:default} {{name=API STARTED}} {{<small>Time:=<small>" + new1 + "}}");
});
/*------------------
EXHAUSTION LEVEL
------------------*/
on("change:token", function(o) {
    if(o.get("represents") !== "") {
        var oCharacter = getObj('character', o.get("_represents"));
        var type = (oCharacter.get("controlledby") === "") ? 'Monster' : 'Player';
        if(type == 'Player') {
            var PC = getObj("character", o.get("represents"));
            var EX = findObjs({
                name: "exhaustion_level",
                _type: "attribute",
                _characterid: PC.id
            }, {
                caseInsensitive: true
            })[0];
            var cur = "";
            if(EX == undefined) {
                cur = 0;
            } else {
                cur = EX.get("current");
            }
            //o.set("status_brown", cur);
            if(cur == 0) {
                o.set("bar2_max", "");
                o.set("bar2_value", "");
            } else {
                o.set("bar2_max", 6);
                o.set("bar2_value", cur);
            }
        }
    }
});
/*------------------
ROTATE
------------------*/
on("change:graphic", function(obj, prev) {
    if(Campaign().get("turnorder") == "[]" || Campaign().get("turnorder") == "") return;
    var degs;
    if(obj.get("left") != prev.left || obj.get("top") != prev.top) {
        if(obj.get("layer") == "objects") {
            var movex = obj.get("left") - prev.left;
            var movey = obj.get("top") - prev.top;
            if(movey != 0) {
                degs = Math.atan(movex / movey) * 57.29577;
                if(movey < 0) degs = 360 - degs % 360;
                else degs = 180 - degs % 360;
            } else if(movex < 0) degs = 270;
            else degs = 90;
            degs = degs - degs % 1;
            if(degs > 360) degs = degs - 360;
            obj.set("rotation", degs);
        }
    }
});
/*------------------
ANNOUNCE TURNS
------------------*/
on("change:campaign:turnorder", function(obj, prev) {
    if(!Campaign().get("turnorder")) return;
    var turn_order = JSON.parse(Campaign().get("turnorder"));
    if(!turn_order.length) return;
    var check = _.find(turn_order, function(obj) {
        return obj.id == '-1';
    });
    var current_token = getObj("graphic", turn_order[0].id);
    if(turn_order[0].pr == 0.001) {
        sendChat('', "&{template:5eDefault} {{deathsave=1}} {{title=NEW ROUND}} {{emote=Roll Initiative}}");
        Campaign().set("turnorder", '[]');
        return;
    }
    if(JSON.parse(prev.turnorder)[0] != undefined) {
        var first = JSON.parse(prev.turnorder)[0].id;
        var second = turn_order[0].id;
    }
    if(current_token != undefined && check != undefined && first != second) {
        var oCharacter = getObj("character", current_token.get("represents"));
        if(oCharacter != undefined) {
            var type = (oCharacter.get("controlledby") === "") ? 'Monster' : 'Player';
            if(type == 'Player') {
                var iName = getObj("graphic", current_token.id).get("name");
                sendChat('', "&{template:5eDefault} {{title=Turn}} {{emote=" + iName + "}}");
            }
        }
    }
});