var WillTurnOrder = {};
/*------------------
FUNCTION SET TURNS
------------------*/
(function(self) {
    var TurnData = {};
    var BestRoll = 0;
    self.addPlayer = function(id, Roll, Attack) {
        var inc = Roll/Attack;
        var init = Roll;
        if(Roll > BestRoll) {
            BestRoll = Roll;
        }        
        var table = [];
        for (var i=0;i<Attack;i++) {
            if(init > 0) {
                table.push(parseInt(init));
                init = Math.round(init - inc);
            }
        }        
        TurnData[id] = {"Roll":Roll,"Attack":Attack,"Table":table};
    }
    self.createOrder = function() {
        var order = [];
        order.push({"id":'-1',"pr":100,"custom":"StartRound"}); 
        for (var i=(+BestRoll +1);i>0;i--) {
            _.each(TurnData, function(value, key) {
                if(value.Table.indexOf(i) != -1) {
                    order.push({"id":key,"pr":i,"custom":""});                    
                }
            });
        }
        return order;
    }
    self.reset = function() {
        TurnData = {};
        BestRoll = 0;
    }
})(WillTurnOrder);
/*------------------
API CHAT COMMANDS TURNS-SET AND RESET
------------------*/
on('chat:message', function (msg) {
    if(msg.type == 'api' && msg.content.indexOf('!Reset') !== -1) {
        if(!Campaign().get("turnorder")) return;
		var turn_order = JSON.parse(Campaign().get("turnorder"));
		if(!turn_order.length) return;
		var unset_token = getObj("graphic", turn_order[0].id);
        if (unset_token != undefined){
		    unset_token.set({'aura2_radius': '',});
        }
		Campaign().set("turnorder", '');
	}
    //-------------------------
	if(msg.type == 'api' && msg.content.indexOf('!Turns') !== -1) {
		var turnorder;
		if(!Campaign().get("turnorder")) {
			sendChat('', '/desc No turns set!');
			return;
		} else turnorder = JSON.parse(Campaign().get("turnorder"));
		for(var i in turnorder) {
			var cAttacks = 4;
			var name = turnorder[i].id;
            log(name);
			var id1 = getObj("graphic", turnorder[i].id);
            var cname = id1.get("name");
            if(id1 != undefined) {
			var oCharacter = getObj("character", id1.get("represents"));
			if(oCharacter != undefined) {
				var oAttacks = findObjs({_type: "attribute",name: "ATT",_characterid: oCharacter.id})[0];
				if(oAttacks != undefined) {
					var cAttacks = parseInt(oAttacks.get("current"));
				}
			}
            if(!isNaN(cname)){
                var cAttacks = cname;                
            }
			var init = turnorder[i].pr;
			if(init < cAttacks) init = cAttacks;
			WillTurnOrder.addPlayer(name, init, cAttacks);
            }
		}
		var sTurns = WillTurnOrder.createOrder();
		Campaign().set("turnorder", JSON.stringify(sTurns));
		WillTurnOrder.reset();
	}
});
/*------------------
HIGHLIGHT TURNS
------------------*/
on("change:campaign:turnorder", function (obj, prev) {
     if(!Campaign().get("turnorder")) return;
    var turn_order = JSON.parse(Campaign().get("turnorder"));
    if(!turn_order.length) return;
    if(!turn_order[0].id == -1) return;
    var current_token = getObj("graphic", turn_order[0].id);
    var R = fPart+ " background-color:#A80000;'><b>NEW ROUND:</b> roll initiative!</div>";
    if(current_token == undefined) sendChat('', '/direct '+R);
    if(current_token != undefined) {
        var ttop = current_token.get("top");
        var tleft = current_token.get("left");
        sendPing(tleft, ttop, Campaign().get('playerpageid'), null, true);
        current_token.set({'aura2_radius': 1.8,'aura2_color': '#FF6200','aura2_square': false});        
    }
    //--make sure all turn tokens are no aura but #1
	for(var i = 0; i < turn_order.length; i++) {
        var unset_token = getObj("graphic", turn_order[i].id);
       if (turn_order[0].id != turn_order[i].id && unset_token != undefined) {
		    unset_token.set({'aura2_radius': '',});
       }
	}	
});
