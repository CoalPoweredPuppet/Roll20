{"changed":false,"filter":false,"title":"Combat-Rolls","tooltip":"/API/Rifts/Combat-Rolls","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":1,"column":41},"end":{"row":1,"column":42},"action":"insert","lines":[" "],"id":616}],[{"start":{"row":1,"column":42},"end":{"row":1,"column":43},"action":"insert","lines":["B"],"id":617}],[{"start":{"row":1,"column":43},"end":{"row":1,"column":44},"action":"insert","lines":["o"],"id":618}],[{"start":{"row":1,"column":44},"end":{"row":1,"column":45},"action":"insert","lines":["t"],"id":619}],[{"start":{"row":1,"column":45},"end":{"row":1,"column":46},"action":"insert","lines":["t"],"id":620}],[{"start":{"row":1,"column":46},"end":{"row":1,"column":47},"action":"insert","lines":["B"],"id":621}],[{"start":{"row":1,"column":47},"end":{"row":1,"column":48},"action":"insert","lines":["a"],"id":622}],[{"start":{"row":1,"column":48},"end":{"row":1,"column":49},"action":"insert","lines":["r"],"id":623}],[{"start":{"row":1,"column":49},"end":{"row":1,"column":50},"action":"insert","lines":[" "],"id":624}],[{"start":{"row":203,"column":0},"end":{"row":204,"column":49},"action":"remove","lines":["\t\tvar pad = \"6px;\";","\t\tif (BottomText != \"\") pad = \"0px 0px 0px 0px;\";"],"id":625}],[{"start":{"row":203,"column":0},"end":{"row":204,"column":0},"action":"remove","lines":["",""],"id":626}],[{"start":{"row":1,"column":35},"end":{"row":1,"column":40},"action":"insert","lines":["iPart"],"id":627}],[{"start":{"row":1,"column":40},"end":{"row":1,"column":41},"action":"insert","lines":[" "],"id":628}],[{"start":{"row":238,"column":44},"end":{"row":238,"column":45},"action":"insert","lines":[","],"id":629}],[{"start":{"row":238,"column":45},"end":{"row":238,"column":46},"action":"insert","lines":[" "],"id":630}],[{"start":{"row":238,"column":46},"end":{"row":238,"column":47},"action":"insert","lines":["0"],"id":631}],[{"start":{"row":238,"column":46},"end":{"row":238,"column":47},"action":"remove","lines":["0"],"id":632}],[{"start":{"row":238,"column":46},"end":{"row":238,"column":47},"action":"insert","lines":["1"],"id":633}],[{"start":{"row":238,"column":47},"end":{"row":238,"column":48},"action":"insert","lines":["0"],"id":634}],[{"start":{"row":237,"column":39},"end":{"row":237,"column":43},"action":"insert","lines":[", 10"],"id":635}],[{"start":{"row":237,"column":43},"end":{"row":237,"column":44},"action":"insert","lines":[" "],"id":636}],[{"start":{"row":236,"column":43},"end":{"row":236,"column":47},"action":"insert","lines":[", 10"],"id":637}],[{"start":{"row":234,"column":46},"end":{"row":234,"column":50},"action":"insert","lines":[", 10"],"id":638}],[{"start":{"row":227,"column":4},"end":{"row":227,"column":5},"action":"insert","lines":[";"],"id":639}],[{"start":{"row":227,"column":4},"end":{"row":227,"column":5},"action":"remove","lines":[";"],"id":640}],[{"start":{"row":226,"column":10},"end":{"row":226,"column":11},"action":"insert","lines":[";"],"id":641}],[{"start":{"row":215,"column":0},"end":{"row":216,"column":0},"action":"remove","lines":["",""],"id":642}],[{"start":{"row":212,"column":0},"end":{"row":212,"column":26},"action":"remove","lines":["\t\tPlaySound('dice', 9000);"],"id":643}],[{"start":{"row":212,"column":0},"end":{"row":213,"column":0},"action":"remove","lines":["",""],"id":644}],[{"start":{"row":16,"column":31},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":645}],[{"start":{"row":17,"column":0},"end":{"row":17,"column":26},"action":"insert","lines":["\t\tPlaySound('dice', 9000);"],"id":646}],[{"start":{"row":48,"column":0},"end":{"row":48,"column":61},"action":"remove","lines":["\t\tvar boxcolor = getObj(\"player\", msg.playerid).get(\"color\");"],"id":647}],[{"start":{"row":48,"column":0},"end":{"row":49,"column":0},"action":"remove","lines":["",""],"id":648}],[{"start":{"row":93,"column":0},"end":{"row":93,"column":21},"action":"remove","lines":["\t\t\tboxcolor = \"#bbb\";"],"id":649}],[{"start":{"row":93,"column":0},"end":{"row":94,"column":0},"action":"remove","lines":["",""],"id":650}],[{"start":{"row":51,"column":0},"end":{"row":51,"column":24},"action":"remove","lines":["\t\t\tboxcolor = '#831F29';"],"id":651}],[{"start":{"row":51,"column":0},"end":{"row":52,"column":0},"action":"remove","lines":["",""],"id":652}],[{"start":{"row":0,"column":0},"end":{"row":280,"column":0},"action":"remove","lines":["//!attack --[[1d20]] --[[3d6]] --saying! --ammotype","/*global OuterDiv PlaySound TopBar iPart MidBar BottBar MakeRollNum log on findObjs randomInteger RollRight _ sendChat bShadow font getObj"," */","on('chat:message', function(msg) {","\tif (msg.type != \"api\") return;","\t//log(msg.content);","\tvar msgTxt = msg.content;","\tvar command = msgTxt.split(\" \", 1);","\tvar cWho = findObjs({_type: 'character',name: msg.who})[0];","\tif (cWho == undefined && msg.who.indexOf(\"(GM)\") == -1) {","\t\tcWho = RollRight(msg.playerid);","\t\tmsg.who = cWho.get(\"name\");","\t}","","/*-----------CHECK API-----------*/","\tif (command == \"!attack\") {","/*-----------BOXES-----------*/","\t\tPlaySound('dice', 9000);","\t\tvar PlayerBGColor = getObj(\"player\", msg.playerid).get(\"color\");","\t\tvar PlayerBarColor = \"background-image:-webkit-linear-gradient(left, #000000 0%,\"+PlayerBGColor+\" 15%,\"+PlayerBGColor+\" 85%,#000000 100%);\";","\t\tvar RollColor = \"background-image:-webkit-linear-gradient(left, #000000,#848484,#000000);\";","\t\tvar Main;","\t\tvar topimg = \"https://s3.amazonaws.com/files.staging.d20.io/images/181118/cN5ui3MXx87UBgVUgzwYTQ/med.jpg?141868063\";","\t\tvar TextShadow = \"-1px -1px #444, 1px -1px #444, -1px 1px #444, 1px 1px #444\";","\t\tvar SayParts = \"<div style='text-shadow: 1px 1px #000, -1px -1px #000, -1px 1px #000, 1px -1px #000; margin: 0em 0em 0em 0em;; font-size:8pt; display:inline-block; text-align: center; vertical-align:middle; padding: 0px 6px 0px 6px; border: 1px solid #000; border-radius: 3px; color: #FFF; background-image: url(\" + topimg + \");'>\";","\t\tvar MainSayDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family:\" + font + \"; font-size: x-small; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color:#CEC7B6; color: #000;'>\";","\t\tvar MainEvenDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #CEC7B6; color: #000;'>\";","\t\tvar MainOddDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #C0B9A8; color: #000;'>\";","\t\tvar RollDiv = \"<div style='margin: 0em 0.1em 0.1em 0em; font-size: 10pt; text-shadow: \" + TextShadow + \"; width: 15px; height: 15px; line-height: 15px; display:inline-block; text-align:center; padding: 0px 1px 0px 0px; border: 1px solid #000; border-radius: 3px; color: #FFF;\";","\t\tvar AmmoDiv = \"<div style='box-shadow: \" + bShadow + \"; font-family: \" + font + \"; font-size: 8pt; text-align: center; margin:0px; padding:0px 0px 0px 0px; border-left: 1px solid #000; border-right: 1px solid #000; border-top: 1px solid #000; border-radius: 0px; color: #000;\";","/*---------------------------*/","\t\tvar who = msg.who;","\t\tmsg.content = MakeRollNum(msg.content, msg.inlinerolls);","//check rolls---------------------","\t\tvar AttackRolls = msg.inlinerolls[0];","\t\tvar DamageRolls = msg.inlinerolls[1];","//define var----------------------","\t\tif (AttackRolls === undefined || DamageRolls === undefined) {","\t\t\tsendChat('', \"/direct <B><I>bad macro!\");","\t\t\treturn;","\t\t}","\t\tmsgFormula = msgTxt.split(\" --\");","\t\tvar Lucky = 20;","\t\tvar failRange = 1;","\t\tvar DamageRollRaw = \"\";","\t\tvar BottomText = \"\";","\t\tvar fumble = 0;","\t\tvar miss = 0;","\t\tvar crit_img = \"http:\\\\//media.giphy.com/media/3KqZp8MBaf1Ty/giphy.gif\";","\t\tvar fail_img = \"http:\\\\//fc06.deviantart.net/fs70/f/2013/076/5/2/_tutorial__creating_an_animated_light_pulse_in_ps_by_d_k0d3-d5ybir4.gif\";","\t\tif (msg.who == \"GM (GM)\") {","\t\t\twho = \"NPC\";","\t\t}","/*-----------START-----------*/","//Check for GUN","\t\tif (who !== \"NPC\") {","\t\t\tif (msgFormula[4] === undefined) msgFormula[4] = msgFormula[3];","\t\t\tif (msgFormula[4] !== undefined) {","\t\t\t\tvar gunleng = msgFormula[4].length - 1;","\t\t\t\tvar ammo = parseInt(msgFormula[4].substr(gunleng), 10);","\t\t\t\tif (!isNaN(ammo)) {","\t\t\t\t\tgunleng = msgFormula[4].length - 2;","\t\t\t\t\tvar gun = msgFormula[4].substr(0, gunleng);","\t\t\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (FindGun == undefined) {","\t\t\t\t\t\tsendChat('Error', \"/desc \" + msg.who + \" You do not own a  \" + gun);","\t\t\t\t\t\treturn;","\t\t\t\t\t}","\t\t\t\t\tvar GunName = FindGun.get(\"name\");","\t\t\t\t\tvar leng = GunName.length - 5;","\t\t\t\t\tleng = GunName.substr(0, leng);","\t\t\t\t\tvar ammo0 = findObjs({name: leng + \"_WEAPpay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (ammo0 == undefined) {","\t\t\t\t\t\tammo0 = FindGun;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","/*-----------ATTACK PARTS-----------*/","//--Attack Modifier","\t\tvar AttackBonus;","\t\tvar AttackRollText;","\t\tif (AttackRolls.results.rolls[1] === undefined) AttackBonus = \"\";","\t\telse AttackBonus = (AttackRolls.results.rolls[1].expr);","\t\tvar AttackRollRaw = AttackRolls.results.rolls[0].results[0]['v'];","\t\t//Attack total and type","\t\tvar AttackTotal = (AttackRolls.results.total);","\t\tvar Atype = \"<a style='color:RED'>\" + AttackRolls.expression + \"</a>\";","//--Set Miss","\t\tif (AttackRollRaw <= 3) {","\t\t\tAttackRollText = RollDiv + \"background-color:#A80000;'>\" + AttackRollRaw + \"</div>\";","\t\t\tBottomText = BottomText + \" \" + 'MISS';","\t\t\tvar miss = 1;","\t\t}","\t\telse AttackRollText = RollDiv + \"background-color:#696969;'>\" + AttackRollRaw + \"</div>\";","/*-----------DAMAGE PARTS-----------*/","//--Damage modifier","\t\tvar DamageBonus;","\t\tif (DamageRolls.results.rolls[1] === undefined) DamageBonus = \"\";","\t\telse DamageBonus = (DamageRolls.results.rolls[1].expr);","\t\t//--Set damage total","\t\tvar DamageTotal = DamageRolls.results.total;","\t\t//--Make damage text for all rolls","\t\tvar dam = DamageRolls.results.rolls[0];","\t\tvar i = 0;","\t\twhile (dam.results[i] !== undefined) {","\t\t\tvar dNum = dam.results[i]['v'];","\t\t\tvar num;","\t\t\tvar ddimg = \"http://image.blingee.com.s3.amazonaws.com/images19/content/output/000/000/000/061/788808721_1076628.gif?4\";","\t\t\tvar bg_max = \"background-position:center; background-image: url(\" + ddimg + \");\";","\t\t\tif (dNum == 1) num = RollDiv + \"background-color:#A80000;'>\" + dNum + \"</div></b></a>\";","\t\t\telse if (dNum == DamageRolls.results.rolls[0].sides) num = RollDiv + \"background-color:#00A120;\" + bg_max + \"'><b>\" + dNum + \"</b></div></b></a>\";","\t\t\telse num = RollDiv + \"background-color:#696969;'>\" + dNum + \"</div>\";","\t\t\tDamageRollRaw = DamageRollRaw + \"\" + (num);","\t\t\ti++;","\t\t}","\t\tvar Dtype = \"<a style='color:RED;'>\" + DamageRolls.expression + \"</a>\";","\t\tDamageRollRaw = DamageRollRaw + \"<b>\" + DamageBonus + \"</b>\";","\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a>\";","\t\tif (miss == 1)  DTOTALS = \"\";","//--Set Double Damage","\t\tif (AttackRollRaw >= 20) {","\t\t    var CritCheer = '<div style=\"width: 99%; height: 40px; border: 1px solid #666666; overflow: hidden; position: relative;\"><img  src=\"https://media.giphy.com/media/11sBLVxNs7v6WA/giphy.gif\" style=\"position: absolute; top:-35px; left:0px;\"/></div>';","\t\t\tDamageTotal = \"<a style='color:RED'><strong>\" + DamageTotal * 2 + \"!</strong></a>\";","\t\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a><br>\"+CritCheer;","\t\t\tAttackTotal = \"<a style='color:RED'><strong>\" + AttackTotal + \"!</strong></a>\";","\t\t\tBottomText = BottomText + \" \" + '<b>DOUBLE DAMAGE!</b><BR><b>(NATURAL 20!)</b><br>';","\t\t\tRollColor = \"background-position:center; background-image: url(\" + crit_img + \");\";","\t\t\tPlaySound('Critical', 9000);","\t\t}","//set motto","\t\tif (msgFormula[3] !== undefined) {","\t\t\tvar WarCryleng = msgFormula[3].length - 1;","\t\t\tvar sayingCheck = parseInt(msgFormula[3].substr(WarCryleng), 10);","\t\t\tif (isNaN(sayingCheck)) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t}","\t\t\telse if (msgFormula[3] !== undefined && msgFormula[4] == undefined) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t\tWarCryleng = msgFormula[3].length - 2;","\t\t\t\tvar WarCry = msgFormula[3].substr(0, WarCryleng).toUpperCase();","\t\t\t}","\t\t}","\t\telse {","\t\t\tWarCry = \"ATTACK!\";","\t\t}","//CHATBOX PARTS----------------","\t\tMain = MainSayDiv + SayParts + \"<b><i><marquee><img src='logo.jpg'></marquee> ●\" + WarCry + \"●</i></b></div></div>\";","\t\tMain = Main + MainOddDiv + Atype + \" <b>To Hit: </b>\" + AttackRollText + \"<b>\" + AttackBonus + \" = <a style='color:BLUE'>\" + AttackTotal + \"</b></a></div>\";","\t\tMain = Main + MainEvenDiv + DTOTALS + \"</div>\";","//--CRIT roll","\t\tvar IsLucky = randomInteger(Lucky);","\t\tif (IsLucky >= Lucky && AttackRollRaw > 4) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><b>Lucky Shot!: \" + aLoc[Math.floor(Math.random() * aLoc.length)] + \"</b></div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(http:\\\\//i.imgur.com/cFiEs5R.gif);\";","\t\t\tBottomText = BottomText + \" \" + SayParts + \"<b><i>●LUCKY SHOT●</i></b></div></div>\";","","//FAIL roll","\t\t}","\t\tif (AttackRollRaw <= failRange) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><strong style='font-size: 150%;'><b>Fumble!: \" + aFum[Math.floor(Math.random() * aFum.length)] + \"</div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(\" + fail_img + \");\";","\t\t\tBottomText = BottomText + \" \" + 'FUMBLE';","\t\t\tfumble = 1;","\t\t}","/*-----------","AMMO PARTS","-----------*/","\t\tif (FindGun !== undefined && who !== \"NPC\" && ammo0 !== undefined) {","\t\t\tvar ammoleng = msgFormula[4].length - 1;","\t\t\tvar ammo = parseInt(msgFormula[4].substr(ammoleng));","\t\t\tvar ammoC = parseInt(ammo);","\t\t\tif (ammoC === undefined || isNaN(ammoC)) ammoC = 1;","\t\t\tvar cAmmo = parseInt(ammo0.get(\"current\"));","\t\t\tvar mAmmo = parseInt(ammo0.get(\"max\"));","\t\t\tif (isNaN(cAmmo) || isNaN(mAmmo)) {","\t\t\t\tsendChat('Error', \"/desc Set ammo for  \" + gun);","\t\t\t\treturn;","\t\t\t}","\t\t\tif (mAmmo == 0) {}","\t\t\telse if (cAmmo <= 0 || cAmmo < ammoC) {","\t\t\t\tcAmmo = \"0\";","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tMain = AmmoDiv + \"background-color:RED;'><b><i>Not Enough \" + gun + \" ammo left in clip.</div>\";","\t\t\t}","\t\t\telse if (cAmmo <= 3 || cAmmo < ammoC) {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar per = (cAmmo / mAmmo) * 100;","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 3px;\"><div style=\"background-color: red; width: ' + per + '%; height: 5px; border-radius: 10px;\"></div></div>';","\t\t\t\tMain = Main + AmmoDiv + \"background-color:RED;'><b><i>\" + cAmmo + \" \" + gun + \" ammo left in clip.</b></i>\" + ammoT + \"</div>\";","\t\t\t}","\t\t\telse {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar per = (cAmmo / mAmmo) * 100;","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 1px;\"><div style=\"background-color: orange; width: ' + per + '%; height: 3px; border-radius: 10px; margins: 0px;\"></div></div>';","\t\t\t\tMain = Main + AmmoDiv + \"background-color:#A8A191;'><b><i>\" + cAmmo + \" of \" + mAmmo + \" \" + gun + \" ammo left</b></i>\" + ammoT + \"</div>\";","\t\t\t}","\t\t}","/*-----------SEND CHAT-----------*/","\t\tvar MsgBox = TopBar + RollColor +\";'></div>\"+ MidBar + PlayerBarColor +\";'><b>\" + who + \"  Attacks</b></div>\"+Main+\"</div>\"+BottBar + RollColor +\";'><b>\" + BottomText + \"</b></div>\";","\t\tvar SendT = MsgBox;","\t\tif (AttackRollRaw <= 3 && fumble != 1) {","\t\t\tSendT = \"<div style='opacity: 0.6;'><strong style='font-size: 90%;'>\" + SendT + \"</strong></div>\";","\t\t}","\t\tif (AttackRollRaw >= 20) {","\t\t\tSendT = \"<strong style='font-size: 130%;'>\" + SendT + \"</strong>\";","\t\t}","\t\tsendChat(who, '/direct ' + SendT);","\t\treturn;","\t}","//----------------------------","//RELOAD----------------","//----------------------------","\tif (command == \"!reload\") {","\t\tif (cWho !== undefined) {","\t\t\tvar msgFormula = msgTxt.split(\" --\");","\t\t\tvar gun = msgFormula[1];","\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (FindGun == undefined) {","\t\t\t\tsendChat('', '/desc ' + msg.who + ': <b>ammo not found</b>');","\t\t\t\treturn;","\t\t\t}","\t\t\tClips = 0;","\t\t\tvar attName = FindGun.get(\"name\");","\t\t\tvar Ammo0 = findObjs({name: attName + \"pay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Ammo1 = findObjs({name: attName + \"Rounds\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Clipsc = findObjs({name: attName + \"clip\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (Clipsc != undefined) {","\t\t\t\tvar Clips = parseInt(Clipsc.get(\"current\"), 10);","\t\t\t}","\t\t\tvar cWep = parseInt(Ammo0.get(\"current\"), 10);","\t\t\tvar mWep = parseInt(Ammo0.get(\"max\"), 10 );","\t\t\tvar cAmmo = parseInt(Ammo1.get(\"current\"), 10);","\t\t\tif (cAmmo <= 0) {","\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' NO AMMO TO RELOAD!</div>';","\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t}","\t\t\telse {","\t\t\t\tvar needed = mWep - cWep;","\t\t\t\tif (needed >= cAmmo) {","\t\t\t\t\tneeded = cAmmo;","\t\t\t\t}","\t\t\t\tif (Clips == 10) {","\t\t\t\t\tneeded = 1;","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = cAmmo;","\t\t\t\t\tAmmo0.set('current', mWep);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' is reloading: ' + needed + \" clips on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + 'Clips)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = Math.round((cAmmo / mWep) * 10) / 10;","\t\t\t\t\tAmmo0.set('current', cWep + needed);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>\" + msg.who + ' is reloading ' + needed + \" Ammo on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + ' reloads)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t}","\t\t}","\t}","});","//---AUTO LOCATION ROLLS","var aLoc = [\"Head\", \"Left Arm\", \"Right Arm\", \"Left Leg\", \"Right Leg\", \"..Dangly Bits! (Main Body)\", \"FREE ATTACK!\"];","//---FUMBLE ROLLS","var aFum = [","\t\"Hit a totally different friendly target in general direction of aimed target (if possible)\",","\t\"Ungracefully fumbled the attack!, lose next attack\",","\t\"Got something in eye, lose this attack\",","\t\"Missed so badly, it makes the enemy see you and an easy target!\",","\t\"Total gun jam/broke weapon(or limb!).. useless this fight. Must get fixed.\",","\t\"Tripped!, next attack to get up\",","\t\"Miss and weapon jam! (GUN) jams, (MELEE) Missed and stuck in Wall/Floor/Tree/Off Balance/etc loose next attack\",","\t\"Missed, and draws sole aggression of the target\",","\t\"Somehow hit a Flying Squirrel!\",","\t\"Failed so badly nearest ally falls back to help.\"","];",""],"id":653},{"start":{"row":0,"column":0},"end":{"row":280,"column":0},"action":"insert","lines":["//!attack --[[1d20]] --[[3d6]] --saying! --ammotype","/*global OuterDiv PlaySound TopBar iPart MidBar BottBar MakeRollNum log on findObjs randomInteger RollRight _ sendChat bShadow font getObj"," */","on('chat:message', function(msg) {","\tif (msg.type != \"api\") return;","\t//log(msg.content);","\tvar msgTxt = msg.content;","\tvar command = msgTxt.split(\" \", 1);","\tvar cWho = findObjs({_type: 'character',name: msg.who})[0];","\tif (cWho == undefined && msg.who.indexOf(\"(GM)\") == -1) {","\t\tcWho = RollRight(msg.playerid);","\t\tmsg.who = cWho.get(\"name\");","\t}","","/*-----------CHECK API-----------*/","\tif (command == \"!attack\") {","/*-----------BOXES-----------*/","\t\tPlaySound('dice', 9000);","\t\tvar PlayerBGColor = getObj(\"player\", msg.playerid).get(\"color\");","\t\tvar PlayerBarColor = \"background-image:-webkit-linear-gradient(left, #000000 0%,\"+PlayerBGColor+\" 15%,\"+PlayerBGColor+\" 85%,#000000 100%);\";","\t\tvar RollColor = \"background-image:-webkit-linear-gradient(left, #000000,#848484,#000000);\";","\t\tvar Main;","\t\tvar topimg = \"https://s3.amazonaws.com/files.staging.d20.io/images/181118/cN5ui3MXx87UBgVUgzwYTQ/med.jpg?141868063\";","\t\tvar TextShadow = \"-1px -1px #444, 1px -1px #444, -1px 1px #444, 1px 1px #444\";","\t\tvar SayParts = \"<div style='text-shadow: 1px 1px #000, -1px -1px #000, -1px 1px #000, 1px -1px #000; margin: 0em 0em 0em 0em;; font-size:8pt; display:inline-block; text-align: center; vertical-align:middle; padding: 0px 6px 0px 6px; border: 1px solid #000; border-radius: 3px; color: #FFF; background-image: url(\" + topimg + \");'>\";","\t\tvar MainSayDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family:\" + font + \"; font-size: x-small; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color:#CEC7B6; color: #000;'>\";","\t\tvar MainEvenDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #CEC7B6; color: #000;'>\";","\t\tvar MainOddDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #C0B9A8; color: #000;'>\";","\t\tvar RollDiv = \"<div style='margin: 0em 0.1em 0.1em 0em; font-size: 10pt; text-shadow: \" + TextShadow + \"; width: 15px; height: 15px; line-height: 15px; display:inline-block; text-align:center; padding: 0px 1px 0px 0px; border: 1px solid #000; border-radius: 3px; color: #FFF;\";","\t\tvar AmmoDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; font-family: \" + font + \"; font-size: 8pt; text-align: center; margin:0px; padding:0px 0px 0px 0px; border-left: 1px solid #000; border-right: 1px solid #000; border-top: 1px solid #000; border-radius: 0px; color: #000;\";","/*---------------------------*/","\t\tvar who = msg.who;","\t\tmsg.content = MakeRollNum(msg.content, msg.inlinerolls);","//check rolls---------------------","\t\tvar AttackRolls = msg.inlinerolls[0];","\t\tvar DamageRolls = msg.inlinerolls[1];","//define var----------------------","\t\tif (AttackRolls === undefined || DamageRolls === undefined) {","\t\t\tsendChat('', \"/direct <B><I>bad macro!\");","\t\t\treturn;","\t\t}","\t\tmsgFormula = msgTxt.split(\" --\");","\t\tvar Lucky = 20;","\t\tvar failRange = 1;","\t\tvar DamageRollRaw = \"\";","\t\tvar BottomText = \"\";","\t\tvar fumble = 0;","\t\tvar miss = 0;","\t\tvar crit_img = \"http:\\\\//media.giphy.com/media/3KqZp8MBaf1Ty/giphy.gif\";","\t\tvar fail_img = \"http:\\\\//fc06.deviantart.net/fs70/f/2013/076/5/2/_tutorial__creating_an_animated_light_pulse_in_ps_by_d_k0d3-d5ybir4.gif\";","\t\tif (msg.who == \"GM (GM)\") {","\t\t\twho = \"NPC\";","\t\t}","/*-----------START-----------*/","//Check for GUN","\t\tif (who !== \"NPC\") {","\t\t\tif (msgFormula[4] === undefined) msgFormula[4] = msgFormula[3];","\t\t\tif (msgFormula[4] !== undefined) {","\t\t\t\tvar gunleng = msgFormula[4].length - 1;","\t\t\t\tvar ammo = parseInt(msgFormula[4].substr(gunleng), 10);","\t\t\t\tif (!isNaN(ammo)) {","\t\t\t\t\tgunleng = msgFormula[4].length - 2;","\t\t\t\t\tvar gun = msgFormula[4].substr(0, gunleng);","\t\t\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (FindGun == undefined) {","\t\t\t\t\t\tsendChat('Error', \"/desc \" + msg.who + \" You do not own a  \" + gun);","\t\t\t\t\t\treturn;","\t\t\t\t\t}","\t\t\t\t\tvar GunName = FindGun.get(\"name\");","\t\t\t\t\tvar leng = GunName.length - 5;","\t\t\t\t\tleng = GunName.substr(0, leng);","\t\t\t\t\tvar ammo0 = findObjs({name: leng + \"_WEAPpay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (ammo0 == undefined) {","\t\t\t\t\t\tammo0 = FindGun;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","/*-----------ATTACK PARTS-----------*/","//--Attack Modifier","\t\tvar AttackBonus;","\t\tvar AttackRollText;","\t\tif (AttackRolls.results.rolls[1] === undefined) AttackBonus = \"\";","\t\telse AttackBonus = (AttackRolls.results.rolls[1].expr);","\t\tvar AttackRollRaw = AttackRolls.results.rolls[0].results[0]['v'];","\t\t//Attack total and type","\t\tvar AttackTotal = (AttackRolls.results.total);","\t\tvar Atype = \"<a style='color:RED'>\" + AttackRolls.expression + \"</a>\";","//--Set Miss","\t\tif (AttackRollRaw <= 3) {","\t\t\tAttackRollText = RollDiv + \"background-color:#A80000;'>\" + AttackRollRaw + \"</div>\";","\t\t\tBottomText = BottomText + \" \" + 'MISS';","\t\t\tvar miss = 1;","\t\t}","\t\telse AttackRollText = RollDiv + \"background-color:#696969;'>\" + AttackRollRaw + \"</div>\";","/*-----------DAMAGE PARTS-----------*/","//--Damage modifier","\t\tvar DamageBonus;","\t\tif (DamageRolls.results.rolls[1] === undefined) DamageBonus = \"\";","\t\telse DamageBonus = (DamageRolls.results.rolls[1].expr);","\t\t//--Set damage total","\t\tvar DamageTotal = DamageRolls.results.total;","\t\t//--Make damage text for all rolls","\t\tvar dam = DamageRolls.results.rolls[0];","\t\tvar i = 0;","\t\twhile (dam.results[i] !== undefined) {","\t\t\tvar dNum = dam.results[i]['v'];","\t\t\tvar num;","\t\t\tvar ddimg = \"http://image.blingee.com.s3.amazonaws.com/images19/content/output/000/000/000/061/788808721_1076628.gif?4\";","\t\t\tvar bg_max = \"background-position:center; background-image: url(\" + ddimg + \");\";","\t\t\tif (dNum == 1) num = RollDiv + \"background-color:#A80000;'>\" + dNum + \"</div></b></a>\";","\t\t\telse if (dNum == DamageRolls.results.rolls[0].sides) num = RollDiv + \"background-color:#00A120;\" + bg_max + \"'><b>\" + dNum + \"</b></div></b></a>\";","\t\t\telse num = RollDiv + \"background-color:#696969;'>\" + dNum + \"</div>\";","\t\t\tDamageRollRaw = DamageRollRaw + \"\" + (num);","\t\t\ti++;","\t\t}","\t\tvar Dtype = \"<a style='color:RED;'>\" + DamageRolls.expression + \"</a>\";","\t\tDamageRollRaw = DamageRollRaw + \"<b>\" + DamageBonus + \"</b>\";","\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a>\";","\t\tif (miss == 1)  DTOTALS = \"\";","//--Set Double Damage","\t\tif (AttackRollRaw >= 20) {","\t\t    var CritCheer = '<div style=\"width: 99%; height: 40px; border: 1px solid #666666; overflow: hidden; position: relative;\"><img  src=\"https://media.giphy.com/media/11sBLVxNs7v6WA/giphy.gif\" style=\"position: absolute; top:-35px; left:0px;\"/></div>';","\t\t\tDamageTotal = \"<a style='color:RED'><strong>\" + DamageTotal * 2 + \"!</strong></a>\";","\t\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a><br>\"+CritCheer;","\t\t\tAttackTotal = \"<a style='color:RED'><strong>\" + AttackTotal + \"!</strong></a>\";","\t\t\tBottomText = BottomText + \" \" + '<b>DOUBLE DAMAGE!</b><BR><b>(NATURAL 20!)</b><br>';","\t\t\tRollColor = \"background-position:center; background-image: url(\" + crit_img + \");\";","\t\t\tPlaySound('Critical', 9000);","\t\t}","//set motto","\t\tif (msgFormula[3] !== undefined) {","\t\t\tvar WarCryleng = msgFormula[3].length - 1;","\t\t\tvar sayingCheck = parseInt(msgFormula[3].substr(WarCryleng), 10);","\t\t\tif (isNaN(sayingCheck)) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t}","\t\t\telse if (msgFormula[3] !== undefined && msgFormula[4] == undefined) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t\tWarCryleng = msgFormula[3].length - 2;","\t\t\t\tvar WarCry = msgFormula[3].substr(0, WarCryleng).toUpperCase();","\t\t\t}","\t\t}","\t\telse {","\t\t\tWarCry = \"ATTACK!\";","\t\t}","//CHATBOX PARTS----------------","\t\tMain = MainSayDiv + SayParts + \"<b><i><marquee><img src='logo.jpg'></marquee> ●\" + WarCry + \"●</i></b></div></div>\";","\t\tMain = Main + MainOddDiv + Atype + \" <b>To Hit: </b>\" + AttackRollText + \"<b>\" + AttackBonus + \" = <a style='color:BLUE'>\" + AttackTotal + \"</b></a></div>\";","\t\tMain = Main + MainEvenDiv + DTOTALS + \"</div>\";","//--CRIT roll","\t\tvar IsLucky = randomInteger(Lucky);","\t\tif (IsLucky >= Lucky && AttackRollRaw > 4) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><b>Lucky Shot!: \" + aLoc[Math.floor(Math.random() * aLoc.length)] + \"</b></div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(http:\\\\//i.imgur.com/cFiEs5R.gif);\";","\t\t\tBottomText = BottomText + \" \" + SayParts + \"<b><i>●LUCKY SHOT●</i></b></div></div>\";","","//FAIL roll","\t\t}","\t\tif (AttackRollRaw <= failRange) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><strong style='font-size: 150%;'><b>Fumble!: \" + aFum[Math.floor(Math.random() * aFum.length)] + \"</div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(\" + fail_img + \");\";","\t\t\tBottomText = BottomText + \" \" + 'FUMBLE';","\t\t\tfumble = 1;","\t\t}","/*-----------","AMMO PARTS","-----------*/","\t\tif (FindGun !== undefined && who !== \"NPC\" && ammo0 !== undefined) {","\t\t\tvar ammoleng = msgFormula[4].length - 1;","\t\t\tvar ammo = parseInt(msgFormula[4].substr(ammoleng));","\t\t\tvar ammoC = parseInt(ammo);","\t\t\tif (ammoC === undefined || isNaN(ammoC)) ammoC = 1;","\t\t\tvar cAmmo = parseInt(ammo0.get(\"current\"));","\t\t\tvar mAmmo = parseInt(ammo0.get(\"max\"));","\t\t\tif (isNaN(cAmmo) || isNaN(mAmmo)) {","\t\t\t\tsendChat('Error', \"/desc Set ammo for  \" + gun);","\t\t\t\treturn;","\t\t\t}","\t\t\tif (mAmmo == 0) {}","\t\t\telse if (cAmmo <= 0 || cAmmo < ammoC) {","\t\t\t\tcAmmo = \"0\";","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tMain = AmmoDiv + \"background-color:RED;'><b><i>Not Enough \" + gun + \" ammo left in clip.</div>\";","\t\t\t}","\t\t\telse if (cAmmo <= 3 || cAmmo < ammoC) {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar per = (cAmmo / mAmmo) * 100;","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 3px;\"><div style=\"background-color: red; width: ' + per + '%; height: 5px; border-radius: 10px;\"></div></div>';","\t\t\t\tMain = Main + AmmoDiv + \"background-color:RED;'><b><i>\" + cAmmo + \" \" + gun + \" ammo left in clip.</b></i>\" + ammoT + \"</div>\";","\t\t\t}","\t\t\telse {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar per = (cAmmo / mAmmo) * 100;","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 1px;\"><div style=\"background-color: orange; width: ' + per + '%; height: 3px; border-radius: 10px; margins: 0px;\"></div></div>';","\t\t\t\tMain = Main + AmmoDiv + \"background-color:#A8A191;'><b><i>\" + cAmmo + \" of \" + mAmmo + \" \" + gun + \" ammo left</b></i>\" + ammoT + \"</div>\";","\t\t\t}","\t\t}","/*-----------SEND CHAT-----------*/","\t\tvar MsgBox = TopBar + RollColor +\";'></div>\"+ MidBar + PlayerBarColor +\";'><b>\" + who + \"  Attacks</b></div>\"+Main+\"</div>\"+BottBar + RollColor +\";'><b>\" + BottomText + \"</b></div>\";","\t\tvar SendT = MsgBox;","\t\tif (AttackRollRaw <= 3 && fumble != 1) {","\t\t\tSendT = \"<div style='opacity: 0.6;'><strong style='font-size: 90%;'>\" + SendT + \"</strong></div>\";","\t\t}","\t\tif (AttackRollRaw >= 20) {","\t\t\tSendT = \"<strong style='font-size: 130%;'>\" + SendT + \"</strong>\";","\t\t}","\t\tsendChat(who, '/direct ' + SendT);","\t\treturn;","\t}","//----------------------------","//RELOAD----------------","//----------------------------","\tif (command == \"!reload\") {","\t\tif (cWho !== undefined) {","\t\t\tvar msgFormula = msgTxt.split(\" --\");","\t\t\tvar gun = msgFormula[1];","\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (FindGun == undefined) {","\t\t\t\tsendChat('', '/desc ' + msg.who + ': <b>ammo not found</b>');","\t\t\t\treturn;","\t\t\t}","\t\t\tClips = 0;","\t\t\tvar attName = FindGun.get(\"name\");","\t\t\tvar Ammo0 = findObjs({name: attName + \"pay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Ammo1 = findObjs({name: attName + \"Rounds\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Clipsc = findObjs({name: attName + \"clip\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (Clipsc != undefined) {","\t\t\t\tvar Clips = parseInt(Clipsc.get(\"current\"), 10);","\t\t\t}","\t\t\tvar cWep = parseInt(Ammo0.get(\"current\"), 10);","\t\t\tvar mWep = parseInt(Ammo0.get(\"max\"), 10 );","\t\t\tvar cAmmo = parseInt(Ammo1.get(\"current\"), 10);","\t\t\tif (cAmmo <= 0) {","\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' NO AMMO TO RELOAD!</div>';","\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t}","\t\t\telse {","\t\t\t\tvar needed = mWep - cWep;","\t\t\t\tif (needed >= cAmmo) {","\t\t\t\t\tneeded = cAmmo;","\t\t\t\t}","\t\t\t\tif (Clips == 10) {","\t\t\t\t\tneeded = 1;","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = cAmmo;","\t\t\t\t\tAmmo0.set('current', mWep);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' is reloading: ' + needed + \" clips on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + 'Clips)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = Math.round((cAmmo / mWep) * 10) / 10;","\t\t\t\t\tAmmo0.set('current', cWep + needed);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>\" + msg.who + ' is reloading ' + needed + \" Ammo on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + ' reloads)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t}","\t\t}","\t}","});","//---AUTO LOCATION ROLLS","var aLoc = [\"Head\", \"Left Arm\", \"Right Arm\", \"Left Leg\", \"Right Leg\", \"..Dangly Bits! (Main Body)\", \"FREE ATTACK!\"];","//---FUMBLE ROLLS","var aFum = [","\t\"Hit a totally different friendly target in general direction of aimed target (if possible)\",","\t\"Ungracefully fumbled the attack!, lose next attack\",","\t\"Got something in eye, lose this attack\",","\t\"Missed so badly, it makes the enemy see you and an easy target!\",","\t\"Total gun jam/broke weapon(or limb!).. useless this fight. Must get fixed.\",","\t\"Tripped!, next attack to get up\",","\t\"Miss and weapon jam! (GUN) jams, (MELEE) Missed and stuck in Wall/Floor/Tree/Off Balance/etc loose next attack\",","\t\"Missed, and draws sole aggression of the target\",","\t\"Somehow hit a Flying Squirrel!\",","\t\"Failed so badly nearest ally falls back to help.\"","];",""]}],[{"start":{"row":29,"column":59},"end":{"row":29,"column":80},"action":"insert","lines":["display:inline-block;"],"id":654}],[{"start":{"row":29,"column":80},"end":{"row":29,"column":81},"action":"insert","lines":[" "],"id":655}],[{"start":{"row":189,"column":207},"end":{"row":189,"column":213},"action":"remove","lines":["</div>"],"id":656}],[{"start":{"row":196,"column":224},"end":{"row":196,"column":230},"action":"remove","lines":["</div>"],"id":657}],[{"start":{"row":29,"column":59},"end":{"row":29,"column":80},"action":"remove","lines":["display:inline-block;"],"id":658}],[{"start":{"row":29,"column":59},"end":{"row":29,"column":60},"action":"remove","lines":[" "],"id":659}],[{"start":{"row":189,"column":29},"end":{"row":189,"column":30},"action":"insert","lines":[" "],"id":660}],[{"start":{"row":189,"column":29},"end":{"row":189,"column":30},"action":"remove","lines":[" "],"id":661}],[{"start":{"row":209,"column":36},"end":{"row":210,"column":0},"action":"insert","lines":["",""],"id":666},{"start":{"row":210,"column":0},"end":{"row":210,"column":2},"action":"insert","lines":["\t\t"]}],[{"start":{"row":210,"column":2},"end":{"row":210,"column":3},"action":"insert","lines":["s"],"id":667}],[{"start":{"row":210,"column":3},"end":{"row":210,"column":4},"action":"insert","lines":["e"],"id":668}],[{"start":{"row":210,"column":4},"end":{"row":210,"column":5},"action":"insert","lines":["n"],"id":669}],[{"start":{"row":210,"column":5},"end":{"row":210,"column":6},"action":"insert","lines":["d"],"id":670}],[{"start":{"row":210,"column":6},"end":{"row":210,"column":7},"action":"insert","lines":["C"],"id":671}],[{"start":{"row":210,"column":7},"end":{"row":210,"column":8},"action":"insert","lines":["h"],"id":672}],[{"start":{"row":210,"column":8},"end":{"row":210,"column":9},"action":"insert","lines":["a"],"id":673}],[{"start":{"row":210,"column":9},"end":{"row":210,"column":10},"action":"insert","lines":["t"],"id":674}],[{"start":{"row":210,"column":10},"end":{"row":210,"column":12},"action":"insert","lines":["()"],"id":675}],[{"start":{"row":210,"column":11},"end":{"row":210,"column":12},"action":"insert","lines":["w"],"id":676}],[{"start":{"row":210,"column":12},"end":{"row":210,"column":13},"action":"insert","lines":["h"],"id":677}],[{"start":{"row":210,"column":13},"end":{"row":210,"column":14},"action":"insert","lines":["o"],"id":678}],[{"start":{"row":210,"column":14},"end":{"row":210,"column":15},"action":"insert","lines":[","],"id":679}],[{"start":{"row":210,"column":15},"end":{"row":210,"column":16},"action":"insert","lines":[" "],"id":680}],[{"start":{"row":210,"column":16},"end":{"row":210,"column":18},"action":"insert","lines":["\"\""],"id":681}],[{"start":{"row":210,"column":17},"end":{"row":210,"column":18},"action":"insert","lines":["/"],"id":682}],[{"start":{"row":210,"column":18},"end":{"row":210,"column":19},"action":"insert","lines":["d"],"id":683}],[{"start":{"row":210,"column":19},"end":{"row":210,"column":20},"action":"insert","lines":["i"],"id":684}],[{"start":{"row":210,"column":20},"end":{"row":210,"column":21},"action":"insert","lines":["r"],"id":685}],[{"start":{"row":210,"column":21},"end":{"row":210,"column":22},"action":"insert","lines":["e"],"id":686}],[{"start":{"row":210,"column":22},"end":{"row":210,"column":23},"action":"insert","lines":["c"],"id":687}],[{"start":{"row":210,"column":23},"end":{"row":210,"column":24},"action":"insert","lines":["t"],"id":688}],[{"start":{"row":210,"column":24},"end":{"row":210,"column":25},"action":"insert","lines":[" "],"id":689}],[{"start":{"row":210,"column":26},"end":{"row":210,"column":27},"action":"insert","lines":[" "],"id":690}],[{"start":{"row":210,"column":27},"end":{"row":210,"column":28},"action":"insert","lines":["+"],"id":691}],[{"start":{"row":210,"column":28},"end":{"row":210,"column":29},"action":"insert","lines":[" "],"id":692}],[{"start":{"row":210,"column":29},"end":{"row":210,"column":34},"action":"insert","lines":["ammoT"],"id":693}],[{"start":{"row":210,"column":35},"end":{"row":210,"column":36},"action":"insert","lines":[";"],"id":694}],[{"start":{"row":210,"column":33},"end":{"row":210,"column":34},"action":"remove","lines":["T"],"id":695},{"start":{"row":210,"column":33},"end":{"row":210,"column":34},"action":"insert","lines":["D"]}],[{"start":{"row":210,"column":34},"end":{"row":210,"column":35},"action":"insert","lines":["i"],"id":696}],[{"start":{"row":210,"column":35},"end":{"row":210,"column":36},"action":"insert","lines":["v"],"id":697}],[{"start":{"row":210,"column":29},"end":{"row":210,"column":36},"action":"remove","lines":["ammoDiv"],"id":698},{"start":{"row":210,"column":29},"end":{"row":210,"column":36},"action":"insert","lines":["AmmoDiv"]}],[{"start":{"row":197,"column":135},"end":{"row":197,"column":141},"action":"insert","lines":["</div>"],"id":699}],[{"start":{"row":190,"column":123},"end":{"row":190,"column":129},"action":"insert","lines":["</div>"],"id":700}],[{"start":{"row":210,"column":29},"end":{"row":210,"column":36},"action":"remove","lines":["AmmoDiv"],"id":701},{"start":{"row":210,"column":29},"end":{"row":210,"column":34},"action":"insert","lines":["ammoT"]}],[{"start":{"row":197,"column":4},"end":{"row":198,"column":0},"action":"insert","lines":["",""],"id":702},{"start":{"row":198,"column":0},"end":{"row":198,"column":4},"action":"insert","lines":["\t\t\t\t"]}],[{"start":{"row":197,"column":4},"end":{"row":197,"column":13},"action":"insert","lines":["var ammoT"],"id":703}],[{"start":{"row":197,"column":13},"end":{"row":197,"column":14},"action":"insert","lines":[" "],"id":704}],[{"start":{"row":197,"column":14},"end":{"row":197,"column":15},"action":"insert","lines":["="],"id":705}],[{"start":{"row":197,"column":15},"end":{"row":197,"column":16},"action":"insert","lines":[" "],"id":706}],[{"start":{"row":197,"column":16},"end":{"row":197,"column":17},"action":"insert","lines":["A"],"id":707}],[{"start":{"row":197,"column":17},"end":{"row":197,"column":18},"action":"insert","lines":[";"],"id":708}],[{"start":{"row":0,"column":0},"end":{"row":282,"column":0},"action":"remove","lines":["//!attack --[[1d20]] --[[3d6]] --saying! --ammotype","/*global OuterDiv PlaySound TopBar iPart MidBar BottBar MakeRollNum log on findObjs randomInteger RollRight _ sendChat bShadow font getObj"," */","on('chat:message', function(msg) {","\tif (msg.type != \"api\") return;","\t//log(msg.content);","\tvar msgTxt = msg.content;","\tvar command = msgTxt.split(\" \", 1);","\tvar cWho = findObjs({_type: 'character',name: msg.who})[0];","\tif (cWho == undefined && msg.who.indexOf(\"(GM)\") == -1) {","\t\tcWho = RollRight(msg.playerid);","\t\tmsg.who = cWho.get(\"name\");","\t}","","/*-----------CHECK API-----------*/","\tif (command == \"!attack\") {","/*-----------BOXES-----------*/","\t\tPlaySound('dice', 9000);","\t\tvar PlayerBGColor = getObj(\"player\", msg.playerid).get(\"color\");","\t\tvar PlayerBarColor = \"background-image:-webkit-linear-gradient(left, #000000 0%,\"+PlayerBGColor+\" 15%,\"+PlayerBGColor+\" 85%,#000000 100%);\";","\t\tvar RollColor = \"background-image:-webkit-linear-gradient(left, #000000,#848484,#000000);\";","\t\tvar Main;","\t\tvar topimg = \"https://s3.amazonaws.com/files.staging.d20.io/images/181118/cN5ui3MXx87UBgVUgzwYTQ/med.jpg?141868063\";","\t\tvar TextShadow = \"-1px -1px #444, 1px -1px #444, -1px 1px #444, 1px 1px #444\";","\t\tvar SayParts = \"<div style='text-shadow: 1px 1px #000, -1px -1px #000, -1px 1px #000, 1px -1px #000; margin: 0em 0em 0em 0em;; font-size:8pt; display:inline-block; text-align: center; vertical-align:middle; padding: 0px 6px 0px 6px; border: 1px solid #000; border-radius: 3px; color: #FFF; background-image: url(\" + topimg + \");'>\";","\t\tvar MainSayDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family:\" + font + \"; font-size: x-small; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color:#CEC7B6; color: #000;'>\";","\t\tvar MainEvenDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #CEC7B6; color: #000;'>\";","\t\tvar MainOddDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #C0B9A8; color: #000;'>\";","\t\tvar RollDiv = \"<div style='margin: 0em 0.1em 0.1em 0em; font-size: 10pt; text-shadow: \" + TextShadow + \"; width: 15px; height: 15px; line-height: 15px; display:inline-block; text-align:center; padding: 0px 1px 0px 0px; border: 1px solid #000; border-radius: 3px; color: #FFF;\";","\t\tvar AmmoDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; font-family: \" + font + \"; font-size: 8pt; text-align: center; margin:0px; padding:0px 0px 0px 0px; border-left: 1px solid #000; border-right: 1px solid #000; border-top: 1px solid #000; border-radius: 0px; color: #000;\";","/*---------------------------*/","\t\tvar who = msg.who;","\t\tmsg.content = MakeRollNum(msg.content, msg.inlinerolls);","//check rolls---------------------","\t\tvar AttackRolls = msg.inlinerolls[0];","\t\tvar DamageRolls = msg.inlinerolls[1];","//define var----------------------","\t\tif (AttackRolls === undefined || DamageRolls === undefined) {","\t\t\tsendChat('', \"/direct <B><I>bad macro!\");","\t\t\treturn;","\t\t}","\t\tmsgFormula = msgTxt.split(\" --\");","\t\tvar Lucky = 20;","\t\tvar failRange = 1;","\t\tvar DamageRollRaw = \"\";","\t\tvar BottomText = \"\";","\t\tvar fumble = 0;","\t\tvar miss = 0;","\t\tvar crit_img = \"http:\\\\//media.giphy.com/media/3KqZp8MBaf1Ty/giphy.gif\";","\t\tvar fail_img = \"http:\\\\//fc06.deviantart.net/fs70/f/2013/076/5/2/_tutorial__creating_an_animated_light_pulse_in_ps_by_d_k0d3-d5ybir4.gif\";","\t\tif (msg.who == \"GM (GM)\") {","\t\t\twho = \"NPC\";","\t\t}","/*-----------START-----------*/","//Check for GUN","\t\tif (who !== \"NPC\") {","\t\t\tif (msgFormula[4] === undefined) msgFormula[4] = msgFormula[3];","\t\t\tif (msgFormula[4] !== undefined) {","\t\t\t\tvar gunleng = msgFormula[4].length - 1;","\t\t\t\tvar ammo = parseInt(msgFormula[4].substr(gunleng), 10);","\t\t\t\tif (!isNaN(ammo)) {","\t\t\t\t\tgunleng = msgFormula[4].length - 2;","\t\t\t\t\tvar gun = msgFormula[4].substr(0, gunleng);","\t\t\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (FindGun == undefined) {","\t\t\t\t\t\tsendChat('Error', \"/desc \" + msg.who + \" You do not own a  \" + gun);","\t\t\t\t\t\treturn;","\t\t\t\t\t}","\t\t\t\t\tvar GunName = FindGun.get(\"name\");","\t\t\t\t\tvar leng = GunName.length - 5;","\t\t\t\t\tleng = GunName.substr(0, leng);","\t\t\t\t\tvar ammo0 = findObjs({name: leng + \"_WEAPpay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (ammo0 == undefined) {","\t\t\t\t\t\tammo0 = FindGun;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","/*-----------ATTACK PARTS-----------*/","//--Attack Modifier","\t\tvar AttackBonus;","\t\tvar AttackRollText;","\t\tif (AttackRolls.results.rolls[1] === undefined) AttackBonus = \"\";","\t\telse AttackBonus = (AttackRolls.results.rolls[1].expr);","\t\tvar AttackRollRaw = AttackRolls.results.rolls[0].results[0]['v'];","\t\t//Attack total and type","\t\tvar AttackTotal = (AttackRolls.results.total);","\t\tvar Atype = \"<a style='color:RED'>\" + AttackRolls.expression + \"</a>\";","//--Set Miss","\t\tif (AttackRollRaw <= 3) {","\t\t\tAttackRollText = RollDiv + \"background-color:#A80000;'>\" + AttackRollRaw + \"</div>\";","\t\t\tBottomText = BottomText + \" \" + 'MISS';","\t\t\tvar miss = 1;","\t\t}","\t\telse AttackRollText = RollDiv + \"background-color:#696969;'>\" + AttackRollRaw + \"</div>\";","/*-----------DAMAGE PARTS-----------*/","//--Damage modifier","\t\tvar DamageBonus;","\t\tif (DamageRolls.results.rolls[1] === undefined) DamageBonus = \"\";","\t\telse DamageBonus = (DamageRolls.results.rolls[1].expr);","\t\t//--Set damage total","\t\tvar DamageTotal = DamageRolls.results.total;","\t\t//--Make damage text for all rolls","\t\tvar dam = DamageRolls.results.rolls[0];","\t\tvar i = 0;","\t\twhile (dam.results[i] !== undefined) {","\t\t\tvar dNum = dam.results[i]['v'];","\t\t\tvar num;","\t\t\tvar ddimg = \"http://image.blingee.com.s3.amazonaws.com/images19/content/output/000/000/000/061/788808721_1076628.gif?4\";","\t\t\tvar bg_max = \"background-position:center; background-image: url(\" + ddimg + \");\";","\t\t\tif (dNum == 1) num = RollDiv + \"background-color:#A80000;'>\" + dNum + \"</div></b></a>\";","\t\t\telse if (dNum == DamageRolls.results.rolls[0].sides) num = RollDiv + \"background-color:#00A120;\" + bg_max + \"'><b>\" + dNum + \"</b></div></b></a>\";","\t\t\telse num = RollDiv + \"background-color:#696969;'>\" + dNum + \"</div>\";","\t\t\tDamageRollRaw = DamageRollRaw + \"\" + (num);","\t\t\ti++;","\t\t}","\t\tvar Dtype = \"<a style='color:RED;'>\" + DamageRolls.expression + \"</a>\";","\t\tDamageRollRaw = DamageRollRaw + \"<b>\" + DamageBonus + \"</b>\";","\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a>\";","\t\tif (miss == 1)  DTOTALS = \"\";","//--Set Double Damage","\t\tif (AttackRollRaw >= 20) {","\t\t    var CritCheer = '<div style=\"width: 99%; height: 40px; border: 1px solid #666666; overflow: hidden; position: relative;\"><img  src=\"https://media.giphy.com/media/11sBLVxNs7v6WA/giphy.gif\" style=\"position: absolute; top:-35px; left:0px;\"/></div>';","\t\t\tDamageTotal = \"<a style='color:RED'><strong>\" + DamageTotal * 2 + \"!</strong></a>\";","\t\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a><br>\"+CritCheer;","\t\t\tAttackTotal = \"<a style='color:RED'><strong>\" + AttackTotal + \"!</strong></a>\";","\t\t\tBottomText = BottomText + \" \" + '<b>DOUBLE DAMAGE!</b><BR><b>(NATURAL 20!)</b><br>';","\t\t\tRollColor = \"background-position:center; background-image: url(\" + crit_img + \");\";","\t\t\tPlaySound('Critical', 9000);","\t\t}","//set motto","\t\tif (msgFormula[3] !== undefined) {","\t\t\tvar WarCryleng = msgFormula[3].length - 1;","\t\t\tvar sayingCheck = parseInt(msgFormula[3].substr(WarCryleng), 10);","\t\t\tif (isNaN(sayingCheck)) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t}","\t\t\telse if (msgFormula[3] !== undefined && msgFormula[4] == undefined) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t\tWarCryleng = msgFormula[3].length - 2;","\t\t\t\tvar WarCry = msgFormula[3].substr(0, WarCryleng).toUpperCase();","\t\t\t}","\t\t}","\t\telse {","\t\t\tWarCry = \"ATTACK!\";","\t\t}","//CHATBOX PARTS----------------","\t\tMain = MainSayDiv + SayParts + \"<b><i><marquee><img src='logo.jpg'></marquee> ●\" + WarCry + \"●</i></b></div></div>\";","\t\tMain = Main + MainOddDiv + Atype + \" <b>To Hit: </b>\" + AttackRollText + \"<b>\" + AttackBonus + \" = <a style='color:BLUE'>\" + AttackTotal + \"</b></a></div>\";","\t\tMain = Main + MainEvenDiv + DTOTALS + \"</div>\";","//--CRIT roll","\t\tvar IsLucky = randomInteger(Lucky);","\t\tif (IsLucky >= Lucky && AttackRollRaw > 4) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><b>Lucky Shot!: \" + aLoc[Math.floor(Math.random() * aLoc.length)] + \"</b></div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(http:\\\\//i.imgur.com/cFiEs5R.gif);\";","\t\t\tBottomText = BottomText + \" \" + SayParts + \"<b><i>●LUCKY SHOT●</i></b></div></div>\";","","//FAIL roll","\t\t}","\t\tif (AttackRollRaw <= failRange) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><strong style='font-size: 150%;'><b>Fumble!: \" + aFum[Math.floor(Math.random() * aFum.length)] + \"</div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(\" + fail_img + \");\";","\t\t\tBottomText = BottomText + \" \" + 'FUMBLE';","\t\t\tfumble = 1;","\t\t}","/*-----------","AMMO PARTS","-----------*/","\t\tif (FindGun !== undefined && who !== \"NPC\" && ammo0 !== undefined) {","\t\t\tvar ammoleng = msgFormula[4].length - 1;","\t\t\tvar ammo = parseInt(msgFormula[4].substr(ammoleng));","\t\t\tvar ammoC = parseInt(ammo);","\t\t\tif (ammoC === undefined || isNaN(ammoC)) ammoC = 1;","\t\t\tvar cAmmo = parseInt(ammo0.get(\"current\"));","\t\t\tvar mAmmo = parseInt(ammo0.get(\"max\"));","\t\t\tif (isNaN(cAmmo) || isNaN(mAmmo)) {","\t\t\t\tsendChat('Error', \"/desc Set ammo for  \" + gun);","\t\t\t\treturn;","\t\t\t}","\t\t\tif (mAmmo == 0) {}","\t\t\telse if (cAmmo <= 0 || cAmmo < ammoC) {","\t\t\t\tcAmmo = \"0\";","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tMain = AmmoDiv + \"background-color:RED;'><b><i>Not Enough \" + gun + \" ammo left in clip.</div>\";","\t\t\t}","\t\t\telse if (cAmmo <= 3 || cAmmo < ammoC) {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar per = (cAmmo / mAmmo) * 100;","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 3px;\"><div style=\"background-color: red; width: ' + per + '%; height: 5px; border-radius: 10px;\"></div>';","\t\t\t\tMain = Main + AmmoDiv + \"background-color:RED;'><b><i>\" + cAmmo + \" \" + gun + \" ammo left in clip.</b></i>\" + ammoT + \"</div></div>\";","\t\t\t}","\t\t\telse {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar per = (cAmmo / mAmmo) * 100;","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 1px;\"><div style=\"background-color: orange; width: ' + per + '%; height: 3px; border-radius: 10px; margins: 0px;\"></div>';","\t\t\t\tvar ammoT = A;","\t\t\t\tMain = Main + AmmoDiv + \"background-color:#A8A191;'><b><i>\" + cAmmo + \" of \" + mAmmo + \" \" + gun + \" ammo left</b></i>\" + ammoT + \"</div></div>\";","\t\t\t}","\t\t}","/*-----------SEND CHAT-----------*/","\t\tvar MsgBox = TopBar + RollColor +\";'></div>\"+ MidBar + PlayerBarColor +\";'><b>\" + who + \"  Attacks</b></div>\"+Main+\"</div>\"+BottBar + RollColor +\";'><b>\" + BottomText + \"</b></div>\";","\t\tvar SendT = MsgBox;","\t\tif (AttackRollRaw <= 3 && fumble != 1) {","\t\t\tSendT = \"<div style='opacity: 0.6;'><strong style='font-size: 90%;'>\" + SendT + \"</strong></div>\";","\t\t}","\t\tif (AttackRollRaw >= 20) {","\t\t\tSendT = \"<strong style='font-size: 130%;'>\" + SendT + \"</strong>\";","\t\t}","\t\tsendChat(who, '/direct ' + SendT);","\t\tsendChat(who, \"/direct \" + ammoT);","\t\treturn;","\t}","//----------------------------","//RELOAD----------------","//----------------------------","\tif (command == \"!reload\") {","\t\tif (cWho !== undefined) {","\t\t\tvar msgFormula = msgTxt.split(\" --\");","\t\t\tvar gun = msgFormula[1];","\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (FindGun == undefined) {","\t\t\t\tsendChat('', '/desc ' + msg.who + ': <b>ammo not found</b>');","\t\t\t\treturn;","\t\t\t}","\t\t\tClips = 0;","\t\t\tvar attName = FindGun.get(\"name\");","\t\t\tvar Ammo0 = findObjs({name: attName + \"pay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Ammo1 = findObjs({name: attName + \"Rounds\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Clipsc = findObjs({name: attName + \"clip\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (Clipsc != undefined) {","\t\t\t\tvar Clips = parseInt(Clipsc.get(\"current\"), 10);","\t\t\t}","\t\t\tvar cWep = parseInt(Ammo0.get(\"current\"), 10);","\t\t\tvar mWep = parseInt(Ammo0.get(\"max\"), 10 );","\t\t\tvar cAmmo = parseInt(Ammo1.get(\"current\"), 10);","\t\t\tif (cAmmo <= 0) {","\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' NO AMMO TO RELOAD!</div>';","\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t}","\t\t\telse {","\t\t\t\tvar needed = mWep - cWep;","\t\t\t\tif (needed >= cAmmo) {","\t\t\t\t\tneeded = cAmmo;","\t\t\t\t}","\t\t\t\tif (Clips == 10) {","\t\t\t\t\tneeded = 1;","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = cAmmo;","\t\t\t\t\tAmmo0.set('current', mWep);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' is reloading: ' + needed + \" clips on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + 'Clips)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = Math.round((cAmmo / mWep) * 10) / 10;","\t\t\t\t\tAmmo0.set('current', cWep + needed);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>\" + msg.who + ' is reloading ' + needed + \" Ammo on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + ' reloads)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t}","\t\t}","\t}","});","//---AUTO LOCATION ROLLS","var aLoc = [\"Head\", \"Left Arm\", \"Right Arm\", \"Left Leg\", \"Right Leg\", \"..Dangly Bits! (Main Body)\", \"FREE ATTACK!\"];","//---FUMBLE ROLLS","var aFum = [","\t\"Hit a totally different friendly target in general direction of aimed target (if possible)\",","\t\"Ungracefully fumbled the attack!, lose next attack\",","\t\"Got something in eye, lose this attack\",","\t\"Missed so badly, it makes the enemy see you and an easy target!\",","\t\"Total gun jam/broke weapon(or limb!).. useless this fight. Must get fixed.\",","\t\"Tripped!, next attack to get up\",","\t\"Miss and weapon jam! (GUN) jams, (MELEE) Missed and stuck in Wall/Floor/Tree/Off Balance/etc loose next attack\",","\t\"Missed, and draws sole aggression of the target\",","\t\"Somehow hit a Flying Squirrel!\",","\t\"Failed so badly nearest ally falls back to help.\"","];",""],"id":709},{"start":{"row":0,"column":0},"end":{"row":284,"column":0},"action":"insert","lines":["//!attack --[[1d20]] --[[3d6]] --saying! --ammotype","/*global OuterDiv PlaySound TopBar iPart MidBar BottBar MakeRollNum log on findObjs randomInteger RollRight _ sendChat bShadow font getObj"," */","on('chat:message', function(msg) {","\tif (msg.type != \"api\") return;","\t//log(msg.content);","\tvar msgTxt = msg.content;","\tvar command = msgTxt.split(\" \", 1);","\tvar cWho = findObjs({_type: 'character',name: msg.who})[0];","\tif (cWho == undefined && msg.who.indexOf(\"(GM)\") == -1) {","\t\tcWho = RollRight(msg.playerid);","\t\tmsg.who = cWho.get(\"name\");","\t}","","/*-----------CHECK API-----------*/","\tif (command == \"!attack\") {","/*-----------BOXES-----------*/","\t\tPlaySound('dice', 9000);","\t\tvar Main;","\t\tvar PlayerBGColor = getObj(\"player\", msg.playerid).get(\"color\");","\t\tvar PlayerBarColor = \"background-image:-webkit-linear-gradient(left, #000000 0%,\"+PlayerBGColor+\" 15%,\"+PlayerBGColor+\" 85%,#000000 100%);\";","\t\tvar RollColor = \"background-image:-webkit-linear-gradient(left, #000000,#848484,#000000);\";","\t\tvar topimg = \"https://s3.amazonaws.com/files.staging.d20.io/images/181118/cN5ui3MXx87UBgVUgzwYTQ/med.jpg?141868063\";","\t\tvar TextShadow = \"-1px -1px #444, 1px -1px #444, -1px 1px #444, 1px 1px #444\";","\t\tvar SayParts = \"<div style='text-shadow: 1px 1px #000, -1px -1px #000, -1px 1px #000, 1px -1px #000; margin: 0em 0em 0em 0em;; font-size:8pt; display:inline-block; text-align: center; vertical-align:middle; padding: 0px 6px 0px 6px; border: 1px solid #000; border-radius: 3px; color: #FFF; background-image: url(\" + topimg + \");'>\";","\t\tvar RollDiv = \"<div style='margin: 0em 0.1em 0.1em 0em; font-size: 10pt; text-shadow: \" + TextShadow + \"; width: 15px; height: 15px; line-height: 15px; display:inline-block; text-align:center; padding: 0px 1px 0px 0px; border: 1px solid #000; border-radius: 3px; color: #FFF;\";","","\t\tvar MainSayDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family:\" + font + \"; font-size: x-small; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color:#CEC7B6; color: #000;'>\";","\t\tvar MainEvenDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #CEC7B6; color: #000;'>\";","\t\tvar MainOddDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #C0B9A8; color: #000;'>\";","\t\tvar AmmoDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; font-family: \" + font + \"; font-size: 8pt; text-align: center; padding:0px 0px 0px 0px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; color: #000;\";","/*---------------------------*/","\t\tvar who = msg.who;","\t\tmsg.content = MakeRollNum(msg.content, msg.inlinerolls);","//check rolls---------------------","\t\tvar AttackRolls = msg.inlinerolls[0];","\t\tvar DamageRolls = msg.inlinerolls[1];","//define var----------------------","\t\tif (AttackRolls === undefined || DamageRolls === undefined) {","\t\t\tsendChat('', \"/direct <B><I>bad macro!\");","\t\t\treturn;","\t\t}","\t\tmsgFormula = msgTxt.split(\" --\");","\t\tvar Lucky = 20;","\t\tvar failRange = 1;","\t\tvar DamageRollRaw = \"\";","\t\tvar BottomText = \"\";","\t\tvar fumble = 0;","\t\tvar miss = 0;","\t\tvar crit_img = \"http:\\\\//media.giphy.com/media/3KqZp8MBaf1Ty/giphy.gif\";","\t\tvar fail_img = \"http:\\\\//fc06.deviantart.net/fs70/f/2013/076/5/2/_tutorial__creating_an_animated_light_pulse_in_ps_by_d_k0d3-d5ybir4.gif\";","\t\tif (msg.who == \"GM (GM)\") {","\t\t\twho = \"NPC\";","\t\t}","/*-----------START-----------*/","//Check for GUN","\t\tif (who !== \"NPC\") {","\t\t\tif (msgFormula[4] === undefined) msgFormula[4] = msgFormula[3];","\t\t\tif (msgFormula[4] !== undefined) {","\t\t\t\tvar gunleng = msgFormula[4].length - 1;","\t\t\t\tvar ammo = parseInt(msgFormula[4].substr(gunleng), 10);","\t\t\t\tif (!isNaN(ammo)) {","\t\t\t\t\tgunleng = msgFormula[4].length - 2;","\t\t\t\t\tvar gun = msgFormula[4].substr(0, gunleng);","\t\t\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (FindGun == undefined) {","\t\t\t\t\t\tsendChat('Error', \"/desc \" + msg.who + \" You do not own a  \" + gun);","\t\t\t\t\t\treturn;","\t\t\t\t\t}","\t\t\t\t\tvar GunName = FindGun.get(\"name\");","\t\t\t\t\tvar leng = GunName.length - 5;","\t\t\t\t\tleng = GunName.substr(0, leng);","\t\t\t\t\tvar ammo0 = findObjs({name: leng + \"_WEAPpay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (ammo0 == undefined) {","\t\t\t\t\t\tammo0 = FindGun;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","/*-----------ATTACK PARTS-----------*/","//--Attack Modifier","\t\tvar AttackBonus;","\t\tvar AttackRollText;","\t\tif (AttackRolls.results.rolls[1] === undefined) AttackBonus = \"\";","\t\telse AttackBonus = (AttackRolls.results.rolls[1].expr);","\t\tvar AttackRollRaw = AttackRolls.results.rolls[0].results[0]['v'];","\t\t//Attack total and type","\t\tvar AttackTotal = (AttackRolls.results.total);","\t\tvar Atype = \"<a style='color:RED'>\" + AttackRolls.expression + \"</a>\";","//--Set Miss","\t\tif (AttackRollRaw <= 3) {","\t\t\tAttackRollText = RollDiv + \"background-color:#A80000;'>\" + AttackRollRaw + \"</div>\";","\t\t\tBottomText = BottomText + \" \" + 'MISS';","\t\t\tvar miss = 1;","\t\t}","\t\telse AttackRollText = RollDiv + \"background-color:#696969;'>\" + AttackRollRaw + \"</div>\";","/*-----------DAMAGE PARTS-----------*/","//--Damage modifier","\t\tvar DamageBonus;","\t\tif (DamageRolls.results.rolls[1] === undefined) DamageBonus = \"\";","\t\telse DamageBonus = (DamageRolls.results.rolls[1].expr);","\t\t//--Set damage total","\t\tvar DamageTotal = DamageRolls.results.total;","\t\t//--Make damage text for all rolls","\t\tvar dam = DamageRolls.results.rolls[0];","\t\tvar i = 0;","\t\twhile (dam.results[i] !== undefined) {","\t\t\tvar dNum = dam.results[i]['v'];","\t\t\tvar num;","\t\t\tvar ddimg = \"http://image.blingee.com.s3.amazonaws.com/images19/content/output/000/000/000/061/788808721_1076628.gif?4\";","\t\t\tvar bg_max = \"background-position:center; background-image: url(\" + ddimg + \");\";","\t\t\tif (dNum == 1) num = RollDiv + \"background-color:#A80000;'>\" + dNum + \"</div></b></a>\";","\t\t\telse if (dNum == DamageRolls.results.rolls[0].sides) num = RollDiv + \"background-color:#00A120;\" + bg_max + \"'><b>\" + dNum + \"</b></div></b></a>\";","\t\t\telse num = RollDiv + \"background-color:#696969;'>\" + dNum + \"</div>\";","\t\t\tDamageRollRaw = DamageRollRaw + \"\" + (num);","\t\t\ti++;","\t\t}","\t\tvar Dtype = \"<a style='color:RED;'>\" + DamageRolls.expression + \"</a>\";","\t\tDamageRollRaw = DamageRollRaw + \"<b>\" + DamageBonus + \"</b>\";","\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a>\";","\t\tif (miss == 1)  DTOTALS = \"\";","//--Set Double Damage","\t\tif (AttackRollRaw >= 20) {","\t\t    var CritCheer = '<div style=\"width: 99%; height: 40px; border: 1px solid #666666; overflow: hidden; position: relative;\"><img  src=\"https://media.giphy.com/media/11sBLVxNs7v6WA/giphy.gif\" style=\"position: absolute; top:-35px; left:0px;\"/></div>';","\t\t\tDamageTotal = \"<a style='color:RED'><strong>\" + DamageTotal * 2 + \"!</strong></a>\";","\t\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a><br>\"+CritCheer;","\t\t\tAttackTotal = \"<a style='color:RED'><strong>\" + AttackTotal + \"!</strong></a>\";","\t\t\tBottomText = BottomText + \" \" + '<b>DOUBLE DAMAGE!</b><BR><b>(NATURAL 20!)</b><br>';","\t\t\tRollColor = \"background-position:center; background-image: url(\" + crit_img + \");\";","\t\t\tPlaySound('Critical', 9000);","\t\t}","//set motto","\t\tif (msgFormula[3] !== undefined) {","\t\t\tvar WarCryleng = msgFormula[3].length - 1;","\t\t\tvar sayingCheck = parseInt(msgFormula[3].substr(WarCryleng), 10);","\t\t\tif (isNaN(sayingCheck)) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t}","\t\t\telse if (msgFormula[3] !== undefined && msgFormula[4] == undefined) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t\tWarCryleng = msgFormula[3].length - 2;","\t\t\t\tvar WarCry = msgFormula[3].substr(0, WarCryleng).toUpperCase();","\t\t\t}","\t\t}","\t\telse {","\t\t\tWarCry = \"ATTACK!\";","\t\t}","//CHATBOX PARTS----------------","\t\tMain = MainSayDiv + SayParts + \"<b><i><marquee><img src='logo.jpg'></marquee> ●\" + WarCry + \"●</i></b></div></div>\";","\t\tMain = Main + MainOddDiv + Atype + \" <b>To Hit: </b>\" + AttackRollText + \"<b>\" + AttackBonus + \" = <a style='color:BLUE'>\" + AttackTotal + \"</b></a></div>\";","\t\tMain = Main + MainEvenDiv + DTOTALS + \"</div>\";","//--CRIT roll","\t\tvar IsLucky = randomInteger(Lucky);","\t\tif (IsLucky >= Lucky && AttackRollRaw > 4) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><b>Lucky Shot!: \" + aLoc[Math.floor(Math.random() * aLoc.length)] + \"</b></div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(http:\\\\//i.imgur.com/cFiEs5R.gif);\";","\t\t\tBottomText = BottomText + \" \" + SayParts + \"<b><i>●LUCKY SHOT●</i></b></div></div>\";","","//FAIL roll","\t\t}","\t\tif (AttackRollRaw <= failRange) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><strong style='font-size: 150%;'><b>Fumble!: \" + aFum[Math.floor(Math.random() * aFum.length)] + \"</div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(\" + fail_img + \");\";","\t\t\tBottomText = BottomText + \" \" + 'FUMBLE';","\t\t\tfumble = 1;","\t\t}","/*-----------","AMMO PARTS","-----------*/","\t\tif (FindGun !== undefined && who !== \"NPC\" && ammo0 !== undefined) {","\t\t\tvar ammoleng = msgFormula[4].length - 1;","\t\t\tvar ammo = parseInt(msgFormula[4].substr(ammoleng));","\t\t\tvar ammoC = parseInt(ammo);","\t\t\tif (ammoC === undefined || isNaN(ammoC)) ammoC = 1;","\t\t\tvar cAmmo = parseInt(ammo0.get(\"current\"));","\t\t\tvar mAmmo = parseInt(ammo0.get(\"max\"));","\t\t\tif (isNaN(cAmmo) || isNaN(mAmmo)) {","\t\t\t\tsendChat('Error', \"/desc Set ammo for  \" + gun);","\t\t\t\treturn;","\t\t\t}","\t\t\tif (mAmmo == 0) {}","\t\t\telse if (cAmmo <= 0 || cAmmo < ammoC) {","\t\t\t\tcAmmo = \"0\";","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tMain = AmmoDiv + \"background-color:RED;'><b><i>Not Enough \" + gun + \" ammo left in clip.</div>\";","\t\t\t}","\t\t\telse if (cAmmo <= 3 || cAmmo < ammoC) {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar per = (cAmmo / mAmmo) * 100;","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 3px;\"><div style=\"background-color: red; width: ' + per + '%; height: 5px; border-radius: 10px;\"></div>';","\t\t\t\tvar ammoT = \"\";","\t\t\t\tMain = Main + AmmoDiv + \"background-color:RED;'><b><i>\" + cAmmo + \" \" + gun + \" ammo left in clip.</b></i>\" + ammoT + \"</div>\";","\t\t\t}","\t\t\telse {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar per = (cAmmo / mAmmo) * 100;","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 1px;\"><div style=\"background-color: orange; width: ' + per + '%; height: 3px; border-radius: 10px; margins: 0px;\"></div>';","\t\t\t\tvar ammoT = AmmoDiv + \"background-color:#A8A191;'><b><i>\" + cAmmo + \" of \" + mAmmo + \" \" + gun + \" ammo left</b></i>\" + ammoT + \"</div>\";","\t\t\t\tMain = Main + ammoT;","\t\t\t}","\t\t\tsendChat('', '/direct ' + ammoT);","\t\t}","/*-----------SEND CHAT-----------*/","\t\tvar MsgBox = TopBar + RollColor +\";'></div>\"+ MidBar + PlayerBarColor +\";'><b>\" + who + \"  Attacks</b></div>\"+Main+\"</div>\"+BottBar + RollColor +\";'><b>\" + BottomText + \"</b></div>\";","\t\tvar SendT = MsgBox;","\t\tif (AttackRollRaw <= 3 && fumble != 1) {","\t\t\tSendT = \"<div style='opacity: 0.6;'><strong style='font-size: 90%;'>\" + SendT + \"</strong></div>\";","\t\t}","\t\tif (AttackRollRaw >= 20) {","\t\t\tSendT = \"<strong style='font-size: 130%;'>\" + SendT + \"</strong>\";","\t\t}","\t\tsendChat(who, '/direct ' + SendT);","\t\treturn;","\t}","//----------------------------","//RELOAD----------------","//----------------------------","\tif (command == \"!reload\") {","\t\tif (cWho !== undefined) {","\t\t\tvar msgFormula = msgTxt.split(\" --\");","\t\t\tvar gun = msgFormula[1];","\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (FindGun == undefined) {","\t\t\t\tsendChat('', '/desc ' + msg.who + ': <b>ammo not found</b>');","\t\t\t\treturn;","\t\t\t}","\t\t\tClips = 0;","\t\t\tvar attName = FindGun.get(\"name\");","\t\t\tvar Ammo0 = findObjs({name: attName + \"pay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Ammo1 = findObjs({name: attName + \"Rounds\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Clipsc = findObjs({name: attName + \"clip\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (Clipsc != undefined) {","\t\t\t\tvar Clips = parseInt(Clipsc.get(\"current\"), 10);","\t\t\t}","\t\t\tvar cWep = parseInt(Ammo0.get(\"current\"), 10);","\t\t\tvar mWep = parseInt(Ammo0.get(\"max\"), 10 );","\t\t\tvar cAmmo = parseInt(Ammo1.get(\"current\"), 10);","\t\t\tif (cAmmo <= 0) {","\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' NO AMMO TO RELOAD!</div>';","\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t}","\t\t\telse {","\t\t\t\tvar needed = mWep - cWep;","\t\t\t\tif (needed >= cAmmo) {","\t\t\t\t\tneeded = cAmmo;","\t\t\t\t}","\t\t\t\tif (Clips == 10) {","\t\t\t\t\tneeded = 1;","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = cAmmo;","\t\t\t\t\tAmmo0.set('current', mWep);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' is reloading: ' + needed + \" clips on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + 'Clips)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = Math.round((cAmmo / mWep) * 10) / 10;","\t\t\t\t\tAmmo0.set('current', cWep + needed);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>\" + msg.who + ' is reloading ' + needed + \" Ammo on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + ' reloads)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t}","\t\t}","\t}","});","//---AUTO LOCATION ROLLS","var aLoc = [\"Head\", \"Left Arm\", \"Right Arm\", \"Left Leg\", \"Right Leg\", \"..Dangly Bits! (Main Body)\", \"FREE ATTACK!\"];","//---FUMBLE ROLLS","var aFum = [","\t\"Hit a totally different friendly target in general direction of aimed target (if possible)\",","\t\"Ungracefully fumbled the attack!, lose next attack\",","\t\"Got something in eye, lose this attack\",","\t\"Missed so badly, it makes the enemy see you and an easy target!\",","\t\"Total gun jam/broke weapon(or limb!).. useless this fight. Must get fixed.\",","\t\"Tripped!, next attack to get up\",","\t\"Miss and weapon jam! (GUN) jams, (MELEE) Missed and stuck in Wall/Floor/Tree/Off Balance/etc loose next attack\",","\t\"Missed, and draws sole aggression of the target\",","\t\"Somehow hit a Flying Squirrel!\",","\t\"Failed so badly nearest ally falls back to help.\"","];",""]}],[{"start":{"row":191,"column":0},"end":{"row":191,"column":19},"action":"remove","lines":["\t\t\t\tvar ammoT = \"\";"],"id":710}],[{"start":{"row":191,"column":0},"end":{"row":192,"column":0},"action":"remove","lines":["",""],"id":711}],[{"start":{"row":198,"column":13},"end":{"row":198,"column":14},"action":"insert","lines":["1"],"id":712}],[{"start":{"row":198,"column":13},"end":{"row":198,"column":14},"action":"remove","lines":["1"],"id":713}],[{"start":{"row":0,"column":0},"end":{"row":283,"column":0},"action":"remove","lines":["//!attack --[[1d20]] --[[3d6]] --saying! --ammotype","/*global OuterDiv PlaySound TopBar iPart MidBar BottBar MakeRollNum log on findObjs randomInteger RollRight _ sendChat bShadow font getObj"," */","on('chat:message', function(msg) {","\tif (msg.type != \"api\") return;","\t//log(msg.content);","\tvar msgTxt = msg.content;","\tvar command = msgTxt.split(\" \", 1);","\tvar cWho = findObjs({_type: 'character',name: msg.who})[0];","\tif (cWho == undefined && msg.who.indexOf(\"(GM)\") == -1) {","\t\tcWho = RollRight(msg.playerid);","\t\tmsg.who = cWho.get(\"name\");","\t}","","/*-----------CHECK API-----------*/","\tif (command == \"!attack\") {","/*-----------BOXES-----------*/","\t\tPlaySound('dice', 9000);","\t\tvar Main;","\t\tvar PlayerBGColor = getObj(\"player\", msg.playerid).get(\"color\");","\t\tvar PlayerBarColor = \"background-image:-webkit-linear-gradient(left, #000000 0%,\"+PlayerBGColor+\" 15%,\"+PlayerBGColor+\" 85%,#000000 100%);\";","\t\tvar RollColor = \"background-image:-webkit-linear-gradient(left, #000000,#848484,#000000);\";","\t\tvar topimg = \"https://s3.amazonaws.com/files.staging.d20.io/images/181118/cN5ui3MXx87UBgVUgzwYTQ/med.jpg?141868063\";","\t\tvar TextShadow = \"-1px -1px #444, 1px -1px #444, -1px 1px #444, 1px 1px #444\";","\t\tvar SayParts = \"<div style='text-shadow: 1px 1px #000, -1px -1px #000, -1px 1px #000, 1px -1px #000; margin: 0em 0em 0em 0em;; font-size:8pt; display:inline-block; text-align: center; vertical-align:middle; padding: 0px 6px 0px 6px; border: 1px solid #000; border-radius: 3px; color: #FFF; background-image: url(\" + topimg + \");'>\";","\t\tvar RollDiv = \"<div style='margin: 0em 0.1em 0.1em 0em; font-size: 10pt; text-shadow: \" + TextShadow + \"; width: 15px; height: 15px; line-height: 15px; display:inline-block; text-align:center; padding: 0px 1px 0px 0px; border: 1px solid #000; border-radius: 3px; color: #FFF;\";","","\t\tvar MainSayDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family:\" + font + \"; font-size: x-small; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color:#CEC7B6; color: #000;'>\";","\t\tvar MainEvenDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #CEC7B6; color: #000;'>\";","\t\tvar MainOddDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #C0B9A8; color: #000;'>\";","\t\tvar AmmoDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; font-family: \" + font + \"; font-size: 8pt; text-align: center; padding:0px 0px 0px 0px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; color: #000;\";","/*---------------------------*/","\t\tvar who = msg.who;","\t\tmsg.content = MakeRollNum(msg.content, msg.inlinerolls);","//check rolls---------------------","\t\tvar AttackRolls = msg.inlinerolls[0];","\t\tvar DamageRolls = msg.inlinerolls[1];","//define var----------------------","\t\tif (AttackRolls === undefined || DamageRolls === undefined) {","\t\t\tsendChat('', \"/direct <B><I>bad macro!\");","\t\t\treturn;","\t\t}","\t\tmsgFormula = msgTxt.split(\" --\");","\t\tvar Lucky = 20;","\t\tvar failRange = 1;","\t\tvar DamageRollRaw = \"\";","\t\tvar BottomText = \"\";","\t\tvar fumble = 0;","\t\tvar miss = 0;","\t\tvar crit_img = \"http:\\\\//media.giphy.com/media/3KqZp8MBaf1Ty/giphy.gif\";","\t\tvar fail_img = \"http:\\\\//fc06.deviantart.net/fs70/f/2013/076/5/2/_tutorial__creating_an_animated_light_pulse_in_ps_by_d_k0d3-d5ybir4.gif\";","\t\tif (msg.who == \"GM (GM)\") {","\t\t\twho = \"NPC\";","\t\t}","/*-----------START-----------*/","//Check for GUN","\t\tif (who !== \"NPC\") {","\t\t\tif (msgFormula[4] === undefined) msgFormula[4] = msgFormula[3];","\t\t\tif (msgFormula[4] !== undefined) {","\t\t\t\tvar gunleng = msgFormula[4].length - 1;","\t\t\t\tvar ammo = parseInt(msgFormula[4].substr(gunleng), 10);","\t\t\t\tif (!isNaN(ammo)) {","\t\t\t\t\tgunleng = msgFormula[4].length - 2;","\t\t\t\t\tvar gun = msgFormula[4].substr(0, gunleng);","\t\t\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (FindGun == undefined) {","\t\t\t\t\t\tsendChat('Error', \"/desc \" + msg.who + \" You do not own a  \" + gun);","\t\t\t\t\t\treturn;","\t\t\t\t\t}","\t\t\t\t\tvar GunName = FindGun.get(\"name\");","\t\t\t\t\tvar leng = GunName.length - 5;","\t\t\t\t\tleng = GunName.substr(0, leng);","\t\t\t\t\tvar ammo0 = findObjs({name: leng + \"_WEAPpay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (ammo0 == undefined) {","\t\t\t\t\t\tammo0 = FindGun;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","/*-----------ATTACK PARTS-----------*/","//--Attack Modifier","\t\tvar AttackBonus;","\t\tvar AttackRollText;","\t\tif (AttackRolls.results.rolls[1] === undefined) AttackBonus = \"\";","\t\telse AttackBonus = (AttackRolls.results.rolls[1].expr);","\t\tvar AttackRollRaw = AttackRolls.results.rolls[0].results[0]['v'];","\t\t//Attack total and type","\t\tvar AttackTotal = (AttackRolls.results.total);","\t\tvar Atype = \"<a style='color:RED'>\" + AttackRolls.expression + \"</a>\";","//--Set Miss","\t\tif (AttackRollRaw <= 3) {","\t\t\tAttackRollText = RollDiv + \"background-color:#A80000;'>\" + AttackRollRaw + \"</div>\";","\t\t\tBottomText = BottomText + \" \" + 'MISS';","\t\t\tvar miss = 1;","\t\t}","\t\telse AttackRollText = RollDiv + \"background-color:#696969;'>\" + AttackRollRaw + \"</div>\";","/*-----------DAMAGE PARTS-----------*/","//--Damage modifier","\t\tvar DamageBonus;","\t\tif (DamageRolls.results.rolls[1] === undefined) DamageBonus = \"\";","\t\telse DamageBonus = (DamageRolls.results.rolls[1].expr);","\t\t//--Set damage total","\t\tvar DamageTotal = DamageRolls.results.total;","\t\t//--Make damage text for all rolls","\t\tvar dam = DamageRolls.results.rolls[0];","\t\tvar i = 0;","\t\twhile (dam.results[i] !== undefined) {","\t\t\tvar dNum = dam.results[i]['v'];","\t\t\tvar num;","\t\t\tvar ddimg = \"http://image.blingee.com.s3.amazonaws.com/images19/content/output/000/000/000/061/788808721_1076628.gif?4\";","\t\t\tvar bg_max = \"background-position:center; background-image: url(\" + ddimg + \");\";","\t\t\tif (dNum == 1) num = RollDiv + \"background-color:#A80000;'>\" + dNum + \"</div></b></a>\";","\t\t\telse if (dNum == DamageRolls.results.rolls[0].sides) num = RollDiv + \"background-color:#00A120;\" + bg_max + \"'><b>\" + dNum + \"</b></div></b></a>\";","\t\t\telse num = RollDiv + \"background-color:#696969;'>\" + dNum + \"</div>\";","\t\t\tDamageRollRaw = DamageRollRaw + \"\" + (num);","\t\t\ti++;","\t\t}","\t\tvar Dtype = \"<a style='color:RED;'>\" + DamageRolls.expression + \"</a>\";","\t\tDamageRollRaw = DamageRollRaw + \"<b>\" + DamageBonus + \"</b>\";","\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a>\";","\t\tif (miss == 1)  DTOTALS = \"\";","//--Set Double Damage","\t\tif (AttackRollRaw >= 20) {","\t\t    var CritCheer = '<div style=\"width: 99%; height: 40px; border: 1px solid #666666; overflow: hidden; position: relative;\"><img  src=\"https://media.giphy.com/media/11sBLVxNs7v6WA/giphy.gif\" style=\"position: absolute; top:-35px; left:0px;\"/></div>';","\t\t\tDamageTotal = \"<a style='color:RED'><strong>\" + DamageTotal * 2 + \"!</strong></a>\";","\t\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a><br>\"+CritCheer;","\t\t\tAttackTotal = \"<a style='color:RED'><strong>\" + AttackTotal + \"!</strong></a>\";","\t\t\tBottomText = BottomText + \" \" + '<b>DOUBLE DAMAGE!</b><BR><b>(NATURAL 20!)</b><br>';","\t\t\tRollColor = \"background-position:center; background-image: url(\" + crit_img + \");\";","\t\t\tPlaySound('Critical', 9000);","\t\t}","//set motto","\t\tif (msgFormula[3] !== undefined) {","\t\t\tvar WarCryleng = msgFormula[3].length - 1;","\t\t\tvar sayingCheck = parseInt(msgFormula[3].substr(WarCryleng), 10);","\t\t\tif (isNaN(sayingCheck)) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t}","\t\t\telse if (msgFormula[3] !== undefined && msgFormula[4] == undefined) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t\tWarCryleng = msgFormula[3].length - 2;","\t\t\t\tvar WarCry = msgFormula[3].substr(0, WarCryleng).toUpperCase();","\t\t\t}","\t\t}","\t\telse {","\t\t\tWarCry = \"ATTACK!\";","\t\t}","//CHATBOX PARTS----------------","\t\tMain = MainSayDiv + SayParts + \"<b><i><marquee><img src='logo.jpg'></marquee> ●\" + WarCry + \"●</i></b></div></div>\";","\t\tMain = Main + MainOddDiv + Atype + \" <b>To Hit: </b>\" + AttackRollText + \"<b>\" + AttackBonus + \" = <a style='color:BLUE'>\" + AttackTotal + \"</b></a></div>\";","\t\tMain = Main + MainEvenDiv + DTOTALS + \"</div>\";","//--CRIT roll","\t\tvar IsLucky = randomInteger(Lucky);","\t\tif (IsLucky >= Lucky && AttackRollRaw > 4) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><b>Lucky Shot!: \" + aLoc[Math.floor(Math.random() * aLoc.length)] + \"</b></div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(http:\\\\//i.imgur.com/cFiEs5R.gif);\";","\t\t\tBottomText = BottomText + \" \" + SayParts + \"<b><i>●LUCKY SHOT●</i></b></div></div>\";","","//FAIL roll","\t\t}","\t\tif (AttackRollRaw <= failRange) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><strong style='font-size: 150%;'><b>Fumble!: \" + aFum[Math.floor(Math.random() * aFum.length)] + \"</div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(\" + fail_img + \");\";","\t\t\tBottomText = BottomText + \" \" + 'FUMBLE';","\t\t\tfumble = 1;","\t\t}","/*-----------","AMMO PARTS","-----------*/","\t\tif (FindGun !== undefined && who !== \"NPC\" && ammo0 !== undefined) {","\t\t\tvar ammoleng = msgFormula[4].length - 1;","\t\t\tvar ammo = parseInt(msgFormula[4].substr(ammoleng));","\t\t\tvar ammoC = parseInt(ammo);","\t\t\tif (ammoC === undefined || isNaN(ammoC)) ammoC = 1;","\t\t\tvar cAmmo = parseInt(ammo0.get(\"current\"));","\t\t\tvar mAmmo = parseInt(ammo0.get(\"max\"));","\t\t\tif (isNaN(cAmmo) || isNaN(mAmmo)) {","\t\t\t\tsendChat('Error', \"/desc Set ammo for  \" + gun);","\t\t\t\treturn;","\t\t\t}","\t\t\tif (mAmmo == 0) {}","\t\t\telse if (cAmmo <= 0 || cAmmo < ammoC) {","\t\t\t\tcAmmo = \"0\";","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tMain = AmmoDiv + \"background-color:RED;'><b><i>Not Enough \" + gun + \" ammo left in clip.</div>\";","\t\t\t}","\t\t\telse if (cAmmo <= 3 || cAmmo < ammoC) {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar per = (cAmmo / mAmmo) * 100;","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 3px;\"><div style=\"background-color: red; width: ' + per + '%; height: 5px; border-radius: 10px;\"></div>';","\t\t\t\tMain = Main + AmmoDiv + \"background-color:RED;'><b><i>\" + cAmmo + \" \" + gun + \" ammo left in clip.</b></i>\" + ammoT + \"</div>\";","\t\t\t}","\t\t\telse {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar per = (cAmmo / mAmmo) * 100;","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 1px;\"><div style=\"background-color: orange; width: ' + per + '%; height: 3px; border-radius: 10px; margins: 0px;\"></div>';","\t\t\t\tvar ammoT = AmmoDiv + \"background-color:#A8A191;'><b><i>\" + cAmmo + \" of \" + mAmmo + \" \" + gun + \" ammo left</b></i>\" + ammoT + \"</div>\";","\t\t\t\tMain = Main + ammoT;","\t\t\t}","\t\t\tsendChat('', '/direct ' + ammoT);","\t\t}","/*-----------SEND CHAT-----------*/","\t\tvar MsgBox = TopBar + RollColor +\";'></div>\"+ MidBar + PlayerBarColor +\";'><b>\" + who + \"  Attacks</b></div>\"+Main+\"</div>\"+BottBar + RollColor +\";'><b>\" + BottomText + \"</b></div>\";","\t\tvar SendT = MsgBox;","\t\tif (AttackRollRaw <= 3 && fumble != 1) {","\t\t\tSendT = \"<div style='opacity: 0.6;'><strong style='font-size: 90%;'>\" + SendT + \"</strong></div>\";","\t\t}","\t\tif (AttackRollRaw >= 20) {","\t\t\tSendT = \"<strong style='font-size: 130%;'>\" + SendT + \"</strong>\";","\t\t}","\t\tsendChat(who, '/direct ' + SendT);","\t\treturn;","\t}","//----------------------------","//RELOAD----------------","//----------------------------","\tif (command == \"!reload\") {","\t\tif (cWho !== undefined) {","\t\t\tvar msgFormula = msgTxt.split(\" --\");","\t\t\tvar gun = msgFormula[1];","\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (FindGun == undefined) {","\t\t\t\tsendChat('', '/desc ' + msg.who + ': <b>ammo not found</b>');","\t\t\t\treturn;","\t\t\t}","\t\t\tClips = 0;","\t\t\tvar attName = FindGun.get(\"name\");","\t\t\tvar Ammo0 = findObjs({name: attName + \"pay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Ammo1 = findObjs({name: attName + \"Rounds\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Clipsc = findObjs({name: attName + \"clip\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (Clipsc != undefined) {","\t\t\t\tvar Clips = parseInt(Clipsc.get(\"current\"), 10);","\t\t\t}","\t\t\tvar cWep = parseInt(Ammo0.get(\"current\"), 10);","\t\t\tvar mWep = parseInt(Ammo0.get(\"max\"), 10 );","\t\t\tvar cAmmo = parseInt(Ammo1.get(\"current\"), 10);","\t\t\tif (cAmmo <= 0) {","\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' NO AMMO TO RELOAD!</div>';","\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t}","\t\t\telse {","\t\t\t\tvar needed = mWep - cWep;","\t\t\t\tif (needed >= cAmmo) {","\t\t\t\t\tneeded = cAmmo;","\t\t\t\t}","\t\t\t\tif (Clips == 10) {","\t\t\t\t\tneeded = 1;","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = cAmmo;","\t\t\t\t\tAmmo0.set('current', mWep);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' is reloading: ' + needed + \" clips on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + 'Clips)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = Math.round((cAmmo / mWep) * 10) / 10;","\t\t\t\t\tAmmo0.set('current', cWep + needed);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>\" + msg.who + ' is reloading ' + needed + \" Ammo on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + ' reloads)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t}","\t\t}","\t}","});","//---AUTO LOCATION ROLLS","var aLoc = [\"Head\", \"Left Arm\", \"Right Arm\", \"Left Leg\", \"Right Leg\", \"..Dangly Bits! (Main Body)\", \"FREE ATTACK!\"];","//---FUMBLE ROLLS","var aFum = [","\t\"Hit a totally different friendly target in general direction of aimed target (if possible)\",","\t\"Ungracefully fumbled the attack!, lose next attack\",","\t\"Got something in eye, lose this attack\",","\t\"Missed so badly, it makes the enemy see you and an easy target!\",","\t\"Total gun jam/broke weapon(or limb!).. useless this fight. Must get fixed.\",","\t\"Tripped!, next attack to get up\",","\t\"Miss and weapon jam! (GUN) jams, (MELEE) Missed and stuck in Wall/Floor/Tree/Off Balance/etc loose next attack\",","\t\"Missed, and draws sole aggression of the target\",","\t\"Somehow hit a Flying Squirrel!\",","\t\"Failed so badly nearest ally falls back to help.\"","];",""],"id":714},{"start":{"row":0,"column":0},"end":{"row":282,"column":0},"action":"insert","lines":["//!attack --[[1d20]] --[[3d6]] --saying! --ammotype","/*global OuterDiv PlaySound TopBar iPart MidBar BottBar MakeRollNum log on findObjs randomInteger RollRight _ sendChat bShadow font getObj"," */","on('chat:message', function(msg) {","\tif (msg.type != \"api\") return;","\t//log(msg.content);","\tvar msgTxt = msg.content;","\tvar command = msgTxt.split(\" \", 1);","\tvar cWho = findObjs({_type: 'character',name: msg.who})[0];","\tif (cWho == undefined && msg.who.indexOf(\"(GM)\") == -1) {","\t\tcWho = RollRight(msg.playerid);","\t\tmsg.who = cWho.get(\"name\");","\t}","","/*-----------CHECK API-----------*/","\tif (command == \"!attack\") {","/*-----------BOXES-----------*/","\t\tvar Main;","\t\tvar PlayerBGColor = getObj(\"player\", msg.playerid).get(\"color\");","\t\tvar PlayerBarColor = \"background-image:-webkit-linear-gradient(left, #000000 0%,\"+PlayerBGColor+\" 15%,\"+PlayerBGColor+\" 85%,#000000 100%);\";","\t\tvar RollColor = \"background-image:-webkit-linear-gradient(left, #000000,#848484,#000000);\";","\t\tvar topimg = \"https://s3.amazonaws.com/files.staging.d20.io/images/181118/cN5ui3MXx87UBgVUgzwYTQ/med.jpg?141868063\";","\t\tvar TextShadow = \"-1px -1px #444, 1px -1px #444, -1px 1px #444, 1px 1px #444\";","\t\tvar SayParts = \"<div style='text-shadow: 1px 1px #000, -1px -1px #000, -1px 1px #000, 1px -1px #000; margin: 0em 0em 0em 0em;; font-size:8pt; display:inline-block; text-align: center; vertical-align:middle; padding: 0px 6px 0px 6px; border: 1px solid #000; border-radius: 3px; color: #FFF; background-image: url(\" + topimg + \");'>\";","\t\tvar RollDiv = \"<div style='margin: 0em 0.1em 0.1em 0em; font-size: 10pt; text-shadow: \" + TextShadow + \"; width: 15px; height: 15px; line-height: 15px; display:inline-block; text-align:center; padding: 0px 1px 0px 0px; border: 1px solid #000; border-radius: 3px; color: #FFF;\";","","\t\tvar MainSayDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family:\" + font + \"; font-size: x-small; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color:#CEC7B6; color: #000;'>\";","\t\tvar MainEvenDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #CEC7B6; color: #000;'>\";","\t\tvar MainOddDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #C0B9A8; color: #000;'>\";","\t\tvar AmmoDiv =  \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; font-family: \" + font + \"; font-size: 8pt; text-align: center; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; color: #000;\";","/*---------------------------*/","\t\tvar who = msg.who;","\t\tmsg.content = MakeRollNum(msg.content, msg.inlinerolls);","//check rolls---------------------","\t\tvar AttackRolls = msg.inlinerolls[0];","\t\tvar DamageRolls = msg.inlinerolls[1];","//define var----------------------","\t\tif (AttackRolls === undefined || DamageRolls === undefined) {","\t\t\tsendChat('', \"/direct <B><I>bad macro!\");","\t\t\treturn;","\t\t}","\t\tmsgFormula = msgTxt.split(\" --\");","\t\tvar Lucky = 20;","\t\tvar failRange = 1;","\t\tvar DamageRollRaw = \"\";","\t\tvar BottomText = \"\";","\t\tvar fumble = 0;","\t\tvar miss = 0;","\t\tvar crit_img = \"http:\\\\//media.giphy.com/media/3KqZp8MBaf1Ty/giphy.gif\";","\t\tvar fail_img = \"http:\\\\//fc06.deviantart.net/fs70/f/2013/076/5/2/_tutorial__creating_an_animated_light_pulse_in_ps_by_d_k0d3-d5ybir4.gif\";","\t\tif (msg.who == \"GM (GM)\") {","\t\t\twho = \"NPC\";","\t\t}","/*-----------START-----------*/","//Check for GUN","\t\tif (who !== \"NPC\") {","\t\t\tif (msgFormula[4] === undefined) msgFormula[4] = msgFormula[3];","\t\t\tif (msgFormula[4] !== undefined) {","\t\t\t\tvar gunleng = msgFormula[4].length - 1;","\t\t\t\tvar ammo = parseInt(msgFormula[4].substr(gunleng), 10);","\t\t\t\tif (!isNaN(ammo)) {","\t\t\t\t\tgunleng = msgFormula[4].length - 2;","\t\t\t\t\tvar gun = msgFormula[4].substr(0, gunleng);","\t\t\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (FindGun == undefined) {","\t\t\t\t\t\tsendChat('Error', \"/desc \" + msg.who + \" You do not own a  \" + gun);","\t\t\t\t\t\treturn;","\t\t\t\t\t}","\t\t\t\t\tvar GunName = FindGun.get(\"name\");","\t\t\t\t\tvar leng = GunName.length - 5;","\t\t\t\t\tleng = GunName.substr(0, leng);","\t\t\t\t\tvar ammo0 = findObjs({name: leng + \"_WEAPpay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (ammo0 == undefined) {","\t\t\t\t\t\tammo0 = FindGun;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","/*-----------ATTACK PARTS-----------*/","//--Attack Modifier","\t\tvar AttackBonus;","\t\tvar AttackRollText;","\t\tif (AttackRolls.results.rolls[1] === undefined) AttackBonus = \"\";","\t\telse AttackBonus = (AttackRolls.results.rolls[1].expr);","\t\tvar AttackRollRaw = AttackRolls.results.rolls[0].results[0]['v'];","\t\t//Attack total and type","\t\tvar AttackTotal = (AttackRolls.results.total);","\t\tvar Atype = \"<a style='color:RED'>\" + AttackRolls.expression + \"</a>\";","//--Set Miss","\t\tif (AttackRollRaw <= 3) {","\t\t\tAttackRollText = RollDiv + \"background-color:#A80000;'>\" + AttackRollRaw + \"</div>\";","\t\t\tBottomText = BottomText + \" \" + 'MISS';","\t\t\tvar miss = 1;","\t\t}","\t\telse AttackRollText = RollDiv + \"background-color:#696969;'>\" + AttackRollRaw + \"</div>\";","/*-----------DAMAGE PARTS-----------*/","//--Damage modifier","\t\tvar DamageBonus;","\t\tif (DamageRolls.results.rolls[1] === undefined) DamageBonus = \"\";","\t\telse DamageBonus = (DamageRolls.results.rolls[1].expr);","\t\t//--Set damage total","\t\tvar DamageTotal = DamageRolls.results.total;","\t\t//--Make damage text for all rolls","\t\tvar dam = DamageRolls.results.rolls[0];","\t\tvar i = 0;","\t\twhile (dam.results[i] !== undefined) {","\t\t\tvar dNum = dam.results[i]['v'];","\t\t\tvar num;","\t\t\tvar ddimg = \"http://image.blingee.com.s3.amazonaws.com/images19/content/output/000/000/000/061/788808721_1076628.gif?4\";","\t\t\tvar bg_max = \"background-position:center; background-image: url(\" + ddimg + \");\";","\t\t\tif (dNum == 1) num = RollDiv + \"background-color:#A80000;'>\" + dNum + \"</div></b></a>\";","\t\t\telse if (dNum == DamageRolls.results.rolls[0].sides) num = RollDiv + \"background-color:#00A120;\" + bg_max + \"'><b>\" + dNum + \"</b></div></b></a>\";","\t\t\telse num = RollDiv + \"background-color:#696969;'>\" + dNum + \"</div>\";","\t\t\tDamageRollRaw = DamageRollRaw + \"\" + (num);","\t\t\ti++;","\t\t}","\t\tvar Dtype = \"<a style='color:RED;'>\" + DamageRolls.expression + \"</a>\";","\t\tDamageRollRaw = DamageRollRaw + \"<b>\" + DamageBonus + \"</b>\";","\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a>\";","\t\tif (miss == 1)  DTOTALS = \"\";","//--Set Double Damage","\t\tif (AttackRollRaw >= 20) {","\t\t    var CritCheer = '<div style=\"width: 99%; height: 40px; border: 1px solid #666666; overflow: hidden; position: relative;\"><img  src=\"https://media.giphy.com/media/11sBLVxNs7v6WA/giphy.gif\" style=\"position: absolute; top:-35px; left:0px;\"/></div>';","\t\t\tDamageTotal = \"<a style='color:RED'><strong>\" + DamageTotal * 2 + \"!</strong></a>\";","\t\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a><br>\"+CritCheer;","\t\t\tAttackTotal = \"<a style='color:RED'><strong>\" + AttackTotal + \"!</strong></a>\";","\t\t\tBottomText = BottomText + \" \" + '<b>DOUBLE DAMAGE!</b><BR><b>(NATURAL 20!)</b><br>';","\t\t\tRollColor = \"background-position:center; background-image: url(\" + crit_img + \");\";","\t\t\tPlaySound('Critical', 9000);","\t\t}","//set motto","\t\tif (msgFormula[3] !== undefined) {","\t\t\tvar WarCryleng = msgFormula[3].length - 1;","\t\t\tvar sayingCheck = parseInt(msgFormula[3].substr(WarCryleng), 10);","\t\t\tif (isNaN(sayingCheck)) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t}","\t\t\telse if (msgFormula[3] !== undefined && msgFormula[4] == undefined) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t\tWarCryleng = msgFormula[3].length - 2;","\t\t\t\tvar WarCry = msgFormula[3].substr(0, WarCryleng).toUpperCase();","\t\t\t}","\t\t}","\t\telse {","\t\t\tWarCry = \"ATTACK!\";","\t\t}","//CHATBOX PARTS----------------","\t\tMain = MainSayDiv + SayParts + \"<b><i><marquee><img src='logo.jpg'></marquee> ●\" + WarCry + \"●</i></b></div></div>\";","\t\tMain = Main + MainOddDiv + Atype + \" <b>To Hit: </b>\" + AttackRollText + \"<b>\" + AttackBonus + \" = <a style='color:BLUE'>\" + AttackTotal + \"</b></a></div>\";","\t\tMain = Main + MainEvenDiv + DTOTALS + \"</div>\";","//--CRIT roll","\t\tvar IsLucky = randomInteger(Lucky);","\t\tif (IsLucky >= Lucky && AttackRollRaw > 4) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><b>Lucky Shot!: \" + aLoc[Math.floor(Math.random() * aLoc.length)] + \"</b></div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(http:\\\\//i.imgur.com/cFiEs5R.gif);\";","\t\t\tBottomText = BottomText + \" \" + SayParts + \"<b><i>●LUCKY SHOT●</i></b></div></div>\";","","//FAIL roll","\t\t}","\t\tif (AttackRollRaw <= failRange) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><strong style='font-size: 150%;'><b>Fumble!: \" + aFum[Math.floor(Math.random() * aFum.length)] + \"</div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(\" + fail_img + \");\";","\t\t\tBottomText = BottomText + \" \" + 'FUMBLE';","\t\t\tfumble = 1;","\t\t}","/*-----------","AMMO PARTS","-----------*/","\t\tif (FindGun !== undefined && who !== \"NPC\" && ammo0 !== undefined) {","\t\t\tvar ammoleng = msgFormula[4].length - 1;","\t\t\tvar ammo = parseInt(msgFormula[4].substr(ammoleng));","\t\t\tvar ammoC = parseInt(ammo);","\t\t\tif (ammoC === undefined || isNaN(ammoC)) ammoC = 1;","\t\t\tvar cAmmo = parseInt(ammo0.get(\"current\"));","\t\t\tvar mAmmo = parseInt(ammo0.get(\"max\"));","\t\t\tif (isNaN(cAmmo) || isNaN(mAmmo)) {","\t\t\t\tsendChat('Error', \"/desc Set ammo for  \" + gun);","\t\t\t\treturn;","\t\t\t}","\t\t\tvar per = (cAmmo / mAmmo) * 100;","\t\t\tif (mAmmo == 0) {}","\t\t\telse if (cAmmo <= 0 || cAmmo < ammoC) {","\t\t\t\tcAmmo = \"0\";","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tMain = AmmoDiv + \"background-color:RED;'><b><i>Not Enough \" + gun + \" ammo left in clip.</div>\";","\t\t\t}","\t\t\telse if (cAmmo <= 3 || cAmmo < ammoC) {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 3px;\"><div style=\"background-color: red; width: ' + per + '%; height: 5px; border-radius: 10px;\"></div></div>';","\t\t\t\tammoT = AmmoDiv + \"background-color:#B82A2A;'><b><i>\" + cAmmo + \" \" + gun + \" ammo left in clip.</b></i>\" + ammoT + \"</div>\";","\t\t\t\tMain = Main + ammoT;","\t\t\t}","\t\t\telse {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 1px;\"><div style=\"background-color: orange; width: ' + per + '%; height: 3px; border-radius: 10px; margins: 0px;\"></div></div>';","\t\t\t\tammoT = AmmoDiv + \"background-color:#A8A191;'><b><i>\" + cAmmo + \" of \" + mAmmo + \" \" + gun + \" ammo left</b></i>\" + ammoT + \"</div>\";","\t\t\t\tMain = Main + ammoT;","\t\t\t}","\t\t}","/*-----------SEND CHAT-----------*/","\t\tvar MsgBox = TopBar + RollColor +\";'></div>\"+ MidBar + PlayerBarColor +\";'><b>\" + who + \"  Attacks</b></div>\"+Main+\"</div>\"+BottBar + RollColor +\";'><b>\" + BottomText + \"</b></div>\";","\t\tvar SendT = MsgBox;","\t\tif (AttackRollRaw <= 3 && fumble != 1) {","\t\t\tSendT = \"<div style='opacity: 0.6;'><strong style='font-size: 90%;'>\" + SendT + \"</strong></div>\";","\t\t}","\t\tif (AttackRollRaw >= 20) {","\t\t\tSendT = \"<strong style='font-size: 130%;'>\" + SendT + \"</strong>\";","\t\t}","\t\tsendChat(who, '/direct ' + SendT);","\t\tPlaySound('dice', 9000);","\t\treturn;","\t}","//----------------------------","//RELOAD----------------","//----------------------------","\tif (command == \"!reload\") {","\t\tif (cWho !== undefined) {","\t\t\tvar msgFormula = msgTxt.split(\" --\");","\t\t\tvar gun = msgFormula[1];","\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (FindGun == undefined) {","\t\t\t\tsendChat('', '/desc ' + msg.who + ': <b>ammo not found</b>');","\t\t\t\treturn;","\t\t\t}","\t\t\tClips = 0;","\t\t\tvar attName = FindGun.get(\"name\");","\t\t\tvar Ammo0 = findObjs({name: attName + \"pay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Ammo1 = findObjs({name: attName + \"Rounds\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Clipsc = findObjs({name: attName + \"clip\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (Clipsc != undefined) {","\t\t\t\tvar Clips = parseInt(Clipsc.get(\"current\"), 10);","\t\t\t}","\t\t\tvar cWep = parseInt(Ammo0.get(\"current\"), 10);","\t\t\tvar mWep = parseInt(Ammo0.get(\"max\"), 10 );","\t\t\tvar cAmmo = parseInt(Ammo1.get(\"current\"), 10);","\t\t\tif (cAmmo <= 0) {","\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' NO AMMO TO RELOAD!</div>';","\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t}","\t\t\telse {","\t\t\t\tvar needed = mWep - cWep;","\t\t\t\tif (needed >= cAmmo) {","\t\t\t\t\tneeded = cAmmo;","\t\t\t\t}","\t\t\t\tif (Clips == 10) {","\t\t\t\t\tneeded = 1;","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = cAmmo;","\t\t\t\t\tAmmo0.set('current', mWep);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' is reloading: ' + needed + \" clips on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + 'Clips)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = Math.round((cAmmo / mWep) * 10) / 10;","\t\t\t\t\tAmmo0.set('current', cWep + needed);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>\" + msg.who + ' is reloading ' + needed + \" Ammo on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + ' reloads)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t}","\t\t}","\t}","});","//---AUTO LOCATION ROLLS","var aLoc = [\"Head\", \"Left Arm\", \"Right Arm\", \"Left Leg\", \"Right Leg\", \"..Dangly Bits! (Main Body)\", \"FREE ATTACK!\"];","//---FUMBLE ROLLS","var aFum = [","\t\"Hit a totally different friendly target in general direction of aimed target (if possible)\",","\t\"Ungracefully fumbled the attack!, lose next attack\",","\t\"Got something in eye, lose this attack\",","\t\"Missed so badly, it makes the enemy see you and an easy target!\",","\t\"Total gun jam/broke weapon(or limb!).. useless this fight. Must get fixed.\",","\t\"Tripped!, next attack to get up\",","\t\"Miss and weapon jam! (GUN) jams, (MELEE) Missed and stuck in Wall/Floor/Tree/Off Balance/etc loose next attack\",","\t\"Missed, and draws sole aggression of the target\",","\t\"Somehow hit a Flying Squirrel!\",","\t\"Failed so badly nearest ally falls back to help.\"","];",""]}],[{"start":{"row":118,"column":44},"end":{"row":118,"column":45},"action":"insert","lines":["("],"id":715}],[{"start":{"row":118,"column":66},"end":{"row":118,"column":67},"action":"insert","lines":[")"],"id":716}],[{"start":{"row":87,"column":36},"end":{"row":87,"column":37},"action":"insert","lines":["("],"id":717}],[{"start":{"row":87,"column":67},"end":{"row":87,"column":68},"action":"insert","lines":[")"],"id":718}],[{"start":{"row":0,"column":0},"end":{"row":282,"column":0},"action":"remove","lines":["//!attack --[[1d20]] --[[3d6]] --saying! --ammotype","/*global OuterDiv PlaySound TopBar iPart MidBar BottBar MakeRollNum log on findObjs randomInteger RollRight _ sendChat bShadow font getObj"," */","on('chat:message', function(msg) {","\tif (msg.type != \"api\") return;","\t//log(msg.content);","\tvar msgTxt = msg.content;","\tvar command = msgTxt.split(\" \", 1);","\tvar cWho = findObjs({_type: 'character',name: msg.who})[0];","\tif (cWho == undefined && msg.who.indexOf(\"(GM)\") == -1) {","\t\tcWho = RollRight(msg.playerid);","\t\tmsg.who = cWho.get(\"name\");","\t}","","/*-----------CHECK API-----------*/","\tif (command == \"!attack\") {","/*-----------BOXES-----------*/","\t\tvar Main;","\t\tvar PlayerBGColor = getObj(\"player\", msg.playerid).get(\"color\");","\t\tvar PlayerBarColor = \"background-image:-webkit-linear-gradient(left, #000000 0%,\"+PlayerBGColor+\" 15%,\"+PlayerBGColor+\" 85%,#000000 100%);\";","\t\tvar RollColor = \"background-image:-webkit-linear-gradient(left, #000000,#848484,#000000);\";","\t\tvar topimg = \"https://s3.amazonaws.com/files.staging.d20.io/images/181118/cN5ui3MXx87UBgVUgzwYTQ/med.jpg?141868063\";","\t\tvar TextShadow = \"-1px -1px #444, 1px -1px #444, -1px 1px #444, 1px 1px #444\";","\t\tvar SayParts = \"<div style='text-shadow: 1px 1px #000, -1px -1px #000, -1px 1px #000, 1px -1px #000; margin: 0em 0em 0em 0em;; font-size:8pt; display:inline-block; text-align: center; vertical-align:middle; padding: 0px 6px 0px 6px; border: 1px solid #000; border-radius: 3px; color: #FFF; background-image: url(\" + topimg + \");'>\";","\t\tvar RollDiv = \"<div style='margin: 0em 0.1em 0.1em 0em; font-size: 10pt; text-shadow: \" + TextShadow + \"; width: 15px; height: 15px; line-height: 15px; display:inline-block; text-align:center; padding: 0px 1px 0px 0px; border: 1px solid #000; border-radius: 3px; color: #FFF;\";","","\t\tvar MainSayDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family:\" + font + \"; font-size: x-small; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color:#CEC7B6; color: #000;'>\";","\t\tvar MainEvenDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #CEC7B6; color: #000;'>\";","\t\tvar MainOddDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #C0B9A8; color: #000;'>\";","\t\tvar AmmoDiv =  \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; font-family: \" + font + \"; font-size: 8pt; text-align: center; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; color: #000;\";","/*---------------------------*/","\t\tvar who = msg.who;","\t\tmsg.content = MakeRollNum(msg.content, msg.inlinerolls);","//check rolls---------------------","\t\tvar AttackRolls = msg.inlinerolls[0];","\t\tvar DamageRolls = msg.inlinerolls[1];","//define var----------------------","\t\tif (AttackRolls === undefined || DamageRolls === undefined) {","\t\t\tsendChat('', \"/direct <B><I>bad macro!\");","\t\t\treturn;","\t\t}","\t\tmsgFormula = msgTxt.split(\" --\");","\t\tvar Lucky = 20;","\t\tvar failRange = 1;","\t\tvar DamageRollRaw = \"\";","\t\tvar BottomText = \"\";","\t\tvar fumble = 0;","\t\tvar miss = 0;","\t\tvar crit_img = \"http:\\\\//media.giphy.com/media/3KqZp8MBaf1Ty/giphy.gif\";","\t\tvar fail_img = \"http:\\\\//fc06.deviantart.net/fs70/f/2013/076/5/2/_tutorial__creating_an_animated_light_pulse_in_ps_by_d_k0d3-d5ybir4.gif\";","\t\tif (msg.who == \"GM (GM)\") {","\t\t\twho = \"NPC\";","\t\t}","/*-----------START-----------*/","//Check for GUN","\t\tif (who !== \"NPC\") {","\t\t\tif (msgFormula[4] === undefined) msgFormula[4] = msgFormula[3];","\t\t\tif (msgFormula[4] !== undefined) {","\t\t\t\tvar gunleng = msgFormula[4].length - 1;","\t\t\t\tvar ammo = parseInt(msgFormula[4].substr(gunleng), 10);","\t\t\t\tif (!isNaN(ammo)) {","\t\t\t\t\tgunleng = msgFormula[4].length - 2;","\t\t\t\t\tvar gun = msgFormula[4].substr(0, gunleng);","\t\t\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (FindGun == undefined) {","\t\t\t\t\t\tsendChat('Error', \"/desc \" + msg.who + \" You do not own a  \" + gun);","\t\t\t\t\t\treturn;","\t\t\t\t\t}","\t\t\t\t\tvar GunName = FindGun.get(\"name\");","\t\t\t\t\tvar leng = GunName.length - 5;","\t\t\t\t\tleng = GunName.substr(0, leng);","\t\t\t\t\tvar ammo0 = findObjs({name: leng + \"_WEAPpay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (ammo0 == undefined) {","\t\t\t\t\t\tammo0 = FindGun;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","/*-----------ATTACK PARTS-----------*/","//--Attack Modifier","\t\tvar AttackBonus;","\t\tvar AttackRollText;","\t\tif (AttackRolls.results.rolls[1] === undefined) AttackBonus = \"\";","\t\telse AttackBonus = (AttackRolls.results.rolls[1].expr);","\t\tvar AttackRollRaw = AttackRolls.results.rolls[0].results[0]['v'];","\t\t//Attack total and type","\t\tvar AttackTotal = (AttackRolls.results.total);","\t\tvar Atype = \"<a style='color:RED'>(\" + AttackRolls.expression + \")</a>\";","//--Set Miss","\t\tif (AttackRollRaw <= 3) {","\t\t\tAttackRollText = RollDiv + \"background-color:#A80000;'>\" + AttackRollRaw + \"</div>\";","\t\t\tBottomText = BottomText + \" \" + 'MISS';","\t\t\tvar miss = 1;","\t\t}","\t\telse AttackRollText = RollDiv + \"background-color:#696969;'>\" + AttackRollRaw + \"</div>\";","/*-----------DAMAGE PARTS-----------*/","//--Damage modifier","\t\tvar DamageBonus;","\t\tif (DamageRolls.results.rolls[1] === undefined) DamageBonus = \"\";","\t\telse DamageBonus = (DamageRolls.results.rolls[1].expr);","\t\t//--Set damage total","\t\tvar DamageTotal = DamageRolls.results.total;","\t\t//--Make damage text for all rolls","\t\tvar dam = DamageRolls.results.rolls[0];","\t\tvar i = 0;","\t\twhile (dam.results[i] !== undefined) {","\t\t\tvar dNum = dam.results[i]['v'];","\t\t\tvar num;","\t\t\tvar ddimg = \"http://image.blingee.com.s3.amazonaws.com/images19/content/output/000/000/000/061/788808721_1076628.gif?4\";","\t\t\tvar bg_max = \"background-position:center; background-image: url(\" + ddimg + \");\";","\t\t\tif (dNum == 1) num = RollDiv + \"background-color:#A80000;'>\" + dNum + \"</div></b></a>\";","\t\t\telse if (dNum == DamageRolls.results.rolls[0].sides) num = RollDiv + \"background-color:#00A120;\" + bg_max + \"'><b>\" + dNum + \"</b></div></b></a>\";","\t\t\telse num = RollDiv + \"background-color:#696969;'>\" + dNum + \"</div>\";","\t\t\tDamageRollRaw = DamageRollRaw + \"\" + (num);","\t\t\ti++;","\t\t}","\t\tvar Dtype = \"<a style='color:RED;'>\" + DamageRolls.expression + \"</a>\";","\t\tDamageRollRaw = DamageRollRaw + \"<b>\" + DamageBonus + \"</b>\";","\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>(\" + DamageRollRaw + \")<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a>\";","\t\tif (miss == 1)  DTOTALS = \"\";","//--Set Double Damage","\t\tif (AttackRollRaw >= 20) {","\t\t    var CritCheer = '<div style=\"width: 99%; height: 40px; border: 1px solid #666666; overflow: hidden; position: relative;\"><img  src=\"https://media.giphy.com/media/11sBLVxNs7v6WA/giphy.gif\" style=\"position: absolute; top:-35px; left:0px;\"/></div>';","\t\t\tDamageTotal = \"<a style='color:RED'><strong>\" + DamageTotal * 2 + \"!</strong></a>\";","\t\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a><br>\"+CritCheer;","\t\t\tAttackTotal = \"<a style='color:RED'><strong>\" + AttackTotal + \"!</strong></a>\";","\t\t\tBottomText = BottomText + \" \" + '<b>DOUBLE DAMAGE!</b><BR><b>(NATURAL 20!)</b><br>';","\t\t\tRollColor = \"background-position:center; background-image: url(\" + crit_img + \");\";","\t\t\tPlaySound('Critical', 9000);","\t\t}","//set motto","\t\tif (msgFormula[3] !== undefined) {","\t\t\tvar WarCryleng = msgFormula[3].length - 1;","\t\t\tvar sayingCheck = parseInt(msgFormula[3].substr(WarCryleng), 10);","\t\t\tif (isNaN(sayingCheck)) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t}","\t\t\telse if (msgFormula[3] !== undefined && msgFormula[4] == undefined) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t\tWarCryleng = msgFormula[3].length - 2;","\t\t\t\tvar WarCry = msgFormula[3].substr(0, WarCryleng).toUpperCase();","\t\t\t}","\t\t}","\t\telse {","\t\t\tWarCry = \"ATTACK!\";","\t\t}","//CHATBOX PARTS----------------","\t\tMain = MainSayDiv + SayParts + \"<b><i><marquee><img src='logo.jpg'></marquee> ●\" + WarCry + \"●</i></b></div></div>\";","\t\tMain = Main + MainOddDiv + Atype + \" <b>To Hit: </b>\" + AttackRollText + \"<b>\" + AttackBonus + \" = <a style='color:BLUE'>\" + AttackTotal + \"</b></a></div>\";","\t\tMain = Main + MainEvenDiv + DTOTALS + \"</div>\";","//--CRIT roll","\t\tvar IsLucky = randomInteger(Lucky);","\t\tif (IsLucky >= Lucky && AttackRollRaw > 4) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><b>Lucky Shot!: \" + aLoc[Math.floor(Math.random() * aLoc.length)] + \"</b></div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(http:\\\\//i.imgur.com/cFiEs5R.gif);\";","\t\t\tBottomText = BottomText + \" \" + SayParts + \"<b><i>●LUCKY SHOT●</i></b></div></div>\";","","//FAIL roll","\t\t}","\t\tif (AttackRollRaw <= failRange) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><strong style='font-size: 150%;'><b>Fumble!: \" + aFum[Math.floor(Math.random() * aFum.length)] + \"</div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(\" + fail_img + \");\";","\t\t\tBottomText = BottomText + \" \" + 'FUMBLE';","\t\t\tfumble = 1;","\t\t}","/*-----------","AMMO PARTS","-----------*/","\t\tif (FindGun !== undefined && who !== \"NPC\" && ammo0 !== undefined) {","\t\t\tvar ammoleng = msgFormula[4].length - 1;","\t\t\tvar ammo = parseInt(msgFormula[4].substr(ammoleng));","\t\t\tvar ammoC = parseInt(ammo);","\t\t\tif (ammoC === undefined || isNaN(ammoC)) ammoC = 1;","\t\t\tvar cAmmo = parseInt(ammo0.get(\"current\"));","\t\t\tvar mAmmo = parseInt(ammo0.get(\"max\"));","\t\t\tif (isNaN(cAmmo) || isNaN(mAmmo)) {","\t\t\t\tsendChat('Error', \"/desc Set ammo for  \" + gun);","\t\t\t\treturn;","\t\t\t}","\t\t\tvar per = (cAmmo / mAmmo) * 100;","\t\t\tif (mAmmo == 0) {}","\t\t\telse if (cAmmo <= 0 || cAmmo < ammoC) {","\t\t\t\tcAmmo = \"0\";","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tMain = AmmoDiv + \"background-color:RED;'><b><i>Not Enough \" + gun + \" ammo left in clip.</div>\";","\t\t\t}","\t\t\telse if (cAmmo <= 3 || cAmmo < ammoC) {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 3px;\"><div style=\"background-color: red; width: ' + per + '%; height: 5px; border-radius: 10px;\"></div></div>';","\t\t\t\tammoT = AmmoDiv + \"background-color:#B82A2A;'><b><i>\" + cAmmo + \" \" + gun + \" ammo left in clip.</b></i>\" + ammoT + \"</div>\";","\t\t\t\tMain = Main + ammoT;","\t\t\t}","\t\t\telse {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 1px;\"><div style=\"background-color: orange; width: ' + per + '%; height: 3px; border-radius: 10px; margins: 0px;\"></div></div>';","\t\t\t\tammoT = AmmoDiv + \"background-color:#A8A191;'><b><i>\" + cAmmo + \" of \" + mAmmo + \" \" + gun + \" ammo left</b></i>\" + ammoT + \"</div>\";","\t\t\t\tMain = Main + ammoT;","\t\t\t}","\t\t}","/*-----------SEND CHAT-----------*/","\t\tvar MsgBox = TopBar + RollColor +\";'></div>\"+ MidBar + PlayerBarColor +\";'><b>\" + who + \"  Attacks</b></div>\"+Main+\"</div>\"+BottBar + RollColor +\";'><b>\" + BottomText + \"</b></div>\";","\t\tvar SendT = MsgBox;","\t\tif (AttackRollRaw <= 3 && fumble != 1) {","\t\t\tSendT = \"<div style='opacity: 0.6;'><strong style='font-size: 90%;'>\" + SendT + \"</strong></div>\";","\t\t}","\t\tif (AttackRollRaw >= 20) {","\t\t\tSendT = \"<strong style='font-size: 130%;'>\" + SendT + \"</strong>\";","\t\t}","\t\tsendChat(who, '/direct ' + SendT);","\t\tPlaySound('dice', 9000);","\t\treturn;","\t}","//----------------------------","//RELOAD----------------","//----------------------------","\tif (command == \"!reload\") {","\t\tif (cWho !== undefined) {","\t\t\tvar msgFormula = msgTxt.split(\" --\");","\t\t\tvar gun = msgFormula[1];","\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (FindGun == undefined) {","\t\t\t\tsendChat('', '/desc ' + msg.who + ': <b>ammo not found</b>');","\t\t\t\treturn;","\t\t\t}","\t\t\tClips = 0;","\t\t\tvar attName = FindGun.get(\"name\");","\t\t\tvar Ammo0 = findObjs({name: attName + \"pay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Ammo1 = findObjs({name: attName + \"Rounds\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Clipsc = findObjs({name: attName + \"clip\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (Clipsc != undefined) {","\t\t\t\tvar Clips = parseInt(Clipsc.get(\"current\"), 10);","\t\t\t}","\t\t\tvar cWep = parseInt(Ammo0.get(\"current\"), 10);","\t\t\tvar mWep = parseInt(Ammo0.get(\"max\"), 10 );","\t\t\tvar cAmmo = parseInt(Ammo1.get(\"current\"), 10);","\t\t\tif (cAmmo <= 0) {","\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' NO AMMO TO RELOAD!</div>';","\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t}","\t\t\telse {","\t\t\t\tvar needed = mWep - cWep;","\t\t\t\tif (needed >= cAmmo) {","\t\t\t\t\tneeded = cAmmo;","\t\t\t\t}","\t\t\t\tif (Clips == 10) {","\t\t\t\t\tneeded = 1;","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = cAmmo;","\t\t\t\t\tAmmo0.set('current', mWep);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' is reloading: ' + needed + \" clips on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + 'Clips)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = Math.round((cAmmo / mWep) * 10) / 10;","\t\t\t\t\tAmmo0.set('current', cWep + needed);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>\" + msg.who + ' is reloading ' + needed + \" Ammo on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + ' reloads)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t}","\t\t}","\t}","});","//---AUTO LOCATION ROLLS","var aLoc = [\"Head\", \"Left Arm\", \"Right Arm\", \"Left Leg\", \"Right Leg\", \"..Dangly Bits! (Main Body)\", \"FREE ATTACK!\"];","//---FUMBLE ROLLS","var aFum = [","\t\"Hit a totally different friendly target in general direction of aimed target (if possible)\",","\t\"Ungracefully fumbled the attack!, lose next attack\",","\t\"Got something in eye, lose this attack\",","\t\"Missed so badly, it makes the enemy see you and an easy target!\",","\t\"Total gun jam/broke weapon(or limb!).. useless this fight. Must get fixed.\",","\t\"Tripped!, next attack to get up\",","\t\"Miss and weapon jam! (GUN) jams, (MELEE) Missed and stuck in Wall/Floor/Tree/Off Balance/etc loose next attack\",","\t\"Missed, and draws sole aggression of the target\",","\t\"Somehow hit a Flying Squirrel!\",","\t\"Failed so badly nearest ally falls back to help.\"","];",""],"id":719},{"start":{"row":0,"column":0},"end":{"row":282,"column":0},"action":"insert","lines":["//!attack --[[1d20]] --[[3d6]] --saying! --ammotype","/*global OuterDiv PlaySound TopBar iPart MidBar BottBar MakeRollNum log on findObjs randomInteger RollRight _ sendChat bShadow font getObj"," */","on('chat:message', function(msg) {","\tif (msg.type != \"api\") return;","\t//log(msg.content);","\tvar msgTxt = msg.content;","\tvar command = msgTxt.split(\" \", 1);","\tvar cWho = findObjs({_type: 'character',name: msg.who})[0];","\tif (cWho == undefined && msg.who.indexOf(\"(GM)\") == -1) {","\t\tcWho = RollRight(msg.playerid);","\t\tmsg.who = cWho.get(\"name\");","\t}","","/*-----------CHECK API-----------*/","\tif (command == \"!attack\") {","/*-----------BOXES-----------*/","\t\tvar Main;","\t\tvar PlayerBGColor = getObj(\"player\", msg.playerid).get(\"color\");","\t\tvar PlayerBarColor = \"background-image:-webkit-linear-gradient(left, #000000 0%,\"+PlayerBGColor+\" 15%,\"+PlayerBGColor+\" 85%,#000000 100%);\";","\t\tvar RollColor = \"background-image:-webkit-linear-gradient(left, #000000,#848484,#000000);\";","\t\tvar topimg = \"https://s3.amazonaws.com/files.staging.d20.io/images/181118/cN5ui3MXx87UBgVUgzwYTQ/med.jpg?141868063\";","\t\tvar TextShadow = \"-1px -1px #444, 1px -1px #444, -1px 1px #444, 1px 1px #444\";","\t\tvar SayParts = \"<div style='text-shadow: 1px 1px #000, -1px -1px #000, -1px 1px #000, 1px -1px #000; margin: 0em 0em 0em 0em;; font-size:8pt; display:inline-block; text-align: center; vertical-align:middle; padding: 0px 6px 0px 6px; border: 1px solid #000; border-radius: 3px; color: #FFF; background-image: url(\" + topimg + \");'>\";","\t\tvar RollDiv = \"<div style='margin: 0em 0.1em 0.1em 0em; font-size: 10pt; text-shadow: \" + TextShadow + \"; width: 15px; height: 15px; line-height: 15px; display:inline-block; text-align:center; padding: 0px 1px 0px 0px; border: 1px solid #000; border-radius: 3px; color: #FFF;\";","","\t\tvar MainSayDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family:\" + font + \"; font-size: x-small; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color:#CEC7B6; color: #000;'>\";","\t\tvar MainEvenDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #CEC7B6; color: #000;'>\";","\t\tvar MainOddDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #C0B9A8; color: #000;'>\";","\t\tvar AmmoDiv =  \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; font-family: \" + font + \"; font-size: 8pt; text-align: center; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; color: #000;\";","/*---------------------------*/","\t\tvar who = msg.who;","\t\tmsg.content = MakeRollNum(msg.content, msg.inlinerolls);","//check rolls---------------------","\t\tvar AttackRolls = msg.inlinerolls[0];","\t\tvar DamageRolls = msg.inlinerolls[1];","//define var----------------------","\t\tif (AttackRolls === undefined || DamageRolls === undefined) {","\t\t\tsendChat('', \"/direct <B><I>bad macro!\");","\t\t\treturn;","\t\t}","\t\tmsgFormula = msgTxt.split(\" --\");","\t\tvar Lucky = 20;","\t\tvar failRange = 1;","\t\tvar DamageRollRaw = \"\";","\t\tvar BottomText = \"\";","\t\tvar fumble = 0;","\t\tvar miss = 0;","\t\tvar crit_img = \"http:\\\\//media.giphy.com/media/3KqZp8MBaf1Ty/giphy.gif\";","\t\tvar fail_img = \"http:\\\\//fc06.deviantart.net/fs70/f/2013/076/5/2/_tutorial__creating_an_animated_light_pulse_in_ps_by_d_k0d3-d5ybir4.gif\";","\t\tif (msg.who == \"GM (GM)\") {","\t\t\twho = \"NPC\";","\t\t}","/*-----------START-----------*/","//Check for GUN","\t\tif (who !== \"NPC\") {","\t\t\tif (msgFormula[4] === undefined) msgFormula[4] = msgFormula[3];","\t\t\tif (msgFormula[4] !== undefined) {","\t\t\t\tvar gunleng = msgFormula[4].length - 1;","\t\t\t\tvar ammo = parseInt(msgFormula[4].substr(gunleng), 10);","\t\t\t\tif (!isNaN(ammo)) {","\t\t\t\t\tgunleng = msgFormula[4].length - 2;","\t\t\t\t\tvar gun = msgFormula[4].substr(0, gunleng);","\t\t\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (FindGun == undefined) {","\t\t\t\t\t\tsendChat('Error', \"/desc \" + msg.who + \" You do not own a  \" + gun);","\t\t\t\t\t\treturn;","\t\t\t\t\t}","\t\t\t\t\tvar GunName = FindGun.get(\"name\");","\t\t\t\t\tvar leng = GunName.length - 5;","\t\t\t\t\tleng = GunName.substr(0, leng);","\t\t\t\t\tvar ammo0 = findObjs({name: leng + \"_WEAPpay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (ammo0 == undefined) {","\t\t\t\t\t\tammo0 = FindGun;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","/*-----------ATTACK PARTS-----------*/","//--Attack Modifier","\t\tvar AttackBonus;","\t\tvar AttackRollText;","\t\tif (AttackRolls.results.rolls[1] === undefined) AttackBonus = \"\";","\t\telse AttackBonus = (AttackRolls.results.rolls[1].expr);","\t\tvar AttackRollRaw = AttackRolls.results.rolls[0].results[0]['v'];","//Attack total and type","\t\tvar AttackTotal = (AttackRolls.results.total);","\t\tvar Atype = \"<a style='color:RED'>\" + AttackRolls.expression + \"</a>\";","//--Set Miss","\t\tif (AttackRollRaw <= 3) {","\t\t\tAttackRollText = RollDiv + \"background-color:#A80000;'>\" + AttackRollRaw + \"</div>\";","\t\t\tBottomText = BottomText + \" \" + 'MISS';","\t\t\tvar miss = 1;","\t\t}","\t\telse AttackRollText = RollDiv + \"background-color:#696969;'>\" + AttackRollRaw + \"</div>\";","/*-----------DAMAGE PARTS-----------*/","//--Damage modifier","\t\tvar DamageBonus;","\t\tif (DamageRolls.results.rolls[1] === undefined) DamageBonus = \"\";","\t\telse DamageBonus = (DamageRolls.results.rolls[1].expr);","\t\t//--Set damage total","\t\tvar DamageTotal = DamageRolls.results.total;","//--Make damage text for all rolls","\t\tvar dam = DamageRolls.results.rolls[0];","\t\tvar i = 0;","\t\twhile (dam.results[i] !== undefined) {","\t\t\tvar dNum = dam.results[i]['v'];","\t\t\tvar num;","\t\t\tvar ddimg = \"http://image.blingee.com.s3.amazonaws.com/images19/content/output/000/000/000/061/788808721_1076628.gif?4\";","\t\t\tvar bg_max = \"background-position:center; background-image: url(\" + ddimg + \");\";","\t\t\tif (dNum == 1) num = RollDiv + \"background-color:#A80000;'>\" + dNum + \"</div></b></a>\";","\t\t\telse if (dNum == DamageRolls.results.rolls[0].sides) num = RollDiv + \"background-color:#00A120;\" + bg_max + \"'><b>\" + dNum + \"</b></div></b></a>\";","\t\t\telse num = RollDiv + \"background-color:#696969;'>\" + dNum + \"</div>\";","\t\t\tDamageRollRaw = DamageRollRaw + \"\" + (num);","\t\t\ti++;","\t\t}","\t\tvar Dtype = \"<a style='color:RED;'>\" + DamageRolls.expression + \"</a>\";","\t\tDamageRollRaw = DamageRollRaw + \"<b>\" + DamageBonus + \"</b>\";","\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a>\";","\t\tif (miss == 1)  DTOTALS = \"\";","//--Set Double Damage","\t\tif (AttackRollRaw >= 20) {","\t\t    var CritCheer = '<div style=\"width: 99%; height: 40px; border: 1px solid #666666; overflow: hidden; position: relative;\"><img  src=\"https://media.giphy.com/media/11sBLVxNs7v6WA/giphy.gif\" style=\"position: absolute; top:-35px; left:0px;\"/></div>';","\t\t\tDamageTotal = \"<a style='color:RED'><strong>\" + DamageTotal * 2 + \"!</strong></a>\";","\t\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a><br>\"+CritCheer;","\t\t\tAttackTotal = \"<a style='color:RED'><strong>\" + AttackTotal + \"!</strong></a>\";","\t\t\tBottomText = BottomText + \" \" + '<b>DOUBLE DAMAGE!</b><BR><b>(NATURAL 20!)</b><br>';","\t\t\tRollColor = \"background-position:center; background-image: url(\" + crit_img + \");\";","\t\t\tPlaySound('Critical', 9000);","\t\t}","//set motto","\t\tif (msgFormula[3] !== undefined) {","\t\t\tvar WarCryleng = msgFormula[3].length - 1;","\t\t\tvar sayingCheck = parseInt(msgFormula[3].substr(WarCryleng), 10);","\t\t\tif (isNaN(sayingCheck)) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t}","\t\t\telse if (msgFormula[3] !== undefined && msgFormula[4] == undefined) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t\tWarCryleng = msgFormula[3].length - 2;","\t\t\t\tvar WarCry = msgFormula[3].substr(0, WarCryleng).toUpperCase();","\t\t\t}","\t\t}","\t\telse {","\t\t\tWarCry = \"ATTACK!\";","\t\t}","//CHATBOX PARTS----------------","\t\tMain = MainSayDiv + SayParts + \"<b><i><marquee><img src='logo.jpg'></marquee> ●\" + WarCry + \"●</i></b></div></div>\";","\t\tMain = Main + MainOddDiv + Atype + \" <b>To Hit: </b>\" + AttackRollText + \"<b>\" + AttackBonus + \" = <a style='color:BLUE'>\" + AttackTotal + \"</b></a></div>\";","\t\tMain = Main + MainEvenDiv + DTOTALS + \"</div>\";","//--CRIT roll","\t\tvar IsLucky = randomInteger(Lucky);","\t\tif (IsLucky >= Lucky && AttackRollRaw > 4) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><b>Lucky Shot!: \" + aLoc[Math.floor(Math.random() * aLoc.length)] + \"</b></div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(http:\\\\//i.imgur.com/cFiEs5R.gif);\";","\t\t\tBottomText = BottomText + \" \" + SayParts + \"<b><i>●LUCKY SHOT●</i></b></div></div>\";","","//Fumble roll","\t\t}","\t\tif (AttackRollRaw <= failRange) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><strong style='font-size: 130%;'><b>Fumble!: \" + aFum[Math.floor(Math.random() * aFum.length)] + \"</div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(\" + fail_img + \");\";","\t\t\tBottomText = BottomText + \" \" + 'FUMBLE';","\t\t\tfumble = 1;","\t\t}","/*-----------","AMMO PARTS","-----------*/","\t\tif (FindGun !== undefined && who !== \"NPC\" && ammo0 !== undefined) {","\t\t\tvar ammoleng = msgFormula[4].length - 1;","\t\t\tvar ammo = parseInt(msgFormula[4].substr(ammoleng));","\t\t\tvar ammoC = parseInt(ammo);","\t\t\tif (ammoC === undefined || isNaN(ammoC)) ammoC = 1;","\t\t\tvar cAmmo = parseInt(ammo0.get(\"current\"));","\t\t\tvar mAmmo = parseInt(ammo0.get(\"max\"));","\t\t\tif (isNaN(cAmmo) || isNaN(mAmmo)) {","\t\t\t\tsendChat('Error', \"/desc Set ammo for  \" + gun);","\t\t\t\treturn;","\t\t\t}","\t\t\tvar per = (cAmmo / mAmmo) * 100;","\t\t\tif (mAmmo == 0) {}","\t\t\telse if (cAmmo <= 0 || cAmmo < ammoC) {","\t\t\t\tcAmmo = \"0\";","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tMain = AmmoDiv + \"background-color:RED;'><b><i>Not Enough \" + gun + \" ammo left in clip.</div>\";","\t\t\t}","\t\t\telse if (cAmmo <= 3 || cAmmo < ammoC) {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 3px;\"><div style=\"background-color: red; width: ' + per + '%; height: 5px; border-radius: 10px;\"></div></div>';","\t\t\t\tammoT = AmmoDiv + \"background-color:#B82A2A;'><b><i>\" + cAmmo + \" \" + gun + \" ammo left in clip.</b></i>\" + ammoT + \"</div>\";","\t\t\t\tMain = Main + ammoT;","\t\t\t}","\t\t\telse {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 1px;\"><div style=\"background-color: orange; width: ' + per + '%; height: 3px; border-radius: 10px; margins: 0px;\"></div></div>';","\t\t\t\tammoT = AmmoDiv + \"background-color:#A8A191;'><b><i>\" + cAmmo + \" of \" + mAmmo + \" \" + gun + \" ammo left</b></i>\" + ammoT + \"</div>\";","\t\t\t\tMain = Main + ammoT;","\t\t\t}","\t\t}","/*-----------SEND CHAT-----------*/","\t\tvar MsgBox = TopBar + RollColor +\";'></div>\"+ MidBar + PlayerBarColor +\";'><b>\" + who + \"  Attacks</b></div>\"+Main+\"</div>\"+BottBar + RollColor +\";'><b>\" + BottomText + \"</b></div>\";","\t\tvar SendT = MsgBox;","\t\tif (AttackRollRaw <= 3 && fumble != 1) {","\t\t\tSendT = \"<div style='opacity: 0.6;'><strong style='font-size: 90%;'>\" + SendT + \"</strong></div>\";","\t\t}","\t\tif (AttackRollRaw >= 20) {","\t\t\tSendT = \"<strong style='font-size: 130%;'>\" + SendT + \"</strong>\";","\t\t}","\t\tsendChat(who, '/direct ' + SendT);","\t\tPlaySound('dice', 9000);","\t\treturn;","\t}","//----------------------------","//RELOAD----------------","//----------------------------","\tif (command == \"!reload\") {","\t\tif (cWho !== undefined) {","\t\t\tvar msgFormula = msgTxt.split(\" --\");","\t\t\tvar gun = msgFormula[1];","\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (FindGun == undefined) {","\t\t\t\tsendChat('', '/desc ' + msg.who + ': <b>ammo not found</b>');","\t\t\t\treturn;","\t\t\t}","\t\t\tClips = 0;","\t\t\tvar attName = FindGun.get(\"name\");","\t\t\tvar Ammo0 = findObjs({name: attName + \"pay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Ammo1 = findObjs({name: attName + \"Rounds\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Clipsc = findObjs({name: attName + \"clip\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (Clipsc != undefined) {","\t\t\t\tvar Clips = parseInt(Clipsc.get(\"current\"), 10);","\t\t\t}","\t\t\tvar cWep = parseInt(Ammo0.get(\"current\"), 10);","\t\t\tvar mWep = parseInt(Ammo0.get(\"max\"), 10 );","\t\t\tvar cAmmo = parseInt(Ammo1.get(\"current\"), 10);","\t\t\tif (cAmmo <= 0) {","\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' NO AMMO TO RELOAD!</div>';","\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t}","\t\t\telse {","\t\t\t\tvar needed = mWep - cWep;","\t\t\t\tif (needed >= cAmmo) {","\t\t\t\t\tneeded = cAmmo;","\t\t\t\t}","\t\t\t\tif (Clips == 10) {","\t\t\t\t\tneeded = 1;","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = cAmmo;","\t\t\t\t\tAmmo0.set('current', mWep);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' is reloading: ' + needed + \" clips on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + 'Clips)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = Math.round((cAmmo / mWep) * 10) / 10;","\t\t\t\t\tAmmo0.set('current', cWep + needed);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>\" + msg.who + ' is reloading ' + needed + \" Ammo on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + ' reloads)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t}","\t\t}","\t}","});","//---AUTO LOCATION ROLLS","var aLoc = [\"Head\", \"Left Arm\", \"Right Arm\", \"Left Leg\", \"Right Leg\", \"..Dangly Bits! (Main Body)\", \"FREE ATTACK!\"];","//---FUMBLE ROLLS","var aFum = [","\t\"Hit a totally different friendly target in general direction of aimed target (if possible)\",","\t\"Ungracefully fumbled the attack!, lose next attack\",","\t\"Got something in eye, lose this attack\",","\t\"Missed so badly, it makes the enemy see you and an easy target!\",","\t\"Total gun jam/broke weapon(or limb!).. useless this fight. Must get fixed.\",","\t\"Tripped!, next attack to get up\",","\t\"Miss and weapon jam! (GUN) jams, (MELEE) Missed and stuck in Wall/Floor/Tree/Off Balance/etc loose next attack\",","\t\"Missed, and draws sole aggression of the target\",","\t\"Somehow hit a Flying Squirrel!\",","\t\"Failed so badly nearest ally falls back to help.\"","];",""]}],[{"start":{"row":0,"column":0},"end":{"row":282,"column":0},"action":"remove","lines":["//!attack --[[1d20]] --[[3d6]] --saying! --ammotype","/*global OuterDiv PlaySound TopBar iPart MidBar BottBar MakeRollNum log on findObjs randomInteger RollRight _ sendChat bShadow font getObj"," */","on('chat:message', function(msg) {","\tif (msg.type != \"api\") return;","\t//log(msg.content);","\tvar msgTxt = msg.content;","\tvar command = msgTxt.split(\" \", 1);","\tvar cWho = findObjs({_type: 'character',name: msg.who})[0];","\tif (cWho == undefined && msg.who.indexOf(\"(GM)\") == -1) {","\t\tcWho = RollRight(msg.playerid);","\t\tmsg.who = cWho.get(\"name\");","\t}","","/*-----------CHECK API-----------*/","\tif (command == \"!attack\") {","/*-----------BOXES-----------*/","\t\tvar Main;","\t\tvar PlayerBGColor = getObj(\"player\", msg.playerid).get(\"color\");","\t\tvar PlayerBarColor = \"background-image:-webkit-linear-gradient(left, #000000 0%,\"+PlayerBGColor+\" 15%,\"+PlayerBGColor+\" 85%,#000000 100%);\";","\t\tvar RollColor = \"background-image:-webkit-linear-gradient(left, #000000,#848484,#000000);\";","\t\tvar topimg = \"https://s3.amazonaws.com/files.staging.d20.io/images/181118/cN5ui3MXx87UBgVUgzwYTQ/med.jpg?141868063\";","\t\tvar TextShadow = \"-1px -1px #444, 1px -1px #444, -1px 1px #444, 1px 1px #444\";","\t\tvar SayParts = \"<div style='text-shadow: 1px 1px #000, -1px -1px #000, -1px 1px #000, 1px -1px #000; margin: 0em 0em 0em 0em;; font-size:8pt; display:inline-block; text-align: center; vertical-align:middle; padding: 0px 6px 0px 6px; border: 1px solid #000; border-radius: 3px; color: #FFF; background-image: url(\" + topimg + \");'>\";","\t\tvar RollDiv = \"<div style='margin: 0em 0.1em 0.1em 0em; font-size: 10pt; text-shadow: \" + TextShadow + \"; width: 15px; height: 15px; line-height: 15px; display:inline-block; text-align:center; padding: 0px 1px 0px 0px; border: 1px solid #000; border-radius: 3px; color: #FFF;\";","","\t\tvar MainSayDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family:\" + font + \"; font-size: x-small; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color:#CEC7B6; color: #000;'>\";","\t\tvar MainEvenDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #CEC7B6; color: #000;'>\";","\t\tvar MainOddDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #C0B9A8; color: #000;'>\";","\t\tvar AmmoDiv =  \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; font-family: \" + font + \"; font-size: 8pt; text-align: center; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; color: #000;\";","/*---------------------------*/","\t\tvar who = msg.who;","\t\tmsg.content = MakeRollNum(msg.content, msg.inlinerolls);","//check rolls---------------------","\t\tvar AttackRolls = msg.inlinerolls[0];","\t\tvar DamageRolls = msg.inlinerolls[1];","//define var----------------------","\t\tif (AttackRolls === undefined || DamageRolls === undefined) {","\t\t\tsendChat('', \"/direct <B><I>bad macro!\");","\t\t\treturn;","\t\t}","\t\tmsgFormula = msgTxt.split(\" --\");","\t\tvar Lucky = 20;","\t\tvar failRange = 1;","\t\tvar DamageRollRaw = \"\";","\t\tvar BottomText = \"\";","\t\tvar fumble = 0;","\t\tvar miss = 0;","\t\tvar crit_img = \"http:\\\\//media.giphy.com/media/3KqZp8MBaf1Ty/giphy.gif\";","\t\tvar fail_img = \"http:\\\\//fc06.deviantart.net/fs70/f/2013/076/5/2/_tutorial__creating_an_animated_light_pulse_in_ps_by_d_k0d3-d5ybir4.gif\";","\t\tif (msg.who == \"GM (GM)\") {","\t\t\twho = \"NPC\";","\t\t}","/*-----------START-----------*/","//Check for GUN","\t\tif (who !== \"NPC\") {","\t\t\tif (msgFormula[4] === undefined) msgFormula[4] = msgFormula[3];","\t\t\tif (msgFormula[4] !== undefined) {","\t\t\t\tvar gunleng = msgFormula[4].length - 1;","\t\t\t\tvar ammo = parseInt(msgFormula[4].substr(gunleng), 10);","\t\t\t\tif (!isNaN(ammo)) {","\t\t\t\t\tgunleng = msgFormula[4].length - 2;","\t\t\t\t\tvar gun = msgFormula[4].substr(0, gunleng);","\t\t\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (FindGun == undefined) {","\t\t\t\t\t\tsendChat('Error', \"/desc \" + msg.who + \" You do not own a  \" + gun);","\t\t\t\t\t\treturn;","\t\t\t\t\t}","\t\t\t\t\tvar GunName = FindGun.get(\"name\");","\t\t\t\t\tvar leng = GunName.length - 5;","\t\t\t\t\tleng = GunName.substr(0, leng);","\t\t\t\t\tvar ammo0 = findObjs({name: leng + \"_WEAPpay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (ammo0 == undefined) {","\t\t\t\t\t\tammo0 = FindGun;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","/*-----------ATTACK PARTS-----------*/","//--Attack Modifier","\t\tvar AttackBonus;","\t\tvar AttackRollText;","\t\tif (AttackRolls.results.rolls[1] === undefined) AttackBonus = \"\";","\t\telse AttackBonus = (AttackRolls.results.rolls[1].expr);","\t\tvar AttackRollRaw = AttackRolls.results.rolls[0].results[0]['v'];","//Attack total and type","\t\tvar AttackTotal = (AttackRolls.results.total);","\t\tvar Atype = \"<a style='color:RED'>\" + AttackRolls.expression + \"</a>\";","//--Set Miss","\t\tif (AttackRollRaw <= 3) {","\t\t\tAttackRollText = RollDiv + \"background-color:#A80000;'>\" + AttackRollRaw + \"</div>\";","\t\t\tBottomText = BottomText + \" \" + 'MISS';","\t\t\tvar miss = 1;","\t\t}","\t\telse AttackRollText = RollDiv + \"background-color:#696969;'>\" + AttackRollRaw + \"</div>\";","/*-----------DAMAGE PARTS-----------*/","//--Damage modifier","\t\tvar DamageBonus;","\t\tif (DamageRolls.results.rolls[1] === undefined) DamageBonus = \"\";","\t\telse DamageBonus = (DamageRolls.results.rolls[1].expr);","\t\t//--Set damage total","\t\tvar DamageTotal = DamageRolls.results.total;","//--Make damage text for all rolls","\t\tvar dam = DamageRolls.results.rolls[0];","\t\tvar i = 0;","\t\twhile (dam.results[i] !== undefined) {","\t\t\tvar dNum = dam.results[i]['v'];","\t\t\tvar num;","\t\t\tvar ddimg = \"http://image.blingee.com.s3.amazonaws.com/images19/content/output/000/000/000/061/788808721_1076628.gif?4\";","\t\t\tvar bg_max = \"background-position:center; background-image: url(\" + ddimg + \");\";","\t\t\tif (dNum == 1) num = RollDiv + \"background-color:#A80000;'>\" + dNum + \"</div></b></a>\";","\t\t\telse if (dNum == DamageRolls.results.rolls[0].sides) num = RollDiv + \"background-color:#00A120;\" + bg_max + \"'><b>\" + dNum + \"</b></div></b></a>\";","\t\t\telse num = RollDiv + \"background-color:#696969;'>\" + dNum + \"</div>\";","\t\t\tDamageRollRaw = DamageRollRaw + \"\" + (num);","\t\t\ti++;","\t\t}","\t\tvar Dtype = \"<a style='color:RED;'>\" + DamageRolls.expression + \"</a>\";","\t\tDamageRollRaw = DamageRollRaw + \"<b>\" + DamageBonus + \"</b>\";","\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a>\";","\t\tif (miss == 1)  DTOTALS = \"\";","//--Set Double Damage","\t\tif (AttackRollRaw >= 20) {","\t\t    var CritCheer = '<div style=\"width: 99%; height: 40px; border: 1px solid #666666; overflow: hidden; position: relative;\"><img  src=\"https://media.giphy.com/media/11sBLVxNs7v6WA/giphy.gif\" style=\"position: absolute; top:-35px; left:0px;\"/></div>';","\t\t\tDamageTotal = \"<a style='color:RED'><strong>\" + DamageTotal * 2 + \"!</strong></a>\";","\t\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a><br>\"+CritCheer;","\t\t\tAttackTotal = \"<a style='color:RED'><strong>\" + AttackTotal + \"!</strong></a>\";","\t\t\tBottomText = BottomText + \" \" + '<b>DOUBLE DAMAGE!</b><BR><b>(NATURAL 20!)</b><br>';","\t\t\tRollColor = \"background-position:center; background-image: url(\" + crit_img + \");\";","\t\t\tPlaySound('Critical', 9000);","\t\t}","//set motto","\t\tif (msgFormula[3] !== undefined) {","\t\t\tvar WarCryleng = msgFormula[3].length - 1;","\t\t\tvar sayingCheck = parseInt(msgFormula[3].substr(WarCryleng), 10);","\t\t\tif (isNaN(sayingCheck)) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t}","\t\t\telse if (msgFormula[3] !== undefined && msgFormula[4] == undefined) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t\tWarCryleng = msgFormula[3].length - 2;","\t\t\t\tvar WarCry = msgFormula[3].substr(0, WarCryleng).toUpperCase();","\t\t\t}","\t\t}","\t\telse {","\t\t\tWarCry = \"ATTACK!\";","\t\t}","//CHATBOX PARTS----------------","\t\tMain = MainSayDiv + SayParts + \"<b><i><marquee><img src='logo.jpg'></marquee> ●\" + WarCry + \"●</i></b></div></div>\";","\t\tMain = Main + MainOddDiv + Atype + \" <b>To Hit: </b>\" + AttackRollText + \"<b>\" + AttackBonus + \" = <a style='color:BLUE'>\" + AttackTotal + \"</b></a></div>\";","\t\tMain = Main + MainEvenDiv + DTOTALS + \"</div>\";","//--CRIT roll","\t\tvar IsLucky = randomInteger(Lucky);","\t\tif (IsLucky >= Lucky && AttackRollRaw > 4) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><b>Lucky Shot!: \" + aLoc[Math.floor(Math.random() * aLoc.length)] + \"</b></div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(http:\\\\//i.imgur.com/cFiEs5R.gif);\";","\t\t\tBottomText = BottomText + \" \" + SayParts + \"<b><i>●LUCKY SHOT●</i></b></div></div>\";","","//Fumble roll","\t\t}","\t\tif (AttackRollRaw <= failRange) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><strong style='font-size: 130%;'><b>Fumble!: \" + aFum[Math.floor(Math.random() * aFum.length)] + \"</div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(\" + fail_img + \");\";","\t\t\tBottomText = BottomText + \" \" + 'FUMBLE';","\t\t\tfumble = 1;","\t\t}","/*-----------","AMMO PARTS","-----------*/","\t\tif (FindGun !== undefined && who !== \"NPC\" && ammo0 !== undefined) {","\t\t\tvar ammoleng = msgFormula[4].length - 1;","\t\t\tvar ammo = parseInt(msgFormula[4].substr(ammoleng));","\t\t\tvar ammoC = parseInt(ammo);","\t\t\tif (ammoC === undefined || isNaN(ammoC)) ammoC = 1;","\t\t\tvar cAmmo = parseInt(ammo0.get(\"current\"));","\t\t\tvar mAmmo = parseInt(ammo0.get(\"max\"));","\t\t\tif (isNaN(cAmmo) || isNaN(mAmmo)) {","\t\t\t\tsendChat('Error', \"/desc Set ammo for  \" + gun);","\t\t\t\treturn;","\t\t\t}","\t\t\tvar per = (cAmmo / mAmmo) * 100;","\t\t\tif (mAmmo == 0) {}","\t\t\telse if (cAmmo <= 0 || cAmmo < ammoC) {","\t\t\t\tcAmmo = \"0\";","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tMain = AmmoDiv + \"background-color:RED;'><b><i>Not Enough \" + gun + \" ammo left in clip.</div>\";","\t\t\t}","\t\t\telse if (cAmmo <= 3 || cAmmo < ammoC) {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 3px;\"><div style=\"background-color: red; width: ' + per + '%; height: 5px; border-radius: 10px;\"></div></div>';","\t\t\t\tammoT = AmmoDiv + \"background-color:#B82A2A;'><b><i>\" + cAmmo + \" \" + gun + \" ammo left in clip.</b></i>\" + ammoT + \"</div>\";","\t\t\t\tMain = Main + ammoT;","\t\t\t}","\t\t\telse {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 1px;\"><div style=\"background-color: orange; width: ' + per + '%; height: 3px; border-radius: 10px; margins: 0px;\"></div></div>';","\t\t\t\tammoT = AmmoDiv + \"background-color:#A8A191;'><b><i>\" + cAmmo + \" of \" + mAmmo + \" \" + gun + \" ammo left</b></i>\" + ammoT + \"</div>\";","\t\t\t\tMain = Main + ammoT;","\t\t\t}","\t\t}","/*-----------SEND CHAT-----------*/","\t\tvar MsgBox = TopBar + RollColor +\";'></div>\"+ MidBar + PlayerBarColor +\";'><b>\" + who + \"  Attacks</b></div>\"+Main+\"</div>\"+BottBar + RollColor +\";'><b>\" + BottomText + \"</b></div>\";","\t\tvar SendT = MsgBox;","\t\tif (AttackRollRaw <= 3 && fumble != 1) {","\t\t\tSendT = \"<div style='opacity: 0.6;'><strong style='font-size: 90%;'>\" + SendT + \"</strong></div>\";","\t\t}","\t\tif (AttackRollRaw >= 20) {","\t\t\tSendT = \"<strong style='font-size: 130%;'>\" + SendT + \"</strong>\";","\t\t}","\t\tsendChat(who, '/direct ' + SendT);","\t\tPlaySound('dice', 9000);","\t\treturn;","\t}","//----------------------------","//RELOAD----------------","//----------------------------","\tif (command == \"!reload\") {","\t\tif (cWho !== undefined) {","\t\t\tvar msgFormula = msgTxt.split(\" --\");","\t\t\tvar gun = msgFormula[1];","\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (FindGun == undefined) {","\t\t\t\tsendChat('', '/desc ' + msg.who + ': <b>ammo not found</b>');","\t\t\t\treturn;","\t\t\t}","\t\t\tClips = 0;","\t\t\tvar attName = FindGun.get(\"name\");","\t\t\tvar Ammo0 = findObjs({name: attName + \"pay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Ammo1 = findObjs({name: attName + \"Rounds\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Clipsc = findObjs({name: attName + \"clip\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (Clipsc != undefined) {","\t\t\t\tvar Clips = parseInt(Clipsc.get(\"current\"), 10);","\t\t\t}","\t\t\tvar cWep = parseInt(Ammo0.get(\"current\"), 10);","\t\t\tvar mWep = parseInt(Ammo0.get(\"max\"), 10 );","\t\t\tvar cAmmo = parseInt(Ammo1.get(\"current\"), 10);","\t\t\tif (cAmmo <= 0) {","\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' NO AMMO TO RELOAD!</div>';","\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t}","\t\t\telse {","\t\t\t\tvar needed = mWep - cWep;","\t\t\t\tif (needed >= cAmmo) {","\t\t\t\t\tneeded = cAmmo;","\t\t\t\t}","\t\t\t\tif (Clips == 10) {","\t\t\t\t\tneeded = 1;","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = cAmmo;","\t\t\t\t\tAmmo0.set('current', mWep);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' is reloading: ' + needed + \" clips on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + 'Clips)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = Math.round((cAmmo / mWep) * 10) / 10;","\t\t\t\t\tAmmo0.set('current', cWep + needed);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>\" + msg.who + ' is reloading ' + needed + \" Ammo on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + ' reloads)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t}","\t\t}","\t}","});","//---AUTO LOCATION ROLLS","var aLoc = [\"Head\", \"Left Arm\", \"Right Arm\", \"Left Leg\", \"Right Leg\", \"..Dangly Bits! (Main Body)\", \"FREE ATTACK!\"];","//---FUMBLE ROLLS","var aFum = [","\t\"Hit a totally different friendly target in general direction of aimed target (if possible)\",","\t\"Ungracefully fumbled the attack!, lose next attack\",","\t\"Got something in eye, lose this attack\",","\t\"Missed so badly, it makes the enemy see you and an easy target!\",","\t\"Total gun jam/broke weapon(or limb!).. useless this fight. Must get fixed.\",","\t\"Tripped!, next attack to get up\",","\t\"Miss and weapon jam! (GUN) jams, (MELEE) Missed and stuck in Wall/Floor/Tree/Off Balance/etc loose next attack\",","\t\"Missed, and draws sole aggression of the target\",","\t\"Somehow hit a Flying Squirrel!\",","\t\"Failed so badly nearest ally falls back to help.\"","];",""],"id":720},{"start":{"row":0,"column":0},"end":{"row":284,"column":0},"action":"insert","lines":["//!attack --[[1d20]] --[[3d6]] --saying! --ammotype","/*global OuterDiv PlaySound TopBar iPart MidBar BottBar MakeRollNum log on findObjs randomInteger RollRight _ sendChat bShadow font getObj"," */","on('chat:message', function(msg) {","\tif (msg.type != \"api\") return;","\t//log(msg.content);","\tvar msgTxt = msg.content;","\tvar command = msgTxt.split(\" \", 1);","\tvar cWho = findObjs({_type: 'character',name: msg.who})[0];","\tif (cWho == undefined && msg.who.indexOf(\"(GM)\") == -1) {","\t\tcWho = RollRight(msg.playerid);","\t\tmsg.who = cWho.get(\"name\");","\t}","","/*-----------CHECK API-----------*/","\tif (command == \"!attack\") {","/*-----------BOXES-----------*/","\t\tvar Main;","\t\tvar PlayerBGColor = getObj(\"player\", msg.playerid).get(\"color\");","\t\tvar PlayerBarColor = \"background-image:-webkit-linear-gradient(left, #000000 0%,\"+PlayerBGColor+\" 15%,\"+PlayerBGColor+\" 85%,#000000 100%);\";","\t\tvar RollColor = \"background-image:-webkit-linear-gradient(left, #000000,#820101,#000000);\";","\t\tvar topimg = \"https://s3.amazonaws.com/files.staging.d20.io/images/181118/cN5ui3MXx87UBgVUgzwYTQ/med.jpg?141868063\";","\t\tvar TextShadow = \"-1px -1px #444, 1px -1px #444, -1px 1px #444, 1px 1px #444\";","\t\tvar SayParts = \"<div style='text-shadow: 1px 1px #000, -1px -1px #000, -1px 1px #000, 1px -1px #000; margin: 0em 0em 0em 0em;; font-size:8pt; display:inline-block; text-align: center; vertical-align:middle; padding: 0px 6px 0px 6px; border: 1px solid #000; border-radius: 3px; color: #FFF; background-image: url(\" + topimg + \");'>\";","\t\tvar RollDiv = \"<div style='margin: 0em 0.1em 0.1em 0em; font-size: 10pt; text-shadow: \" + TextShadow + \"; width: 15px; height: 15px; line-height: 15px; display:inline-block; text-align:center; padding: 0px 1px 0px 0px; border: 1px solid #000; border-radius: 3px; color: #FFF;\";","","\t\tvar MainSayDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family:\" + font + \"; font-size: x-small; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color:#CEC7B6; color: #000;'>\";","\t\tvar MainEvenDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #CEC7B6; color: #000;'>\";","\t\tvar MainOddDiv = \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; text-shadow: 1px 1px #878787; font-family: \" + font + \"; text-align: center; vertical-align: middle; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; background-color: #C0B9A8; color: #000;'>\";","\t\tvar AmmoDiv =  \"<div style='width: 95%; margin: 0px auto; box-shadow: \" + bShadow + \"; font-family: \" + font + \"; font-size: 8pt; text-align: center; padding: 1px; border-left: 1px solid #000; border-right: 1px solid #000; border-radius: 0px; color: #000;\";","/*---------------------------*/","\t\tvar who = msg.who;","\t\tmsg.content = MakeRollNum(msg.content, msg.inlinerolls);","//check rolls---------------------","\t\tvar AttackRolls = msg.inlinerolls[0];","\t\tvar DamageRolls = msg.inlinerolls[1];","//define var----------------------","\t\tif (AttackRolls === undefined || DamageRolls === undefined) {","\t\t\tsendChat('', \"/direct <B><I>bad macro!\");","\t\t\treturn;","\t\t}","\t\tmsgFormula = msgTxt.split(\" --\");","\t\tvar Lucky = 20;","\t\tvar failRange = 1;","\t\tvar DamageRollRaw = \"\";","\t\tvar BottomText = \"\";","\t\tvar fumble = 0;","\t\tvar miss = 0;","\t\tvar crit_img = \"http:\\\\//media.giphy.com/media/3KqZp8MBaf1Ty/giphy.gif\";","\t\tvar fail_img = \"http:\\\\//fc06.deviantart.net/fs70/f/2013/076/5/2/_tutorial__creating_an_animated_light_pulse_in_ps_by_d_k0d3-d5ybir4.gif\";","\t\tif (msg.who == \"GM (GM)\") {","\t\t\twho = \"NPC\";","\t\t}","/*-----------START-----------*/","//Check for GUN","\t\tif (who !== \"NPC\") {","\t\t\tif (msgFormula[4] === undefined) msgFormula[4] = msgFormula[3];","\t\t\tif (msgFormula[4] !== undefined) {","\t\t\t\tvar gunleng = msgFormula[4].length - 1;","\t\t\t\tvar ammo = parseInt(msgFormula[4].substr(gunleng), 10);","\t\t\t\tif (!isNaN(ammo)) {","\t\t\t\t\tgunleng = msgFormula[4].length - 2;","\t\t\t\t\tvar gun = msgFormula[4].substr(0, gunleng);","\t\t\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (FindGun == undefined) {","\t\t\t\t\t\tsendChat('Error', \"/desc \" + msg.who + \" You do not own a  \" + gun);","\t\t\t\t\t\treturn;","\t\t\t\t\t}","\t\t\t\t\tvar GunName = FindGun.get(\"name\");","\t\t\t\t\tvar leng = GunName.length - 5;","\t\t\t\t\tleng = GunName.substr(0, leng);","\t\t\t\t\tvar ammo0 = findObjs({name: leng + \"_WEAPpay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\t\t\tif (ammo0 == undefined) {","\t\t\t\t\t\tammo0 = FindGun;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","/*-----------ATTACK PARTS-----------*/","//--Attack Modifier","\t\tvar AttackBonus;","\t\tvar AttackRollText;","\t\tif (AttackRolls.results.rolls[1] === undefined) AttackBonus = \"\";","\t\telse AttackBonus = (AttackRolls.results.rolls[1].expr);","\t\tvar AttackRollRaw = AttackRolls.results.rolls[0].results[0]['v'];","//Attack total and type","\t\tvar AttackTotal = (AttackRolls.results.total);","\t\tvar Atype = \"<a style='color:RED'>\" + AttackRolls.expression + \"</a>\";","//--Set Miss","\t\tif (AttackRollRaw <= 3) {","\t\t\tAttackRollText = RollDiv + \"background-color:#A80000;'>\" + AttackRollRaw + \"</div>\";","\t\t\tBottomText = BottomText + \" \" + 'MISS';","\t\t\tvar miss = 1;","\t\t}","\t\telse AttackRollText = RollDiv + \"background-color:#696969;'>\" + AttackRollRaw + \"</div>\";","/*-----------DAMAGE PARTS-----------*/","//--Damage modifier","\t\tvar DamageBonus;","\t\tif (DamageRolls.results.rolls[1] === undefined) DamageBonus = \"\";","\t\telse DamageBonus = (DamageRolls.results.rolls[1].expr);","\t\t//--Set damage total","\t\tvar DamageTotal = DamageRolls.results.total;","//--Make damage text for all rolls","\t\tvar dam = DamageRolls.results.rolls[0];","\t\tvar i = 0;","\t\twhile (dam.results[i] !== undefined) {","\t\t\tvar dNum = dam.results[i]['v'];","\t\t\tvar num;","\t\t\tvar ddimg = \"http://image.blingee.com.s3.amazonaws.com/images19/content/output/000/000/000/061/788808721_1076628.gif?4\";","\t\t\tvar bg_max = \"background-position:center; background-image: url(\" + ddimg + \");\";","\t\t\tif (dNum == 1) num = RollDiv + \"background-color:#A80000;'>\" + dNum + \"</div></b></a>\";","\t\t\telse if (dNum == DamageRolls.results.rolls[0].sides) num = RollDiv + \"background-color:#00A120;\" + bg_max + \"'><b>\" + dNum + \"</b></div></b></a>\";","\t\t\telse num = RollDiv + \"background-color:#696969;'>\" + dNum + \"</div>\";","\t\t\tDamageRollRaw = DamageRollRaw + \"\" + (num);","\t\t\ti++;","\t\t}","\t\tvar Dtype = \"<a style='color:RED;'>\" + DamageRolls.expression + \"</a>\";","\t\tDamageRollRaw = DamageRollRaw + \"<b>\" + DamageBonus + \"</b>\";","\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a>\";","\t\tif (miss == 1)  DTOTALS = \"\";","//--Set Double Damage","\t\tif (AttackRollRaw >= 20) {","\t\t    var CritCheer = '<div style=\"border: 1px solid #666666; border-radius: 20px; width: 99%; height: 40px; overflow: hidden; position: relative;\"><img src=\"https://media.giphy.com/media/11sBLVxNs7v6WA/giphy.gif\" style=\"position: absolute; top:-35px; left:0px;\"/></div>';","\t\t\tDamageTotal = \"<a style='color:RED'><strong>\" + DamageTotal * 2 + \"!</strong></a>\";","\t\t\tvar DTOTALS = Dtype + \"<b> Damage:<br></b>\" + DamageRollRaw + \"<b> = <a style='color:BLUE'>\" + DamageTotal + \"</b></a><br>\"+CritCheer;","\t\t\tAttackTotal = \"<a style='color:RED'><strong>\" + AttackTotal + \"!</strong></a>\";","\t\t\tBottomText = BottomText + \" \" + '<b>DOUBLE DAMAGE!</b><BR><b>(NATURAL 20!)</b><br>';","\t\t\tRollColor = \"background-position:center; background-image: url(\" + crit_img + \");\";","\t\t\tPlaySound('Critical', 9000);","\t\t}","//set motto","\t\tif (msgFormula[3] !== undefined) {","\t\t\tvar WarCryleng = msgFormula[3].length - 1;","\t\t\tvar sayingCheck = parseInt(msgFormula[3].substr(WarCryleng), 10);","\t\t\tif (isNaN(sayingCheck)) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t}","\t\t\telse if (msgFormula[3] !== undefined && msgFormula[4] == undefined) {","\t\t\t\tWarCry = msgFormula[3].toUpperCase();","\t\t\t\tWarCryleng = msgFormula[3].length - 2;","\t\t\t\tvar WarCry = msgFormula[3].substr(0, WarCryleng).toUpperCase();","\t\t\t}","\t\t}","\t\telse {","\t\t\tWarCry = \"ATTACK!\";","\t\t}","//CHATBOX PARTS----------------","\t\tMain = MainSayDiv + SayParts + \"<b><i><marquee><img src='logo.jpg'></marquee> ●\" + WarCry + \"●</i></b></div></div>\";","\t\tMain = Main + MainOddDiv + Atype + \" <b>To Hit: </b>\" + AttackRollText + \"<b>\" + AttackBonus + \" = <a style='color:BLUE'>\" + AttackTotal + \"</b></a></div>\";","\t\tMain = Main + MainEvenDiv + DTOTALS + \"</div>\";","//--Lucky roll","\t\tvar IsLucky = randomInteger(Lucky);","\t\tif (IsLucky >= Lucky && AttackRollRaw > 4) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><b>Lucky Shot!: \" + aLoc[Math.floor(Math.random() * aLoc.length)] + \"</b></div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(http:\\\\//i.imgur.com/cFiEs5R.gif);\";","\t\t\tBottomText = BottomText + \" \" + SayParts + \"<b><i>●LUCKY SHOT●</i></b></div></div>\";","","//Fumble roll","\t\t}","\t\tif (AttackRollRaw <= failRange) {","\t\t\tMain = Main + MainOddDiv + \"<a style = 'color:PURPLE'><strong style='font-size: 130%;'><b>Fumble!: \" + aFum[Math.floor(Math.random() * aFum.length)] + \"</div>\";","\t\t\tRollColor = \"background-position:50% 54%; background-image: url(\" + fail_img + \");\";","\t\t\tBottomText = BottomText + \" \" + 'FUMBLE';","\t\t\tfumble = 1;","\t\t}","/*-----------","AMMO PARTS","-----------*/","\t\tif (FindGun !== undefined && who !== \"NPC\" && ammo0 !== undefined) {","\t\t\tvar ammoleng = msgFormula[4].length - 1;","\t\t\tvar ammo = parseInt(msgFormula[4].substr(ammoleng));","\t\t\tvar ammoC = parseInt(ammo);","\t\t\tif (ammoC === undefined || isNaN(ammoC)) ammoC = 1;","\t\t\tvar cAmmo = parseInt(ammo0.get(\"current\"));","\t\t\tvar mAmmo = parseInt(ammo0.get(\"max\"));","\t\t\tif (isNaN(cAmmo) || isNaN(mAmmo)) {","\t\t\t\tsendChat('Error', \"/desc Set ammo for  \" + gun);","\t\t\t\treturn;","\t\t\t}","\t\t\tvar per = (cAmmo / mAmmo) * 100;","\t\t\tif (mAmmo == 0) {}","\t\t\telse if (cAmmo <= 0 || cAmmo < ammoC) {","\t\t\t\tcAmmo = \"0\";","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tMain = AmmoDiv + \"background-color:RED;'><b><i>Not Enough \" + gun + \" ammo left in clip.</div>\";","\t\t\t}","\t\t\telse if (cAmmo <= 3 || cAmmo < ammoC) {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 3px;\"><div style=\"background-color: red; width: ' + per + '%; height: 5px; border-radius: 10px;\"></div></div>';","\t\t\t\tammoT = AmmoDiv + \"background-color:#B82A2A;'><b><i>\" + cAmmo + \" \" + gun + \" ammo left in clip.</b></i>\" + ammoT + \"</div>\";","\t\t\t\tMain = Main + ammoT;","\t\t\t}","\t\t\telse {","\t\t\t\tcAmmo = cAmmo - ammoC;","\t\t\t\tammo0.set('current', cAmmo);","\t\t\t\tvar ammoT = '<div style=\"border: 2px solid #333; background-color: #0D0D0D; border-radius: 13px; padding: 1px;\"><div style=\"background-color: orange; width: ' + per + '%; height: 3px; border-radius: 10px; margins: 0px;\"></div></div>';","\t\t\t\tammoT = AmmoDiv + \"background-color:#A8A191;'><b><i>\" + cAmmo + \" of \" + mAmmo + \" \" + gun + \" ammo left</b></i>\" + ammoT + \"</div>\";","\t\t\t\tMain = Main + ammoT;","\t\t\t}","\t\t}","/*-----------SEND CHAT-----------*/","        var pad = \"\";","        if(BottomText == \"\") var pad = \"padding: 5px 1px;\";","\t\tvar MsgBox = TopBar + RollColor +\";'></div>\"+ MidBar + PlayerBarColor +\";'><b>\" + who + \"  Attacks</b></div>\"+Main+\"</div>\"+BottBar + pad + RollColor +\";'><b>\" + BottomText + \"</b></div>\";","\t\tvar SendT = MsgBox;","\t\tif (AttackRollRaw <= 3 && fumble != 1) {","\t\t\tSendT = \"<div style='opacity: 0.6;'><strong style='font-size: 90%;'>\" + SendT + \"</strong></div>\";","\t\t}","\t\tif (AttackRollRaw >= 20) {","\t\t\tSendT = \"<strong style='font-size: 130%;'>\" + SendT + \"</strong>\";","\t\t}","\t\tsendChat(who, '/direct ' + SendT);","\t\tPlaySound('dice', 9000);","\t\treturn;","\t}","//----------------------------","//RELOAD----------------","//----------------------------","\tif (command == \"!reload\") {","\t\tif (cWho !== undefined) {","\t\t\tvar msgFormula = msgTxt.split(\" --\");","\t\t\tvar gun = msgFormula[1];","\t\t\tvar FindGun = findObjs({current: gun,type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (FindGun == undefined) {","\t\t\t\tsendChat('', '/desc ' + msg.who + ': <b>ammo not found</b>');","\t\t\t\treturn;","\t\t\t}","\t\t\tClips = 0;","\t\t\tvar attName = FindGun.get(\"name\");","\t\t\tvar Ammo0 = findObjs({name: attName + \"pay\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Ammo1 = findObjs({name: attName + \"Rounds\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tvar Clipsc = findObjs({name: attName + \"clip\",type: \"attribute\",_characterid: cWho.id}, {caseInsensitive: true})[0];","\t\t\tif (Clipsc != undefined) {","\t\t\t\tvar Clips = parseInt(Clipsc.get(\"current\"), 10);","\t\t\t}","\t\t\tvar cWep = parseInt(Ammo0.get(\"current\"), 10);","\t\t\tvar mWep = parseInt(Ammo0.get(\"max\"), 10 );","\t\t\tvar cAmmo = parseInt(Ammo1.get(\"current\"), 10);","\t\t\tif (cAmmo <= 0) {","\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' NO AMMO TO RELOAD!</div>';","\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t}","\t\t\telse {","\t\t\t\tvar needed = mWep - cWep;","\t\t\t\tif (needed >= cAmmo) {","\t\t\t\t\tneeded = cAmmo;","\t\t\t\t}","\t\t\t\tif (Clips == 10) {","\t\t\t\t\tneeded = 1;","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = cAmmo;","\t\t\t\t\tAmmo0.set('current', mWep);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>● \" + msg.who + ' is reloading: ' + needed + \" clips on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + 'Clips)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tcAmmo = cAmmo - needed;","\t\t\t\t\tvar reloads = Math.round((cAmmo / mWep) * 10) / 10;","\t\t\t\t\tAmmo0.set('current', cWep + needed);","\t\t\t\t\tAmmo1.set('current', cAmmo);","\t\t\t\t\tvar help = OuterDiv + iPart + \"background-color:#A80000;'><b>\" + msg.who + ' is reloading ' + needed + \" Ammo on:<br>● \" + msgFormula[1] + ' ●<br>' + cAmmo + ' left(' + reloads + ' reloads)</div>';","\t\t\t\t\tsendChat('', '/direct ' + help);","\t\t\t\t}","\t\t\t}","\t\t}","\t}","});","//---AUTO LOCATION ROLLS","var aLoc = [\"Head\", \"Left Arm\", \"Right Arm\", \"Left Leg\", \"Right Leg\", \"..Dangly Bits! (Main Body)\", \"FREE ATTACK!\"];","//---FUMBLE ROLLS","var aFum = [","\t\"Hit a totally different friendly target in general direction of aimed target (if possible)\",","\t\"Ungracefully fumbled the attack!, lose next attack\",","\t\"Got something in eye, lose this attack\",","\t\"Missed so badly, it makes the enemy see you and an easy target!\",","\t\"Total gun jam/broke weapon(or limb!).. useless this fight. Must get fixed.\",","\t\"Tripped!, next attack to get up\",","\t\"Miss and weapon jam! (GUN) jams, (MELEE) Missed and stuck in Wall/Floor/Tree/Off Balance/etc loose next attack\",","\t\"Missed, and draws sole aggression of the target\",","\t\"Somehow hit a Flying Squirrel!\",","\t\"Failed so badly nearest ally falls back to help.\"","];",""]}]]},"ace":{"folds":[],"scrolltop":3187,"scrollleft":0,"selection":{"start":{"row":284,"column":0},"end":{"row":284,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":226,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1488368367116}