{"changed":true,"filter":false,"title":"HeathColors","tooltip":"/Public/HeathColors","value":"/*\nMy Profile link: https://app.roll20.net/users/262130/dxwarlock\nGIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors\nRoll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor\nLast Updated 2/14/2017\n*/\n/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/\nvar HealthColors = HealthColors || (function() {\n    'use strict';\n    var version = '1.0.2',\n        ScriptName = \"HealthColors\",\n        schemaVersion = '1.0.0',\n/*--------\nTOKEN HANDLER\n--------*/\n        handleToken = function(obj) {\n            var ColorOn = state.HealthColors.auraColorOn;\n            var bar = state.HealthColors.auraBar;\n            var tint = state.HealthColors.auraTint;\n            var onPerc = state.HealthColors.auraPerc;\n            var dead = state.HealthColors.auraDead;\n            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {\n                if (ColorOn !== true) return; //Check Toggle\n//CHECK FOR BARS ------------\n                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;\n                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);\n                var curValue = parseInt(obj.get(bar + \"_value\"), 10);\n                if (isNaN(maxValue) && isNaN(curValue)) return;\n//CALC PERCENTAGE------------\n                var percReal = Math.round((curValue / maxValue) * 100);\n                var perc = Math.round((curValue / maxValue) * 120);\n//SET DEAD------------\n                if (curValue <= 0 && dead === true) {\n                    obj.set(\"status_dead\", true);\n                    SetAuraNone(obj);\n                    if (state.HealthColors.auraDeadFX !== \"None\") {\n                        PlayDeath(state.HealthColors.auraDeadFX);\n                    }\n                    return;\n                }\n                else if (dead === true) obj.set(\"status_dead\", false);\n//MONSTER OR PLAYER------------\n                var oCharacter = getObj('character', obj.get(\"_represents\"));\n                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';\n                var markerColor = newColor(perc);\n                var pColor = '#ffffff';\n                var GM = '';\n                var PC = '';\n                if (percReal > onPerc) {\n                    SetAuraNone(obj);\n                    return;\n                }\n                if (type == 'Player') {\n                    if (state.HealthColors.PCAura === false) return;\n                    var cBy = oCharacter.get('controlledby');\n                    var player = getObj('player', cBy);\n                    pColor = '#000000';\n                    GM = state.HealthColors.GM_PCNames;\n                    PC = state.HealthColors.PCNames\n                    if (player !== undefined) pColor = player.get('color');\n\n                }\n                if (type == 'Monster') {\n                    if (state.HealthColors.NPCAura === false) return;\n                    GM = state.HealthColors.GM_NPCNames;\n                    PC = state.HealthColors.NPCNames\n                }\n//SET AURA|TINT------------\n                if (tint === true) obj.set({\n                    'tint_color': markerColor,\n                });\n                else {\n                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor, GM, PC);\n                }\n            }\n        },\n/*--------\nCHANGE FX\n--------*/\n        HurtFX = function(obj, prev) {\n            if (state.HealthColors.auraColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle\n            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;\n            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {\n                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);\n                var bar1p = prev.bar1_value;\n                var size = obj.get(\"height\");\n                var multi = size / 70;\n                var StartColor = [150, 0, 0, 1.0];\n                var EndColor = [255, 0, 0, 0];\n                 if (bar1 > bar1p && bar1p !== \"\") {\n                    StartColor = [0, 255, 0, 1.0];\n                    EndColor = [255, 255, 255, 0];\n                }\n                var HITS = {\n                    \"maxParticles\": 50,\n                    \"duration\": 50,\n                    \"size\": size / 10,\n                    \"sizeRandom\": 3,\n                    \"lifeSpan\": 25,\n                    \"lifeSpanRandom\": 5,\n                    \"speed\": multi * 8,\n                    \"speedRandom\": multi * 2,\n                    \"gravity\": {\n                        \"x\": multi * 0.01,\n                        \"y\": multi * 0.65\n                    },\n                    \"angle\": 270,\n                    \"angleRandom\": 15,\n                    \"emissionRate\": 5,\n                    \"startColour\": StartColor,\n                    \"endColour\": EndColor,\n                };\n                if (bar1p !== \"\") spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));\n            }\n        },\n/*--------\nCHAT MESSAGE\n--------*/\n        handleInput = function(msg) {\n            var msgFormula = msg.content.split(/\\s+/);\n            var command = msgFormula[0].toUpperCase();\n            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {\n                if (!playerIsGM(msg.playerid)) {\n                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");\n                    return;\n                }\n                else {\n                    var option = msgFormula[1];\n                    if (option === undefined) {\n                        aurahelp();\n                        return;\n                    }\n                    switch (msgFormula[1].toUpperCase()) {\n                        case \"ON\":\n                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;\n                            aurahelp();\n                            break;\n                        case \"BAR\":\n                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];\n                            aurahelp();\n                            break;\n                        case \"TINT\":\n                            state.HealthColors.auraTint = !state.HealthColors.auraTint;\n                            aurahelp();\n                            break;\n                        case \"PERC\":\n                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);\n                            aurahelp();\n                            break;\n                        case \"PC\":\n                            state.HealthColors.PCAura = !state.HealthColors.PCAura;\n                            aurahelp();\n                            break;\n                        case \"NPC\":\n                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;\n                            aurahelp();\n                            break;\n                        case \"GMNPC\":\n                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;\n                            aurahelp();\n                            break;\n                        case \"GMPC\":\n                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;\n                            aurahelp();\n                            break;\n                        case \"PCNPC\":\n                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;\n                            aurahelp();\n                            break;\n                        case \"PCPC\":\n                            state.HealthColors.PCNames = !state.HealthColors.PCNames;\n                            aurahelp();\n                            break;\n                        case \"DEAD\":\n                            state.HealthColors.auraDead = !state.HealthColors.auraDead;\n                            aurahelp();\n                            break;\n                        case \"DEADFX\":\n                            state.HealthColors.auraDeadFX = msgFormula[2];\n                            aurahelp();\n                            break;\n                        case \"SIZE\":\n                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);\n                            aurahelp();\n                            break;\n                        case \"ONEOFF\":\n                            state.HealthColors.OneOff = !state.HealthColors.OneOff;\n                            aurahelp();\n                            break;\n                        case \"FX\":\n                            state.HealthColors.FX = !state.HealthColors.FX;\n                            aurahelp();\n                            break;\n                        default:\n                            return;\n                    }\n                }\n            }\n        },\n\n/*--------\nFUNCTIONS\n--------*/\n\n//DEATH SOUND------------\n        PlayDeath = function(trackname) {\n            var track = findObjs({\n                type: 'jukeboxtrack',\n                title: trackname\n            })[0];\n            if (track) {\n                track.set('playing', false);\n                track.set('softstop', false);\n                track.set('volume', 100);\n                track.set('playing', true);\n            }\n            else {\n                log(\"No track found\");\n            }\n        },\n//SET TOKEN COLORS------------\n        TokenSet = function(obj, sizeSet, markerColor, pColor,GM,PC) {\n            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));\n            var scale = Pageon.get(\"scale_number\") / 10;\n            obj.set({\n                'aura1_radius': sizeSet * scale * 1.8,\n                'aura2_radius': sizeSet * scale * 0.1,\n                'aura1_color': markerColor,\n                'aura2_color': pColor,\n                'showplayers_aura1': true,\n                'showplayers_aura2': true,\n                'showname': GM,\n                'showplayers_name': PC\n            });\n        },\n//HELP MENU------------\n        aurahelp = function() {\n            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";\n            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";\n            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';\n            var off = \"#A84D4D\";\n            var FX = state.HealthColors.auraDeadFX.substring(0, 4);\n            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--\n                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--\n                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--\n                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--\n                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--\n                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--\n                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--\n                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--\n                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--\n                '<hr>' + //--\n                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--\n                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--\n                '<hr>' + //--\n                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--\n                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--\n                '<hr>' + //--\n                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--\n                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--\n                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--\n                '</div>');\n        },\n//REMOVE ALL------------\n        SetAuraNone = function(obj) {\n            var tint = state.HealthColors.auraTint;\n            if (tint === true) {\n                obj.set({\n                    'tint_color': \"transparent\",\n                });\n            }\n            else {\n                obj.set({\n                    'aura1_color': \"\",\n                    'aura2_color': \"\",\n                });\n            }\n        },\n//SET TOKEN COLORS------------\n        newColor = function(ratio) {\n            var color = hsl2rgb(ratio, 100, 50);\n            var hex = rgbToHex(color.r, color.g, color.b);\n            return (hex);\n        },\n//RGB TO HEX COLOR------------\n        rgbToHex = function(r, g, b) {\n            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n        },\n//HSL TO RGB COLOR------------\n        hsl2rgb = function(h, s, l) {\n            var r, g, b, m, c, x;\n            if (!isFinite(h)) h = 0;\n            if (!isFinite(s)) s = 0;\n            if (!isFinite(l)) l = 0;\n            h /= 60;\n            if (h < 0) h = 6 - (-h % 6);\n            h %= 6;\n            s = Math.max(0, Math.min(1, s / 100));\n            l = Math.max(0, Math.min(1, l / 100));\n            c = (1 - Math.abs((2 * l) - 1)) * s;\n            x = c * (1 - Math.abs((h % 2) - 1));\n            if (h < 1) {\n                r = c;\n                g = x;\n                b = 0;\n            }\n            else if (h < 2) {\n                r = x;\n                g = c;\n                b = 0;\n            }\n            else if (h < 3) {\n                r = 0;\n                g = c;\n                b = x;\n            }\n            else if (h < 4) {\n                r = 0;\n                g = x;\n                b = c;\n            }\n            else if (h < 5) {\n                r = x;\n                g = 0;\n                b = c;\n            }\n            else {\n                r = c;\n                g = 0;\n                b = x;\n            }\n            m = l - c / 2;\n            r = Math.round((r + m) * 255);\n            g = Math.round((g + m) * 255);\n            b = Math.round((b + m) * 255);\n            return {\n                r: r,\n                g: g,\n                b: b\n            };\n        },\n//CHECK INSTALL SET STATE------------\n        checkInstall = function() {\n            log('<' + ScriptName + ' v' + version + ' Ready>');\n            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {\n                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');\n                state.HealthColors = {\n                    schemaVersion: schemaVersion\n                };\n                state.HealthColors.version = version;\n            }\n            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off\n            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use\n            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?\n            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?\n            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?\n            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing\n            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status\n            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name\n            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?\n            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?\n            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?\n            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?\n            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?\n            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?\n        },\n        registerEventHandlers = function() {\n            on('chat:message', handleInput);\n            on(\"change:token\", handleToken);\n            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);\n        };\n/*-------------\nRETURN OUTSIDE FUNCTIONS\n-----------*/\n    return {\n        CheckInstall: checkInstall,\n        RegisterEventHandlers: registerEventHandlers\n    };\n}());\n//On Ready\non('ready', function() {\n    'use strict';\n    HealthColors.CheckInstall();\n    HealthColors.RegisterEventHandlers();\n});","undoManager":{"mark":48,"position":49,"stack":[[{"start":{"row":0,"column":0},"end":{"row":329,"column":3},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global getObj state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '0.9.43',","        schemaVersion = '0.9.63',","/*TOKEN CHANGE*/","        handleToken = function(obj) {","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var ColorOn = state.HealthColors.auraColorOn;","            var dead = state.HealthColors.auraDead;","            var markerColor = \"\";","            if(obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if(ColorOn !== true) return; //Check Toggle","//Check bars ------------","                if(obj.get(bar + \"_max\") === \"\" && obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if(isNaN(maxValue) && isNaN(curValue)) return;","//Calc percentage------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//Set dead------------","                if(curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if(state.HealthColors.auraDeadFX !== \"None\") {","                    PlayDeath(state.HealthColors.auraDeadFX);","                }","                } else if(dead === true) obj.set(\"status_dead\", false);","//Monster or Player------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\" ) ? 'Monster' : 'Player';","//SET PLAYER AURA------------","                if(type == 'Player') {","                    if(state.PCAura === false) return;","                    if(percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                    markerColor = newColor(perc);","                    var cBy = oCharacter.get('controlledby');","                    if(tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else if(cBy.split(',').length == 1) {","                        var player = getObj('player', cBy);","                        var pColor = '#000000';","                        if (player !== undefined) pColor = player.get('color');","                        pcSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                    } else {","                        pcSet(obj, state.HealthColors.AuraSize, markerColor);","                    }","                }","//SET NPC AURA------------","                if(type == 'Monster') {","                    if(state.NPCAura === false) return;","                    if(percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                    markerColor = newColor(perc);","                    if(tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else {","                        npcSet(obj, state.HealthColors.AuraSize, markerColor);","                    }","                }","            }","        },","/*CHAT MESSAGE*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if(msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if(!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                } else {","                    var option = msgFormula[1];","                    if(option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch(msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","/*MY FUNCTIONS*/","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if(track) {","            track.set('playing', false);","            track.set('softstop', false);","            track.set('volume', 100);","            track.set('playing', true);","            } else {","                log(\"No track found\");","            }","        },","        pcSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\")/10;","            obj.set({","                'aura1_radius': sizeSet*scale*1.8,","                'aura2_radius': sizeSet*scale*0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","        npcSet = function(obj, sizeSet, markerColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\")/10;","            obj.set({","                'aura1_radius': sizeSet*scale*1.8,","                'aura2_radius': sizeSet*scale*0.1,","                'aura1_color': markerColor,","                'aura2_color': '#ffffff',","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_NPCNames,","                'showplayers_name': state.HealthColors.NPCNames","            });","        },","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        SetAuraNone = function(obj) {","            var tint = state.auraTint;","            if(tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            } else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return(hex);","        },","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if(!isFinite(h)) h = 0;","            if(!isFinite(s)) s = 0;","            if(!isFinite(l)) l = 0;","            h /= 60;","            if(h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if(h < 1) {","                r = c;","                g = x;","                b = 0;","            } else if(h < 2) {","                r = x;","                g = c;","                b = 0;","            } else if(h < 3) {","                r = 0;","                g = c;","                b = x;","            } else if(h < 4) {","                r = 0;","                g = x;","                b = c;","            } else if(h < 5) {","                r = x;","                g = 0;","                b = c;","            } else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","        checkInstall = function() {","            log('<HealthColors v' + version + ' Ready>');","            if(!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('  > Updating Schema to v' + schemaVersion + ' <');","                state.HealthColors = {schemaVersion: schemaVersion};","                state.HealthColors.version = version;","            }","            if(_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if(_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if(_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if(_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if(_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if(_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if(_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if(_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if(_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if(_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if(_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if(_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if(_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});"],"id":2},{"start":{"row":0,"column":0},"end":{"row":384,"column":3},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global getObj state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.01',","    schemaVersion = '0.9.63',","    ColorOn = state.HealthColors.auraColorOn,","    bar = state.HealthColors.auraBar,","    tint = state.HealthColors.auraTint,","    onPerc = state.HealthColors.auraPerc,","    dead = state.HealthColors.auraDead,","/*TOKEN CHANGE*/","        handleToken = function(obj) {","            var markerColor = \"\";","            if(obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if(ColorOn !== true) return; //Check Toggle","//Check bars ------------","                if(obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if(isNaN(maxValue) && isNaN(curValue)) return;","//Calc percentage------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//Set dead------------","                if(curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if(state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                } else if(dead === true) obj.set(\"status_dead\", false);","//Monster or Player------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\" ) ? 'Monster' : 'Player';","//SET PLAYER AURA------------","                if(type == 'Player') {","                    if(state.PCAura === false) return;","                    if(percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                    markerColor = newColor(perc);","                    var cBy = oCharacter.get('controlledby');","                    if(tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else if(cBy.split(',').length == 1) {","                        var player = getObj('player', cBy);","                        var pColor = '#000000';","                        if (player !== undefined) pColor = player.get('color');","                        pcSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                    } else {","                        pcSet(obj, state.HealthColors.AuraSize, markerColor);","                    }","                }","//SET NPC AURA------------","                if(type == 'Monster') {","                    if(state.NPCAura === false) return;","                    if(percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                    markerColor = newColor(perc);","                    if(tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else {","                        npcSet(obj, state.HealthColors.AuraSize, markerColor);","                    }","                }","            }","        },","//HEAL-HIT FX------------","        HurtFX = function(obj, prev) {","            if(ColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if(Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if(obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar+\"_value\"));","                var bar1m = parseInt(obj.get(state.HealthColors.auraBar+\"_max\"));","                var bar1p = prev.bar1_value;","                if(bar1 < bar1p && bar1p !== \"\") {","                    var size = obj.get(\"height\");","                    var multi = size/70;","                    var HITS = {","                    \t\"maxParticles\": 200,","                    \t\"size\": size/10,","                    \t\"sizeRandom\": 3,","                    \t\"lifeSpan\": 20,","                    \t\"lifeSpanRandom\": 5,","                    \t\"speed\": multi*8,","                    \t\"speedRandom\": multi*2,","                    \t\"gravity\": { \"x\": multi*0.01, \"y\": multi*0.65},","                    \t\"angle\": 270,","                    \t\"angleRandom\": 15,","            \t        \"emissionRate\": 5,","                    \t\"startColour\": [150, 0, 0, 1.0],","                    \t\"endColour\": [255, 0, 0, 0],","                    };","                spawnFxWithDefinition(obj.get(\"left\"),obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","                if(bar1 > bar1p && bar1p !== \"\") {","                    var size = obj.get(\"height\");","                    var multi = size/70;","                    var HITS = {","                    \t\"maxParticles\": 200,","                    \t\"size\": size/10,","                    \t\"sizeRandom\": 3,","                    \t\"lifeSpan\": 20,","                    \t\"lifeSpanRandom\": 5,","                    \t\"speed\": multi*8,","                    \t\"speedRandom\": multi*2,","                    \t\"gravity\": { \"x\": multi*0.01, \"y\": multi*0.65},","                    \t\"angle\": 270,","                    \t\"angleRandom\": 15,","            \t        \"emissionRate\": 5,","                    \t\"startColour\": [0, 255, 0, 1.0],","                    \t\"endColour\": [255, 255, 255, 0],","                    };","                spawnFxWithDefinition(obj.get(\"left\"),obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","/*CHAT MESSAGE*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if(msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if(!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                } else {","                    var option = msgFormula[1];","                    if(option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch(msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","/*MY FUNCTIONS*/","        PlayDeath = function(trackname) {","            var track = findObjs({type: 'jukeboxtrack',title: trackname","            })[0];","            if(track) {","            track.set('playing', false);","            track.set('softstop', false);","            track.set('volume', 100);","            track.set('playing', true);","            } else {","                log(\"No track found\");","            }","        },","        pcSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\")/10;","            obj.set({","                'aura1_radius': sizeSet*scale*1.8,","                'aura2_radius': sizeSet*scale*0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","        npcSet = function(obj, sizeSet, markerColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\")/10;","            obj.set({","                'aura1_radius': sizeSet*scale*1.8,","                'aura2_radius': sizeSet*scale*0.1,","                'aura1_color': markerColor,","                'aura2_color': '#ffffff',","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_NPCNames,","                'showplayers_name': state.HealthColors.NPCNames","            });","        },","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        SetAuraNone = function(obj) {","            var tint = state.auraTint;","            if(tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            } else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return(hex);","        },","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if(!isFinite(h)) h = 0;","            if(!isFinite(s)) s = 0;","            if(!isFinite(l)) l = 0;","            h /= 60;","            if(h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if(h < 1) {","                r = c;","                g = x;","                b = 0;","            } else if(h < 2) {","                r = x;","                g = c;","                b = 0;","            } else if(h < 3) {","                r = 0;","                g = c;","                b = x;","            } else if(h < 4) {","                r = 0;","                g = x;","                b = c;","            } else if(h < 5) {","                r = x;","                g = 0;","                b = c;","            } else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","        checkInstall = function() {","            log('<HealthColors v' + version + ' Ready>');","            if(!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('  > Updating Schema to v' + schemaVersion + ' <');","                state.HealthColors = {schemaVersion: schemaVersion};","                state.HealthColors.version = version;","            }","            if(_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if(_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if(_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if(_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if(_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if(_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if(_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if(_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if(_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if(_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if(_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if(_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if(_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if(_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:'+state.HealthColors.auraBar+'_value', HurtFX);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});"]}],[{"start":{"row":10,"column":4},"end":{"row":10,"column":8},"action":"insert","lines":["    "],"id":3},{"start":{"row":11,"column":0},"end":{"row":11,"column":3},"action":"insert","lines":["   "]},{"start":{"row":11,"column":7},"end":{"row":11,"column":8},"action":"insert","lines":[" "]},{"start":{"row":12,"column":4},"end":{"row":12,"column":8},"action":"insert","lines":["    "]},{"start":{"row":13,"column":0},"end":{"row":13,"column":1},"action":"insert","lines":[" "]},{"start":{"row":13,"column":5},"end":{"row":13,"column":8},"action":"insert","lines":["   "]},{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "]},{"start":{"row":15,"column":4},"end":{"row":15,"column":8},"action":"insert","lines":["    "]},{"start":{"row":16,"column":0},"end":{"row":16,"column":8},"action":"insert","lines":["        "]},{"start":{"row":19,"column":14},"end":{"row":19,"column":15},"action":"insert","lines":[" "]},{"start":{"row":20,"column":18},"end":{"row":20,"column":19},"action":"insert","lines":[" "]},{"start":{"row":21,"column":0},"end":{"row":21,"column":16},"action":"insert","lines":["                "]},{"start":{"row":22,"column":18},"end":{"row":22,"column":19},"action":"insert","lines":[" "]},{"start":{"row":25,"column":18},"end":{"row":25,"column":19},"action":"insert","lines":[" "]},{"start":{"row":26,"column":0},"end":{"row":26,"column":16},"action":"insert","lines":["                "]},{"start":{"row":29,"column":0},"end":{"row":29,"column":16},"action":"insert","lines":["                "]},{"start":{"row":30,"column":18},"end":{"row":30,"column":19},"action":"insert","lines":[" "]},{"start":{"row":32,"column":22},"end":{"row":32,"column":23},"action":"insert","lines":[" "]},{"start":{"row":35,"column":17},"end":{"row":36,"column":15},"action":"insert","lines":["","               "]},{"start":{"row":36,"column":23},"end":{"row":36,"column":24},"action":"insert","lines":[" "]},{"start":{"row":37,"column":0},"end":{"row":37,"column":16},"action":"insert","lines":["                "]},{"start":{"row":39,"column":93},"end":{"row":39,"column":94},"action":"remove","lines":[" "]},{"start":{"row":40,"column":0},"end":{"row":40,"column":16},"action":"insert","lines":["                "]},{"start":{"row":41,"column":18},"end":{"row":41,"column":19},"action":"insert","lines":[" "]},{"start":{"row":42,"column":22},"end":{"row":42,"column":23},"action":"insert","lines":[" "]},{"start":{"row":43,"column":22},"end":{"row":43,"column":23},"action":"insert","lines":[" "]},{"start":{"row":49,"column":22},"end":{"row":49,"column":23},"action":"insert","lines":[" "]},{"start":{"row":52,"column":27},"end":{"row":52,"column":28},"action":"insert","lines":[" "]},{"start":{"row":57,"column":21},"end":{"row":58,"column":19},"action":"insert","lines":["","                   "]},{"start":{"row":62,"column":0},"end":{"row":62,"column":16},"action":"insert","lines":["                "]},{"start":{"row":63,"column":18},"end":{"row":63,"column":19},"action":"insert","lines":[" "]},{"start":{"row":64,"column":22},"end":{"row":64,"column":23},"action":"insert","lines":[" "]},{"start":{"row":65,"column":22},"end":{"row":65,"column":23},"action":"insert","lines":[" "]},{"start":{"row":70,"column":22},"end":{"row":70,"column":23},"action":"insert","lines":[" "]},{"start":{"row":79,"column":0},"end":{"row":79,"column":8},"action":"insert","lines":["        "]},{"start":{"row":81,"column":14},"end":{"row":81,"column":15},"action":"insert","lines":[" "]},{"start":{"row":82,"column":14},"end":{"row":82,"column":15},"action":"insert","lines":[" "]},{"start":{"row":83,"column":14},"end":{"row":83,"column":15},"action":"insert","lines":[" "]},{"start":{"row":84,"column":70},"end":{"row":84,"column":71},"action":"insert","lines":[" "]},{"start":{"row":84,"column":72},"end":{"row":84,"column":73},"action":"insert","lines":[" "]},{"start":{"row":85,"column":71},"end":{"row":85,"column":72},"action":"insert","lines":[" "]},{"start":{"row":85,"column":73},"end":{"row":85,"column":74},"action":"insert","lines":[" "]},{"start":{"row":87,"column":18},"end":{"row":87,"column":19},"action":"insert","lines":[" "]},{"start":{"row":89,"column":36},"end":{"row":89,"column":37},"action":"insert","lines":[" "]},{"start":{"row":89,"column":38},"end":{"row":89,"column":39},"action":"insert","lines":[" "]},{"start":{"row":91,"column":0},"end":{"row":91,"column":1},"action":"insert","lines":[" "]},{"start":{"row":91,"column":21},"end":{"row":91,"column":22},"action":"remove","lines":["\t"]},{"start":{"row":91,"column":21},"end":{"row":91,"column":24},"action":"insert","lines":["   "]},{"start":{"row":92,"column":20},"end":{"row":92,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":92,"column":20},"end":{"row":92,"column":24},"action":"insert","lines":["    "]},{"start":{"row":92,"column":36},"end":{"row":92,"column":37},"action":"insert","lines":[" "]},{"start":{"row":92,"column":38},"end":{"row":92,"column":39},"action":"insert","lines":[" "]},{"start":{"row":93,"column":20},"end":{"row":93,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":93,"column":20},"end":{"row":93,"column":24},"action":"insert","lines":["    "]},{"start":{"row":94,"column":20},"end":{"row":94,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":94,"column":20},"end":{"row":94,"column":24},"action":"insert","lines":["    "]},{"start":{"row":95,"column":20},"end":{"row":95,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":95,"column":20},"end":{"row":95,"column":24},"action":"insert","lines":["    "]},{"start":{"row":96,"column":20},"end":{"row":96,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":96,"column":20},"end":{"row":96,"column":24},"action":"insert","lines":["    "]},{"start":{"row":96,"column":38},"end":{"row":96,"column":39},"action":"insert","lines":[" "]},{"start":{"row":96,"column":40},"end":{"row":96,"column":41},"action":"insert","lines":[" "]},{"start":{"row":97,"column":0},"end":{"row":97,"column":4},"action":"insert","lines":["    "]},{"start":{"row":97,"column":24},"end":{"row":97,"column":25},"action":"remove","lines":["\t"]},{"start":{"row":97,"column":44},"end":{"row":97,"column":45},"action":"insert","lines":[" "]},{"start":{"row":97,"column":46},"end":{"row":97,"column":47},"action":"insert","lines":[" "]},{"start":{"row":98,"column":0},"end":{"row":98,"column":2},"action":"insert","lines":["  "]},{"start":{"row":98,"column":22},"end":{"row":98,"column":23},"action":"remove","lines":["\t"]},{"start":{"row":98,"column":22},"end":{"row":98,"column":24},"action":"insert","lines":["  "]},{"start":{"row":98,"column":36},"end":{"row":99,"column":27},"action":"insert","lines":["","                           "]},{"start":{"row":99,"column":38},"end":{"row":99,"column":39},"action":"insert","lines":[" "]},{"start":{"row":99,"column":40},"end":{"row":99,"column":41},"action":"insert","lines":[" "]},{"start":{"row":99,"column":46},"end":{"row":100,"column":27},"action":"insert","lines":["","                           "]},{"start":{"row":100,"column":38},"end":{"row":100,"column":39},"action":"insert","lines":[" "]},{"start":{"row":100,"column":40},"end":{"row":100,"column":41},"action":"insert","lines":[" "]},{"start":{"row":100,"column":45},"end":{"row":101,"column":24},"action":"insert","lines":["","                        "]},{"start":{"row":102,"column":20},"end":{"row":102,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":102,"column":20},"end":{"row":102,"column":24},"action":"insert","lines":["    "]},{"start":{"row":103,"column":20},"end":{"row":103,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":103,"column":20},"end":{"row":103,"column":24},"action":"insert","lines":["    "]},{"start":{"row":104,"column":0},"end":{"row":104,"column":2},"action":"insert","lines":["  "]},{"start":{"row":104,"column":14},"end":{"row":104,"column":15},"action":"remove","lines":["\t"]},{"start":{"row":104,"column":14},"end":{"row":104,"column":16},"action":"insert","lines":["  "]},{"start":{"row":105,"column":0},"end":{"row":105,"column":2},"action":"insert","lines":["  "]},{"start":{"row":105,"column":22},"end":{"row":105,"column":23},"action":"remove","lines":["\t"]},{"start":{"row":105,"column":22},"end":{"row":105,"column":24},"action":"insert","lines":["  "]},{"start":{"row":106,"column":20},"end":{"row":106,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":106,"column":20},"end":{"row":106,"column":24},"action":"insert","lines":["    "]},{"start":{"row":108,"column":0},"end":{"row":108,"column":2},"action":"insert","lines":["  "]},{"start":{"row":108,"column":18},"end":{"row":108,"column":20},"action":"insert","lines":["  "]},{"start":{"row":108,"column":58},"end":{"row":108,"column":59},"action":"insert","lines":[" "]},{"start":{"row":110,"column":18},"end":{"row":110,"column":19},"action":"insert","lines":[" "]},{"start":{"row":112,"column":36},"end":{"row":112,"column":37},"action":"insert","lines":[" "]},{"start":{"row":112,"column":38},"end":{"row":112,"column":39},"action":"insert","lines":[" "]},{"start":{"row":114,"column":20},"end":{"row":114,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":114,"column":20},"end":{"row":114,"column":24},"action":"insert","lines":["    "]},{"start":{"row":115,"column":20},"end":{"row":115,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":115,"column":20},"end":{"row":115,"column":24},"action":"insert","lines":["    "]},{"start":{"row":115,"column":36},"end":{"row":115,"column":37},"action":"insert","lines":[" "]},{"start":{"row":115,"column":38},"end":{"row":115,"column":39},"action":"insert","lines":[" "]},{"start":{"row":116,"column":20},"end":{"row":116,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":116,"column":20},"end":{"row":116,"column":24},"action":"insert","lines":["    "]},{"start":{"row":117,"column":20},"end":{"row":117,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":117,"column":20},"end":{"row":117,"column":24},"action":"insert","lines":["    "]},{"start":{"row":118,"column":0},"end":{"row":118,"column":4},"action":"insert","lines":["    "]},{"start":{"row":118,"column":24},"end":{"row":118,"column":25},"action":"remove","lines":["\t"]},{"start":{"row":119,"column":20},"end":{"row":119,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":119,"column":20},"end":{"row":119,"column":24},"action":"insert","lines":["    "]},{"start":{"row":119,"column":38},"end":{"row":119,"column":39},"action":"insert","lines":[" "]},{"start":{"row":119,"column":40},"end":{"row":119,"column":41},"action":"insert","lines":[" "]},{"start":{"row":120,"column":20},"end":{"row":120,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":120,"column":20},"end":{"row":120,"column":24},"action":"insert","lines":["    "]},{"start":{"row":120,"column":44},"end":{"row":120,"column":45},"action":"insert","lines":[" "]},{"start":{"row":120,"column":46},"end":{"row":120,"column":47},"action":"insert","lines":[" "]},{"start":{"row":121,"column":0},"end":{"row":121,"column":1},"action":"insert","lines":[" "]},{"start":{"row":121,"column":21},"end":{"row":121,"column":22},"action":"remove","lines":["\t"]},{"start":{"row":121,"column":21},"end":{"row":121,"column":24},"action":"insert","lines":["   "]},{"start":{"row":121,"column":36},"end":{"row":122,"column":27},"action":"insert","lines":["","                           "]},{"start":{"row":122,"column":38},"end":{"row":122,"column":39},"action":"insert","lines":[" "]},{"start":{"row":122,"column":40},"end":{"row":122,"column":41},"action":"insert","lines":[" "]},{"start":{"row":122,"column":46},"end":{"row":123,"column":27},"action":"insert","lines":["","                           "]},{"start":{"row":123,"column":38},"end":{"row":123,"column":39},"action":"insert","lines":[" "]},{"start":{"row":123,"column":40},"end":{"row":123,"column":41},"action":"insert","lines":[" "]},{"start":{"row":123,"column":45},"end":{"row":124,"column":24},"action":"insert","lines":["","                        "]},{"start":{"row":125,"column":20},"end":{"row":125,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":125,"column":20},"end":{"row":125,"column":24},"action":"insert","lines":["    "]},{"start":{"row":126,"column":20},"end":{"row":126,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":126,"column":20},"end":{"row":126,"column":24},"action":"insert","lines":["    "]},{"start":{"row":127,"column":12},"end":{"row":127,"column":13},"action":"remove","lines":["\t"]},{"start":{"row":127,"column":12},"end":{"row":127,"column":16},"action":"insert","lines":["    "]},{"start":{"row":128,"column":20},"end":{"row":128,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":128,"column":20},"end":{"row":128,"column":24},"action":"insert","lines":["    "]},{"start":{"row":129,"column":20},"end":{"row":129,"column":21},"action":"remove","lines":["\t"]},{"start":{"row":129,"column":20},"end":{"row":129,"column":24},"action":"insert","lines":["    "]},{"start":{"row":131,"column":16},"end":{"row":131,"column":20},"action":"insert","lines":["    "]},{"start":{"row":131,"column":58},"end":{"row":131,"column":59},"action":"insert","lines":[" "]},{"start":{"row":135,"column":0},"end":{"row":135,"column":8},"action":"insert","lines":["        "]},{"start":{"row":139,"column":14},"end":{"row":139,"column":15},"action":"insert","lines":[" "]},{"start":{"row":140,"column":18},"end":{"row":140,"column":19},"action":"insert","lines":[" "]},{"start":{"row":143,"column":17},"end":{"row":144,"column":15},"action":"insert","lines":["","               "]},{"start":{"row":146,"column":22},"end":{"row":146,"column":23},"action":"insert","lines":[" "]},{"start":{"row":150,"column":26},"end":{"row":150,"column":27},"action":"insert","lines":[" "]},{"start":{"row":217,"column":0},"end":{"row":217,"column":8},"action":"insert","lines":["        "]},{"start":{"row":219,"column":34},"end":{"row":220,"column":16},"action":"insert","lines":["","                "]},{"start":{"row":220,"column":37},"end":{"row":221,"column":16},"action":"insert","lines":["","                "]},{"start":{"row":223,"column":14},"end":{"row":223,"column":15},"action":"insert","lines":[" "]},{"start":{"row":224,"column":0},"end":{"row":224,"column":2},"action":"insert","lines":["  "]},{"start":{"row":224,"column":14},"end":{"row":224,"column":16},"action":"insert","lines":["  "]},{"start":{"row":225,"column":0},"end":{"row":225,"column":4},"action":"insert","lines":["    "]},{"start":{"row":226,"column":0},"end":{"row":226,"column":3},"action":"insert","lines":["   "]},{"start":{"row":226,"column":15},"end":{"row":226,"column":16},"action":"insert","lines":[" "]},{"start":{"row":227,"column":0},"end":{"row":227,"column":4},"action":"insert","lines":["    "]},{"start":{"row":228,"column":13},"end":{"row":229,"column":11},"action":"insert","lines":["","           "]},{"start":{"row":235,"column":50},"end":{"row":235,"column":51},"action":"insert","lines":[" "]},{"start":{"row":235,"column":52},"end":{"row":235,"column":53},"action":"insert","lines":[" "]},{"start":{"row":237,"column":39},"end":{"row":237,"column":40},"action":"insert","lines":[" "]},{"start":{"row":237,"column":41},"end":{"row":237,"column":42},"action":"insert","lines":[" "]},{"start":{"row":237,"column":47},"end":{"row":237,"column":48},"action":"insert","lines":[" "]},{"start":{"row":237,"column":49},"end":{"row":237,"column":50},"action":"insert","lines":[" "]},{"start":{"row":238,"column":39},"end":{"row":238,"column":40},"action":"insert","lines":[" "]},{"start":{"row":238,"column":41},"end":{"row":238,"column":42},"action":"insert","lines":[" "]},{"start":{"row":238,"column":47},"end":{"row":238,"column":48},"action":"insert","lines":[" "]},{"start":{"row":238,"column":49},"end":{"row":238,"column":50},"action":"insert","lines":[" "]},{"start":{"row":249,"column":50},"end":{"row":249,"column":51},"action":"insert","lines":[" "]},{"start":{"row":249,"column":52},"end":{"row":249,"column":53},"action":"insert","lines":[" "]},{"start":{"row":251,"column":39},"end":{"row":251,"column":40},"action":"insert","lines":[" "]},{"start":{"row":251,"column":41},"end":{"row":251,"column":42},"action":"insert","lines":[" "]},{"start":{"row":251,"column":47},"end":{"row":251,"column":48},"action":"insert","lines":[" "]},{"start":{"row":251,"column":49},"end":{"row":251,"column":50},"action":"insert","lines":[" "]},{"start":{"row":252,"column":39},"end":{"row":252,"column":40},"action":"insert","lines":[" "]},{"start":{"row":252,"column":41},"end":{"row":252,"column":42},"action":"insert","lines":[" "]},{"start":{"row":252,"column":47},"end":{"row":252,"column":48},"action":"insert","lines":[" "]},{"start":{"row":252,"column":49},"end":{"row":252,"column":50},"action":"insert","lines":[" "]},{"start":{"row":290,"column":14},"end":{"row":290,"column":15},"action":"insert","lines":[" "]},{"start":{"row":294,"column":13},"end":{"row":295,"column":11},"action":"insert","lines":["","           "]},{"start":{"row":305,"column":18},"end":{"row":305,"column":19},"action":"insert","lines":[" "]},{"start":{"row":312,"column":14},"end":{"row":312,"column":15},"action":"insert","lines":[" "]},{"start":{"row":313,"column":14},"end":{"row":313,"column":15},"action":"insert","lines":[" "]},{"start":{"row":314,"column":14},"end":{"row":314,"column":15},"action":"insert","lines":[" "]},{"start":{"row":316,"column":14},"end":{"row":316,"column":15},"action":"insert","lines":[" "]},{"start":{"row":322,"column":14},"end":{"row":322,"column":15},"action":"insert","lines":[" "]},{"start":{"row":326,"column":13},"end":{"row":327,"column":11},"action":"insert","lines":["","           "]},{"start":{"row":327,"column":19},"end":{"row":327,"column":20},"action":"insert","lines":[" "]},{"start":{"row":331,"column":13},"end":{"row":332,"column":11},"action":"insert","lines":["","           "]},{"start":{"row":332,"column":19},"end":{"row":332,"column":20},"action":"insert","lines":[" "]},{"start":{"row":336,"column":13},"end":{"row":337,"column":11},"action":"insert","lines":["","           "]},{"start":{"row":337,"column":19},"end":{"row":337,"column":20},"action":"insert","lines":[" "]},{"start":{"row":341,"column":13},"end":{"row":342,"column":11},"action":"insert","lines":["","           "]},{"start":{"row":342,"column":19},"end":{"row":342,"column":20},"action":"insert","lines":[" "]},{"start":{"row":346,"column":13},"end":{"row":347,"column":11},"action":"insert","lines":["","           "]},{"start":{"row":364,"column":14},"end":{"row":364,"column":15},"action":"insert","lines":[" "]},{"start":{"row":366,"column":38},"end":{"row":367,"column":20},"action":"insert","lines":["","                    "]},{"start":{"row":367,"column":48},"end":{"row":368,"column":16},"action":"insert","lines":["","                "]},{"start":{"row":371,"column":14},"end":{"row":371,"column":15},"action":"insert","lines":[" "]},{"start":{"row":372,"column":14},"end":{"row":372,"column":15},"action":"insert","lines":[" "]},{"start":{"row":373,"column":14},"end":{"row":373,"column":15},"action":"insert","lines":[" "]},{"start":{"row":374,"column":14},"end":{"row":374,"column":15},"action":"insert","lines":[" "]},{"start":{"row":375,"column":14},"end":{"row":375,"column":15},"action":"insert","lines":[" "]},{"start":{"row":376,"column":14},"end":{"row":376,"column":15},"action":"insert","lines":[" "]},{"start":{"row":377,"column":14},"end":{"row":377,"column":15},"action":"insert","lines":[" "]},{"start":{"row":378,"column":14},"end":{"row":378,"column":15},"action":"insert","lines":[" "]},{"start":{"row":379,"column":14},"end":{"row":379,"column":15},"action":"insert","lines":[" "]},{"start":{"row":380,"column":14},"end":{"row":380,"column":15},"action":"insert","lines":[" "]},{"start":{"row":381,"column":14},"end":{"row":381,"column":15},"action":"insert","lines":[" "]},{"start":{"row":382,"column":14},"end":{"row":382,"column":15},"action":"insert","lines":[" "]},{"start":{"row":383,"column":14},"end":{"row":383,"column":15},"action":"insert","lines":[" "]},{"start":{"row":384,"column":14},"end":{"row":384,"column":15},"action":"insert","lines":[" "]},{"start":{"row":389,"column":32},"end":{"row":389,"column":33},"action":"insert","lines":[" "]},{"start":{"row":389,"column":34},"end":{"row":389,"column":35},"action":"insert","lines":[" "]},{"start":{"row":389,"column":61},"end":{"row":389,"column":62},"action":"insert","lines":[" "]},{"start":{"row":389,"column":63},"end":{"row":389,"column":64},"action":"insert","lines":[" "]},{"start":{"row":391,"column":0},"end":{"row":391,"column":4},"action":"insert","lines":["    "]},{"start":{"row":392,"column":0},"end":{"row":392,"column":4},"action":"insert","lines":["    "]},{"start":{"row":393,"column":0},"end":{"row":393,"column":4},"action":"insert","lines":["    "]},{"start":{"row":404,"column":3},"end":{"row":405,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":6,"column":16},"end":{"row":6,"column":24},"action":"insert","lines":["Campaign"],"id":4}],[{"start":{"row":6,"column":24},"end":{"row":6,"column":25},"action":"insert","lines":[" "],"id":5}],[{"start":{"row":6,"column":9},"end":{"row":6,"column":30},"action":"insert","lines":["spawnFxWithDefinition"],"id":6}],[{"start":{"row":6,"column":30},"end":{"row":6,"column":31},"action":"insert","lines":[" "],"id":7}],[{"start":{"row":85,"column":0},"end":{"row":85,"column":83},"action":"remove","lines":["                var bar1m = parseInt(obj.get(state.HealthColors.auraBar + \"_max\"));"],"id":8}],[{"start":{"row":85,"column":0},"end":{"row":86,"column":0},"action":"remove","lines":["",""],"id":9}],[{"start":{"row":84,"column":82},"end":{"row":84,"column":83},"action":"insert","lines":[","],"id":10}],[{"start":{"row":84,"column":83},"end":{"row":84,"column":84},"action":"insert","lines":["1"],"id":11}],[{"start":{"row":84,"column":84},"end":{"row":84,"column":85},"action":"insert","lines":["0"],"id":12}],[{"start":{"row":84,"column":83},"end":{"row":84,"column":84},"action":"insert","lines":[" "],"id":13}],[{"start":{"row":89,"column":32},"end":{"row":90,"column":0},"action":"insert","lines":["",""],"id":14},{"start":{"row":90,"column":0},"end":{"row":90,"column":24},"action":"insert","lines":["                        "]}],[{"start":{"row":90,"column":0},"end":{"row":90,"column":24},"action":"remove","lines":["                        "],"id":15}],[{"start":{"row":89,"column":32},"end":{"row":90,"column":0},"action":"remove","lines":["",""],"id":16}],[{"start":{"row":87,"column":0},"end":{"row":88,"column":42},"action":"remove","lines":["                    var size = obj.get(\"height\");","                    var multi = size / 70;"],"id":17}],[{"start":{"row":85,"column":44},"end":{"row":86,"column":0},"action":"insert","lines":["",""],"id":18},{"start":{"row":86,"column":0},"end":{"row":86,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":86,"column":16},"end":{"row":87,"column":42},"action":"insert","lines":["                    var size = obj.get(\"height\");","                    var multi = size / 70;"],"id":19}],[{"start":{"row":86,"column":16},"end":{"row":86,"column":20},"action":"remove","lines":["    "],"id":20}],[{"start":{"row":86,"column":16},"end":{"row":86,"column":20},"action":"remove","lines":["    "],"id":21}],[{"start":{"row":86,"column":16},"end":{"row":86,"column":20},"action":"remove","lines":["    "],"id":22}],[{"start":{"row":86,"column":16},"end":{"row":86,"column":20},"action":"remove","lines":["    "],"id":23}],[{"start":{"row":86,"column":16},"end":{"row":86,"column":20},"action":"remove","lines":["    "],"id":24}],[{"start":{"row":87,"column":16},"end":{"row":87,"column":20},"action":"remove","lines":["    "],"id":25}],[{"start":{"row":88,"column":51},"end":{"row":89,"column":0},"action":"remove","lines":["",""],"id":26}],[{"start":{"row":110,"column":0},"end":{"row":111,"column":42},"action":"remove","lines":["                    var size = obj.get(\"height\");","                    var multi = size / 70;"],"id":27}],[{"start":{"row":110,"column":0},"end":{"row":111,"column":0},"action":"remove","lines":["",""],"id":28}],[{"start":{"row":10,"column":25},"end":{"row":10,"column":26},"action":"remove","lines":["0"],"id":29},{"start":{"row":10,"column":25},"end":{"row":10,"column":26},"action":"insert","lines":["1"]}],[{"start":{"row":10,"column":27},"end":{"row":10,"column":28},"action":"remove","lines":["9"],"id":30},{"start":{"row":10,"column":27},"end":{"row":10,"column":28},"action":"insert","lines":["0"]}],[{"start":{"row":10,"column":29},"end":{"row":10,"column":31},"action":"remove","lines":["63"],"id":31},{"start":{"row":10,"column":29},"end":{"row":10,"column":30},"action":"insert","lines":["0"]}],[{"start":{"row":9,"column":23},"end":{"row":9,"column":25},"action":"remove","lines":["01"],"id":32},{"start":{"row":9,"column":23},"end":{"row":9,"column":24},"action":"insert","lines":["1"]}],[{"start":{"row":9,"column":23},"end":{"row":9,"column":24},"action":"remove","lines":["1"],"id":33},{"start":{"row":9,"column":23},"end":{"row":9,"column":24},"action":"insert","lines":["0"]}],[{"start":{"row":0,"column":0},"end":{"row":402,"column":0},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        schemaVersion = '1.0.0',","        ColorOn = state.HealthColors.auraColorOn,","        bar = state.HealthColors.auraBar,","        tint = state.HealthColors.auraTint,","        onPerc = state.HealthColors.auraPerc,","        dead = state.HealthColors.auraDead,","        /*TOKEN CHANGE*/","        handleToken = function(obj) {","            var markerColor = \"\";","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","                //Check bars ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","                //Calc percentage------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","                //Set dead------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                }","                else if (dead === true) obj.set(\"status_dead\", false);","                //Monster or Player------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                //SET PLAYER AURA------------","                if (type == 'Player') {","                    if (state.PCAura === false) return;","                    if (percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                    markerColor = newColor(perc);","                    var cBy = oCharacter.get('controlledby');","                    if (tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else if (cBy.split(',').length == 1) {","                        var player = getObj('player', cBy);","                        var pColor = '#000000';","                        if (player !== undefined) pColor = player.get('color');","                        pcSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                    }","                    else {","                        pcSet(obj, state.HealthColors.AuraSize, markerColor);","                    }","                }","                //SET NPC AURA------------","                if (type == 'Monster') {","                    if (state.NPCAura === false) return;","                    if (percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                    markerColor = newColor(perc);","                    if (tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else {","                        npcSet(obj, state.HealthColors.AuraSize, markerColor);","                    }","                }","            }","        },","        //HEAL-HIT FX------------","        HurtFX = function(obj, prev) {","            if (ColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                if (bar1 < bar1p && bar1p !== \"\") {","                    var HITS = {","                        \"maxParticles\": 200,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 20,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": [150, 0, 0, 1.0],","                        \"endColour\": [255, 0, 0, 0],","                    };","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","                if (bar1 > bar1p && bar1p !== \"\") {","                    var HITS = {","                        \"maxParticles\": 200,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 20,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": [0, 255, 0, 1.0],","                        \"endColour\": [255, 255, 255, 0],","                    };","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","        /*CHAT MESSAGE*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","        /*MY FUNCTIONS*/","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","        pcSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","        npcSet = function(obj, sizeSet, markerColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': '#ffffff',","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_NPCNames,","                'showplayers_name': state.HealthColors.NPCNames","            });","        },","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        SetAuraNone = function(obj) {","            var tint = state.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","        checkInstall = function() {","            log('<HealthColors v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('  > Updating Schema to v' + schemaVersion + ' <');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","    /*-------------","    RETURN OUTSIDE FUNCTIONS","    -----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""],"id":34},{"start":{"row":0,"column":0},"end":{"row":403,"column":0},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","        ColorOn = state.HealthColors.auraColorOn,","        bar = state.HealthColors.auraBar,","        tint = state.HealthColors.auraTint,","        onPerc = state.HealthColors.auraPerc,","        dead = state.HealthColors.auraDead,","        /*TOKEN CHANGE*/","        handleToken = function(obj) {","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","                //Check bars ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","                //Calc percentage------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","                //Set dead------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                }","                else if (dead === true) obj.set(\"status_dead\", false);","                //Monster or Player------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                //SET PLAYER AURA------------","                var markerColor = \"\";","                if (type == 'Player') {","                    if (state.PCAura === false) return;","                    if (percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                    markerColor = newColor(perc);","                    var cBy = oCharacter.get('controlledby');","                    if (tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else if (cBy.split(',').length == 1) {","                        var player = getObj('player', cBy);","                        var pColor = '#000000';","                        if (player !== undefined) pColor = player.get('color');","                        pcSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                    }","                    else {","                        pcSet(obj, state.HealthColors.AuraSize, markerColor);","                    }","                }","                //SET NPC AURA------------","                if (type == 'Monster') {","                    if (state.NPCAura === false) return;","                    if (percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                    markerColor = newColor(perc);","                    if (tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else {","                        npcSet(obj, state.HealthColors.AuraSize, markerColor);","                    }","                }","            }","        },","        //HEAL-HIT FX------------","        HurtFX = function(obj, prev) {","            if (ColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                if (bar1 < bar1p && bar1p !== \"\") {","                }","                var HITS = {","                        \"maxParticles\": 200,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 20,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": [150, 0, 0, 1.0],","                        \"endColour\": [255, 0, 0, 0],","                    };    ","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                if (bar1 > bar1p && bar1p !== \"\") {","                    var HITS = {","                        \"maxParticles\": 200,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 20,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": [0, 255, 0, 1.0],","                        \"endColour\": [255, 255, 255, 0],","                    };","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","        /*CHAT MESSAGE*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","        /*MY FUNCTIONS*/","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","        pcSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","        npcSet = function(obj, sizeSet, markerColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': '#ffffff',","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_NPCNames,","                'showplayers_name': state.HealthColors.NPCNames","            });","        },","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        SetAuraNone = function(obj) {","            var tint = state.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","        checkInstall = function() {","            log('<'+ScriptName+' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<'+ScriptName+' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","    /*-------------","    RETURN OUTSIDE FUNCTIONS","    -----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""]}],[{"start":{"row":89,"column":51},"end":{"row":90,"column":16},"action":"remove","lines":["","                "],"id":35},{"start":{"row":91,"column":20},"end":{"row":91,"column":24},"action":"remove","lines":["    "]},{"start":{"row":92,"column":20},"end":{"row":92,"column":24},"action":"remove","lines":["    "]},{"start":{"row":93,"column":0},"end":{"row":93,"column":2},"action":"remove","lines":["  "]},{"start":{"row":93,"column":20},"end":{"row":93,"column":22},"action":"remove","lines":["  "]},{"start":{"row":94,"column":20},"end":{"row":94,"column":24},"action":"remove","lines":["    "]},{"start":{"row":95,"column":0},"end":{"row":95,"column":3},"action":"remove","lines":["   "]},{"start":{"row":95,"column":20},"end":{"row":95,"column":21},"action":"remove","lines":[" "]},{"start":{"row":96,"column":0},"end":{"row":96,"column":4},"action":"remove","lines":["    "]},{"start":{"row":97,"column":20},"end":{"row":97,"column":24},"action":"remove","lines":["    "]},{"start":{"row":98,"column":0},"end":{"row":98,"column":1},"action":"remove","lines":[" "]},{"start":{"row":98,"column":20},"end":{"row":98,"column":23},"action":"remove","lines":["   "]},{"start":{"row":99,"column":0},"end":{"row":99,"column":4},"action":"remove","lines":["    "]},{"start":{"row":100,"column":0},"end":{"row":100,"column":2},"action":"remove","lines":["  "]},{"start":{"row":100,"column":24},"end":{"row":100,"column":26},"action":"remove","lines":["  "]},{"start":{"row":101,"column":20},"end":{"row":101,"column":24},"action":"remove","lines":["    "]},{"start":{"row":102,"column":0},"end":{"row":102,"column":4},"action":"remove","lines":["    "]},{"start":{"row":103,"column":20},"end":{"row":103,"column":24},"action":"remove","lines":["    "]},{"start":{"row":104,"column":0},"end":{"row":104,"column":4},"action":"remove","lines":["    "]},{"start":{"row":105,"column":0},"end":{"row":105,"column":1},"action":"remove","lines":[" "]},{"start":{"row":105,"column":20},"end":{"row":105,"column":23},"action":"remove","lines":["   "]},{"start":{"row":106,"column":0},"end":{"row":106,"column":4},"action":"remove","lines":["    "]},{"start":{"row":107,"column":16},"end":{"row":107,"column":20},"action":"remove","lines":["    "]},{"start":{"row":107,"column":18},"end":{"row":107,"column":22},"action":"remove","lines":["    "]},{"start":{"row":108,"column":0},"end":{"row":108,"column":4},"action":"remove","lines":["    "]},{"start":{"row":360,"column":19},"end":{"row":360,"column":20},"action":"insert","lines":[" "]},{"start":{"row":360,"column":21},"end":{"row":360,"column":22},"action":"insert","lines":[" "]},{"start":{"row":360,"column":32},"end":{"row":360,"column":33},"action":"insert","lines":[" "]},{"start":{"row":360,"column":34},"end":{"row":360,"column":35},"action":"insert","lines":[" "]},{"start":{"row":362,"column":23},"end":{"row":362,"column":24},"action":"insert","lines":[" "]},{"start":{"row":362,"column":25},"end":{"row":362,"column":26},"action":"insert","lines":[" "]},{"start":{"row":362,"column":36},"end":{"row":362,"column":37},"action":"insert","lines":[" "]},{"start":{"row":362,"column":38},"end":{"row":362,"column":39},"action":"insert","lines":[" "]}],[{"start":{"row":0,"column":0},"end":{"row":402,"column":0},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","        ColorOn = state.HealthColors.auraColorOn,","        bar = state.HealthColors.auraBar,","        tint = state.HealthColors.auraTint,","        onPerc = state.HealthColors.auraPerc,","        dead = state.HealthColors.auraDead,","        /*TOKEN CHANGE*/","        handleToken = function(obj) {","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","                //Check bars ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","                //Calc percentage------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","                //Set dead------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                }","                else if (dead === true) obj.set(\"status_dead\", false);","                //Monster or Player------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                //SET PLAYER AURA------------","                var markerColor = \"\";","                if (type == 'Player') {","                    if (state.PCAura === false) return;","                    if (percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                    markerColor = newColor(perc);","                    var cBy = oCharacter.get('controlledby');","                    if (tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else if (cBy.split(',').length == 1) {","                        var player = getObj('player', cBy);","                        var pColor = '#000000';","                        if (player !== undefined) pColor = player.get('color');","                        pcSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                    }","                    else {","                        pcSet(obj, state.HealthColors.AuraSize, markerColor);","                    }","                }","                //SET NPC AURA------------","                if (type == 'Monster') {","                    if (state.NPCAura === false) return;","                    if (percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                    markerColor = newColor(perc);","                    if (tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else {","                        npcSet(obj, state.HealthColors.AuraSize, markerColor);","                    }","                }","            }","        },","        //HEAL-HIT FX------------","        HurtFX = function(obj, prev) {","            if (ColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                if (bar1 < bar1p && bar1p !== \"\") {}","                var HITS = {","                    \"maxParticles\": 200,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 20,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": [150, 0, 0, 1.0],","                    \"endColour\": [255, 0, 0, 0],","                };","                spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                if (bar1 > bar1p && bar1p !== \"\") {","                    var HITS = {","                        \"maxParticles\": 200,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 20,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": [0, 255, 0, 1.0],","                        \"endColour\": [255, 255, 255, 0],","                    };","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","        /*CHAT MESSAGE*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","        /*MY FUNCTIONS*/","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","        pcSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","        npcSet = function(obj, sizeSet, markerColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': '#ffffff',","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_NPCNames,","                'showplayers_name': state.HealthColors.NPCNames","            });","        },","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        SetAuraNone = function(obj) {","            var tint = state.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","    /*-------------","    RETURN OUTSIDE FUNCTIONS","    -----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""],"id":36},{"start":{"row":0,"column":0},"end":{"row":382,"column":0},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","        ColorOn = state.HealthColors.auraColorOn,","        bar = state.HealthColors.auraBar,","        tint = state.HealthColors.auraTint,","        onPerc = state.HealthColors.auraPerc,","        dead = state.HealthColors.auraDead,","        /*TOKEN CHANGE*/","        handleToken = function(obj) {","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","                //Check bars ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","                //Calc percentage------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","                //Set dead------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                }","                else if (dead === true) obj.set(\"status_dead\", false);","                //Monster or Player------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                //SET PLAYER AURA------------","                markerColor = newColor(perc);","                if (type == 'Player') {","                    var cBy = oCharacter.get('controlledby');","                    if (state.HealthColors.PCAura === false) return;","                    if (percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                    if (tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else if (cBy.split(',').length == 1) {","                        var player = getObj('player', cBy);","                        var pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                    }","                }","                //SET NPC AURA------------","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    if (percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                    if (tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else {","                        npcSet(obj, state.HealthColors.AuraSize, markerColor);","                    }","                }","            }","        },","        //HEAL-HIT FX------------","        HurtFX = function(obj, prev) {","            if (ColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","        /*CHAT MESSAGE*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","        /*MY FUNCTIONS*/","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","        npcSet = function(obj, sizeSet, markerColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_NPCNames,","                'showplayers_name': state.HealthColors.NPCNames","            });","        },","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        SetAuraNone = function(obj) {","            var tint = state.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","    /*-------------","    RETURN OUTSIDE FUNCTIONS","    -----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""]}],[{"start":{"row":55,"column":20},"end":{"row":55,"column":24},"action":"insert","lines":["    "],"id":37},{"start":{"row":56,"column":0},"end":{"row":56,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":0,"column":0},"end":{"row":382,"column":0},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","        ColorOn = state.HealthColors.auraColorOn,","        bar = state.HealthColors.auraBar,","        tint = state.HealthColors.auraTint,","        onPerc = state.HealthColors.auraPerc,","        dead = state.HealthColors.auraDead,","        /*TOKEN CHANGE*/","        handleToken = function(obj) {","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","                //Check bars ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","                //Calc percentage------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","                //Set dead------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                }","                else if (dead === true) obj.set(\"status_dead\", false);","                //Monster or Player------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                //SET PLAYER AURA------------","                markerColor = newColor(perc);","                if (type == 'Player') {","                    var cBy = oCharacter.get('controlledby');","                    if (state.HealthColors.PCAura === false) return;","                    if (percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                    if (tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else if (cBy.split(',').length == 1) {","                        var player = getObj('player', cBy);","                        var pColor = '#000000';","                        if (player !== undefined) pColor = player.get('color');","                        TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                    }","                }","                //SET NPC AURA------------","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    if (percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                    if (tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else {","                        npcSet(obj, state.HealthColors.AuraSize, markerColor);","                    }","                }","            }","        },","        //HEAL-HIT FX------------","        HurtFX = function(obj, prev) {","            if (ColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","        /*CHAT MESSAGE*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","        /*MY FUNCTIONS*/","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","        npcSet = function(obj, sizeSet, markerColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_NPCNames,","                'showplayers_name': state.HealthColors.NPCNames","            });","        },","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        SetAuraNone = function(obj) {","            var tint = state.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","    /*-------------","    RETURN OUTSIDE FUNCTIONS","    -----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""],"id":38},{"start":{"row":0,"column":0},"end":{"row":371,"column":0},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","        ColorOn = state.HealthColors.auraColorOn,","        bar = state.HealthColors.auraBar,","        tint = state.HealthColors.auraTint,","        onPerc = state.HealthColors.auraPerc,","        dead = state.HealthColors.auraDead,","        /*TOKEN CHANGE*/","        handleToken = function(obj) {","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","                //Check bars ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","                //Calc percentage------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","                //Set dead------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                }","                else if (dead === true) obj.set(\"status_dead\", false);","                //Monster or Player------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                //SET PLAYER AURA------------","                var markerColor = newColor(perc);","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    var pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","                    if (percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                if (type == 'Monster') {","                    var pColor = '#000000';","                }","                    if (tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else if (cBy.split(',').length == 1) {","                        TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                    }","                }","            }","        },","        //HEAL-HIT FX------------","        HurtFX = function(obj, prev) {","            if (ColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","        /*CHAT MESSAGE*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","        /*MY FUNCTIONS*/","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","        npcSet = function(obj, sizeSet, markerColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_NPCNames,","                'showplayers_name': state.HealthColors.NPCNames","            });","        },","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        SetAuraNone = function(obj) {","            var tint = state.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","    /*-------------","    RETURN OUTSIDE FUNCTIONS","    -----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""]}],[{"start":{"row":52,"column":16},"end":{"row":52,"column":20},"action":"insert","lines":["    "],"id":39},{"start":{"row":53,"column":20},"end":{"row":53,"column":24},"action":"insert","lines":["    "]},{"start":{"row":54,"column":0},"end":{"row":54,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":0,"column":0},"end":{"row":371,"column":0},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","        ColorOn = state.HealthColors.auraColorOn,","        bar = state.HealthColors.auraBar,","        tint = state.HealthColors.auraTint,","        onPerc = state.HealthColors.auraPerc,","        dead = state.HealthColors.auraDead,","        /*TOKEN CHANGE*/","        handleToken = function(obj) {","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","                //Check bars ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","                //Calc percentage------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","                //Set dead------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                }","                else if (dead === true) obj.set(\"status_dead\", false);","                //Monster or Player------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                //SET PLAYER AURA------------","                var markerColor = newColor(perc);","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    var pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","                    if (percReal > onPerc) {","                        SetAuraNone(obj);","                        return;","                    }","                    if (type == 'Monster') {","                        var pColor = '#000000';","                    }","                    if (tint === true) obj.set({","                        'tint_color': markerColor,","                    });","                    else if (cBy.split(',').length == 1) {","                        TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                    }","                }","            }","        },","        //HEAL-HIT FX------------","        HurtFX = function(obj, prev) {","            if (ColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","        /*CHAT MESSAGE*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","        /*MY FUNCTIONS*/","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","        npcSet = function(obj, sizeSet, markerColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_NPCNames,","                'showplayers_name': state.HealthColors.NPCNames","            });","        },","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        SetAuraNone = function(obj) {","            var tint = state.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","    /*-------------","    RETURN OUTSIDE FUNCTIONS","    -----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""],"id":40},{"start":{"row":0,"column":0},"end":{"row":373,"column":0},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","        ColorOn = state.HealthColors.auraColorOn,","        bar = state.HealthColors.auraBar,","        tint = state.HealthColors.auraTint,","        onPerc = state.HealthColors.auraPerc,","        dead = state.HealthColors.auraDead,","        /*TOKEN CHANGE*/","        handleToken = function(obj) {","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","                //Check bars ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","                //Calc percentage------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","                //Set dead------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                }","                else if (dead === true) obj.set(\"status_dead\", false);","                //Monster or Player------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                //SET PLAYER AURA------------","                var markerColor = newColor(perc);","                var pColor = '#000000';","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                }","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else if (cBy.split(',').length == 1) {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","            }","        },","        //HEAL-HIT FX------------","        HurtFX = function(obj, prev) {","            if (ColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","        /*CHAT MESSAGE*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","        /*MY FUNCTIONS*/","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","        npcSet = function(obj, sizeSet, markerColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_NPCNames,","                'showplayers_name': state.HealthColors.NPCNames","            });","        },","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        SetAuraNone = function(obj) {","            var tint = state.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","    /*-------------","    RETURN OUTSIDE FUNCTIONS","    -----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""]}],[{"start":{"row":0,"column":0},"end":{"row":373,"column":0},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","        ColorOn = state.HealthColors.auraColorOn,","        bar = state.HealthColors.auraBar,","        tint = state.HealthColors.auraTint,","        onPerc = state.HealthColors.auraPerc,","        dead = state.HealthColors.auraDead,","        /*TOKEN CHANGE*/","        handleToken = function(obj) {","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","                //Check bars ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","                //Calc percentage------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","                //Set dead------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                }","                else if (dead === true) obj.set(\"status_dead\", false);","                //Monster or Player------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                //SET PLAYER AURA------------","                var markerColor = newColor(perc);","                var pColor = '#000000';","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                }","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else if (cBy.split(',').length == 1) {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","            }","        },","        //HEAL-HIT FX------------","        HurtFX = function(obj, prev) {","            if (ColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","        /*CHAT MESSAGE*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","        /*MY FUNCTIONS*/","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","        npcSet = function(obj, sizeSet, markerColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_NPCNames,","                'showplayers_name': state.HealthColors.NPCNames","            });","        },","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        SetAuraNone = function(obj) {","            var tint = state.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","    /*-------------","    RETURN OUTSIDE FUNCTIONS","    -----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""],"id":41},{"start":{"row":0,"column":0},"end":{"row":372,"column":0},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","/*TOKEN CHANGE*/","        handleToken = function(obj) {","        var ColorOn = state.HealthColors.auraColorOn;","        var bar = state.HealthColors.auraBar;","        var tint = state.HealthColors.auraTint;","        var onPerc = state.HealthColors.auraPerc;","        var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//Check bars ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","//Calc percentage------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//Set dead------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//Monster or Player------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","//SET AURA------------","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                }","                log(tint)","                if (tint === true) obj.set({'tint_color': markerColor,});","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","            }","        },","//HEAL-HIT FX------------","        HurtFX = function(obj, prev) {","            if (state.HealthColors.auraColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","/*CHAT MESSAGE*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","/*MY FUNCTIONS*/","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","        npcSet = function(obj, sizeSet, markerColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_NPCNames,","                'showplayers_name': state.HealthColors.NPCNames","            });","        },","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","    /*-------------","    RETURN OUTSIDE FUNCTIONS","    -----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""]}],[{"start":{"row":12,"column":0},"end":{"row":12,"column":8},"action":"insert","lines":["        "],"id":42},{"start":{"row":14,"column":8},"end":{"row":14,"column":12},"action":"insert","lines":["    "]},{"start":{"row":15,"column":8},"end":{"row":15,"column":12},"action":"insert","lines":["    "]},{"start":{"row":16,"column":0},"end":{"row":16,"column":2},"action":"insert","lines":["  "]},{"start":{"row":16,"column":10},"end":{"row":16,"column":12},"action":"insert","lines":["  "]},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "]},{"start":{"row":21,"column":0},"end":{"row":21,"column":16},"action":"insert","lines":["                "]},{"start":{"row":26,"column":0},"end":{"row":26,"column":16},"action":"insert","lines":["                "]},{"start":{"row":29,"column":0},"end":{"row":29,"column":16},"action":"insert","lines":["                "]},{"start":{"row":37,"column":0},"end":{"row":37,"column":16},"action":"insert","lines":["                "]},{"start":{"row":40,"column":0},"end":{"row":40,"column":16},"action":"insert","lines":["                "]},{"start":{"row":59,"column":44},"end":{"row":60,"column":20},"action":"insert","lines":["","                    "]},{"start":{"row":60,"column":46},"end":{"row":61,"column":16},"action":"insert","lines":["","                "]},{"start":{"row":67,"column":0},"end":{"row":67,"column":8},"action":"insert","lines":["        "]},{"start":{"row":104,"column":0},"end":{"row":104,"column":8},"action":"insert","lines":["        "]},{"start":{"row":186,"column":0},"end":{"row":186,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":0,"column":0},"end":{"row":374,"column":0},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","        /*TOKEN CHANGE*/","        handleToken = function(obj) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","                //Check bars ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","                //Calc percentage------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","                //Set dead------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                }","                else if (dead === true) obj.set(\"status_dead\", false);","                //Monster or Player------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                //SET AURA------------","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                }","                log(tint)","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","            }","        },","        //HEAL-HIT FX------------","        HurtFX = function(obj, prev) {","            if (state.HealthColors.auraColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","        /*CHAT MESSAGE*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","        /*MY FUNCTIONS*/","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","        npcSet = function(obj, sizeSet, markerColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_NPCNames,","                'showplayers_name': state.HealthColors.NPCNames","            });","        },","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","    /*-------------","    RETURN OUTSIDE FUNCTIONS","    -----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""],"id":43},{"start":{"row":0,"column":0},"end":{"row":377,"column":0},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK FOR BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","            }","        },","/*--------","CHANGE FX","--------*/","        HurtFX = function(obj, prev) {","            if (state.HealthColors.auraColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","","/*--------","FUNCTIONS","--------*/","","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""]}],[{"start":{"row":376,"column":3},"end":{"row":377,"column":0},"action":"remove","lines":["",""],"id":44}],[{"start":{"row":0,"column":0},"end":{"row":376,"column":3},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK FOR BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","            }","        },","/*--------","CHANGE FX","--------*/","        HurtFX = function(obj, prev) {","            if (state.HealthColors.auraColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","","/*--------","FUNCTIONS","--------*/","","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});"],"id":45},{"start":{"row":0,"column":0},"end":{"row":377,"column":0},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK FOR BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","            }","        },","/*--------","CHANGE FX","--------*/","        HurtFX = function(obj, prev) {","            if (state.HealthColors.auraColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                 if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                if (bar1p !== \"\") spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","","/*--------","FUNCTIONS","--------*/","","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""]}],[{"start":{"row":376,"column":3},"end":{"row":377,"column":0},"action":"remove","lines":["",""],"id":46}],[{"start":{"row":0,"column":0},"end":{"row":376,"column":3},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK FOR BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","            }","        },","/*--------","CHANGE FX","--------*/","        HurtFX = function(obj, prev) {","            if (state.HealthColors.auraColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                 if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                if (bar1p !== \"\") spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","","/*--------","FUNCTIONS","--------*/","","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});"],"id":47},{"start":{"row":0,"column":0},"end":{"row":378,"column":3},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK FOR BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","            }","        },","/*--------","CHANGE FX","--------*/","        HurtFX = function(obj, prev) {","            if (state.HealthColors.auraColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                 if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                if (bar1p !== \"\") spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","","/*--------","FUNCTIONS","--------*/","","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});"]}],[{"start":{"row":9,"column":23},"end":{"row":9,"column":24},"action":"remove","lines":["0"],"id":48},{"start":{"row":9,"column":23},"end":{"row":9,"column":24},"action":"insert","lines":["1"]}],[{"start":{"row":0,"column":0},"end":{"row":378,"column":3},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.1',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK FOR BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","            }","        },","/*--------","CHANGE FX","--------*/","        HurtFX = function(obj, prev) {","            if (state.HealthColors.auraColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                 if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                if (bar1p !== \"\") spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","","/*--------","FUNCTIONS","--------*/","","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': state.HealthColors.GM_PCNames,","                'showplayers_name': state.HealthColors.PCNames","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});"],"id":49},{"start":{"row":0,"column":0},"end":{"row":386,"column":3},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.2',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK FOR BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                var GM = '';","                var PC = '';","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    GM = state.HealthColors.GM_PCNames;","                    PC = state.HealthColors.PCNames","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    GM = state.HealthColors.GM_NPCNames;","                    PC = state.HealthColors.NPCNames","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor, GM, PC);","                }","            }","        },","/*--------","CHANGE FX","--------*/","        HurtFX = function(obj, prev) {","            log(state.HealthColors.auraBar);","            if (state.HealthColors.auraColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                log(bar1)","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                 if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                if (bar1p !== \"\") spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","","/*--------","FUNCTIONS","--------*/","","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor,GM,PC) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': GM,","                'showplayers_name': PC","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});"]}],[{"start":{"row":11,"column":29},"end":{"row":11,"column":30},"action":"remove","lines":["0"],"id":50},{"start":{"row":11,"column":29},"end":{"row":11,"column":30},"action":"insert","lines":["1"]}],[{"start":{"row":0,"column":0},"end":{"row":386,"column":3},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.2',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.1',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK FOR BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                var GM = '';","                var PC = '';","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    GM = state.HealthColors.GM_PCNames;","                    PC = state.HealthColors.PCNames","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    GM = state.HealthColors.GM_NPCNames;","                    PC = state.HealthColors.NPCNames","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor, GM, PC);","                }","            }","        },","/*--------","CHANGE FX","--------*/","        HurtFX = function(obj, prev) {","            log(state.HealthColors.auraBar);","            if (state.HealthColors.auraColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                log(bar1)","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                 if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                if (bar1p !== \"\") spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","","/*--------","FUNCTIONS","--------*/","","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor,GM,PC) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': GM,","                'showplayers_name': PC","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});"],"id":51},{"start":{"row":0,"column":0},"end":{"row":384,"column":3},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.2',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.0',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK FOR BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") {","                        PlayDeath(state.HealthColors.auraDeadFX);","                    }","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                var GM = '';","                var PC = '';","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    GM = state.HealthColors.GM_PCNames;","                    PC = state.HealthColors.PCNames","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    GM = state.HealthColors.GM_NPCNames;","                    PC = state.HealthColors.NPCNames","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor, GM, PC);","                }","            }","        },","/*--------","CHANGE FX","--------*/","        HurtFX = function(obj, prev) {","            if (state.HealthColors.auraColorOn !== true || state.HealthColors.FX !== true) return; //Check Toggle","            if (Campaign().get(\"playerpageid\") != obj.get(\"_pageid\")) return;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                var bar1 = parseInt(obj.get(state.HealthColors.auraBar + \"_value\"), 10);","                var bar1p = prev.bar1_value;","                var size = obj.get(\"height\");","                var multi = size / 70;","                var StartColor = [150, 0, 0, 1.0];","                var EndColor = [255, 0, 0, 0];","                 if (bar1 > bar1p && bar1p !== \"\") {","                    StartColor = [0, 255, 0, 1.0];","                    EndColor = [255, 255, 255, 0];","                }","                var HITS = {","                    \"maxParticles\": 50,","                    \"duration\": 50,","                    \"size\": size / 10,","                    \"sizeRandom\": 3,","                    \"lifeSpan\": 25,","                    \"lifeSpanRandom\": 5,","                    \"speed\": multi * 8,","                    \"speedRandom\": multi * 2,","                    \"gravity\": {","                        \"x\": multi * 0.01,","                        \"y\": multi * 0.65","                    },","                    \"angle\": 270,","                    \"angleRandom\": 15,","                    \"emissionRate\": 5,","                    \"startColour\": StartColor,","                    \"endColour\": EndColor,","                };","                if (bar1p !== \"\") spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","","/*--------","FUNCTIONS","--------*/","","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor,GM,PC) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': GM,","                'showplayers_name': PC","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","            on('change:graphic:' + state.HealthColors.auraBar + '_value', HurtFX);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});"]}]]},"ace":{"folds":[],"scrolltop":4549,"scrollleft":0,"selection":{"start":{"row":384,"column":3},"end":{"row":384,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":323,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1487143980271}