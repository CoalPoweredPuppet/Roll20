{"filter":false,"title":"HeathColors","tooltip":"/Public/HeathColors","undoManager":{"mark":60,"position":60,"stack":[[{"start":{"row":0,"column":0},"end":{"row":376,"column":3},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.3',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.1',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj, prev) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                var prevValue = prev[bar + \"_value\"];","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") PlayDeath(state.HealthColors.auraDeadFX);","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//PERCENTAGE OFF------------","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","//MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                var GM = '';","                var PC = '';","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    GM = state.HealthColors.GM_PCNames;","                    PC = state.HealthColors.PCNames","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    GM = state.HealthColors.GM_NPCNames;","                    PC = state.HealthColors.NPCNames","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor, GM, PC);","                }","//SPURT FX------------","                if (state.HealthColors.FX == true) {","                    if(curValue == prevValue || prevValue == \"\") return;","                    var size = obj.get(\"height\");","                    var multi = size / 70;","                    var StartColor = [150, 0, 0, 1.0];","                    var EndColor = [255, 0, 0, 0];","                     if (curValue > prevValue && prevValue !== \"\") {","                        StartColor = [0, 255, 0, 1.0];","                        EndColor = [255, 255, 255, 0];","                    }","                    var HITS = {","                        \"maxParticles\": 50,","                        \"duration\": 50,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 25,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": StartColor,","                        \"endColour\": EndColor,","                    };","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","","/*--------","FUNCTIONS","--------*/","","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 100);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor,GM,PC) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': GM,","                'showplayers_name': PC","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});"],"id":2},{"start":{"row":0,"column":0},"end":{"row":376,"column":3},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.3',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.1',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj, prev) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                var prevValue = prev[bar + \"_value\"];","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") PlayDeath(state.HealthColors.auraDeadFX);","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//PERCENTAGE OFF------------","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","//MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                var GM = '';","                var PC = '';","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    GM = state.HealthColors.GM_PCNames;","                    PC = state.HealthColors.PCNames","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    GM = state.HealthColors.GM_NPCNames;","                    PC = state.HealthColors.NPCNames","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor, GM, PC);","                }","//SPURT FX------------              ","                if (state.HealthColors.FX == true) {","                    if(curValue == prevValue || prevValue == \"\") return;","                    var size = obj.get(\"height\");","                    var multi = size / 70;","                    var StartColor = [150, 0, 0, 1.0];","                    var EndColor = [255, 0, 0, 0];","                     if (curValue > prevValue && prevValue !== \"\") {","                        StartColor = [0, 255, 0, 1.0];","                        EndColor = [255, 255, 255, 0];","                    }","                    var HITS = {","                        \"maxParticles\": 50,","                        \"duration\": 50,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 25,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": StartColor,","                        \"endColour\": EndColor,","                    };","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","","/*--------","FUNCTIONS","--------*/","","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 50);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor,GM,PC) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': GM,","                'showplayers_name': PC","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});"]}],[{"start":{"row":74,"column":22},"end":{"row":74,"column":36},"action":"remove","lines":["              "],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":376,"column":3},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.3',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.1',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj, prev) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                var prevValue = prev[bar + \"_value\"];","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") PlayDeath(state.HealthColors.auraDeadFX);","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//PERCENTAGE OFF------------","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","//MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                var GM = '';","                var PC = '';","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    GM = state.HealthColors.GM_PCNames;","                    PC = state.HealthColors.PCNames","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    GM = state.HealthColors.GM_NPCNames;","                    PC = state.HealthColors.NPCNames","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor, GM, PC);","                }","//SPURT FX------------","                if (state.HealthColors.FX == true) {","                    if(curValue == prevValue || prevValue == \"\") return;","                    var size = obj.get(\"height\");","                    var multi = size / 70;","                    var StartColor = [150, 0, 0, 1.0];","                    var EndColor = [255, 0, 0, 0];","                     if (curValue > prevValue && prevValue !== \"\") {","                        StartColor = [0, 255, 0, 1.0];","                        EndColor = [255, 255, 255, 0];","                    }","                    var HITS = {","                        \"maxParticles\": 50,","                        \"duration\": 50,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 25,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": StartColor,","                        \"endColour\": EndColor,","                    };","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","","/*--------","FUNCTIONS","--------*/","","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 50);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor,GM,PC) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': GM,","                'showplayers_name': PC","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});"],"id":4},{"start":{"row":0,"column":0},"end":{"row":376,"column":3},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.3',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.1',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj, prev) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                var prevValue = prev[bar + \"_value\"];","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") PlayDeath(state.HealthColors.auraDeadFX);","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//PERCENTAGE OFF------------","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","//MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                var GM = '';","                var PC = '';","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    GM = state.HealthColors.GM_PCNames;","                    PC = state.HealthColors.PCNames","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    GM = state.HealthColors.GM_NPCNames;","                    PC = state.HealthColors.NPCNames","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor, GM, PC);","                }","//SPURT FX------------              ","                if (state.HealthColors.FX == true) {","                    if(curValue == prevValue || prevValue == \"\") return;","                    var size = obj.get(\"height\");","                    var multi = size / 70;","                    var StartColor = [150, 0, 0, 1.0];","                    var EndColor = [255, 0, 0, 0];","                     if (curValue > prevValue && prevValue !== \"\") {","                        StartColor = [0, 255, 0, 1.0];","                        EndColor = [255, 255, 255, 0];","                    }","                    var HITS = {","                        \"maxParticles\": 50,","                        \"duration\": 50,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 25,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": StartColor,","                        \"endColour\": EndColor,","                    };","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","","/*--------","FUNCTIONS","--------*/","","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 50);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor,GM,PC) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': GM,","                'showplayers_name': PC","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 3);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{BarNumber?(1, 2, or 3)|1}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});"]}],[{"start":{"row":74,"column":22},"end":{"row":74,"column":36},"action":"remove","lines":["              "],"id":5}],[{"start":{"row":59,"column":75},"end":{"row":60,"column":0},"action":"remove","lines":["",""],"id":6}],[{"start":{"row":58,"column":51},"end":{"row":58,"column":52},"action":"insert","lines":[";"],"id":7}],[{"start":{"row":64,"column":52},"end":{"row":64,"column":53},"action":"insert","lines":[";"],"id":8}],[{"start":{"row":6,"column":38},"end":{"row":6,"column":46},"action":"remove","lines":["Campaign"],"id":9}],[{"start":{"row":6,"column":38},"end":{"row":6,"column":39},"action":"remove","lines":[" "],"id":10}],[{"start":{"row":6,"column":38},"end":{"row":6,"column":47},"action":"insert","lines":["Campaign "],"id":11},{"start":{"row":58,"column":51},"end":{"row":58,"column":52},"action":"remove","lines":[";"]},{"start":{"row":59,"column":75},"end":{"row":60,"column":0},"action":"insert","lines":["",""]},{"start":{"row":65,"column":52},"end":{"row":65,"column":53},"action":"remove","lines":[";"]}],[{"start":{"row":237,"column":56},"end":{"row":237,"column":83},"action":"remove","lines":["?{BarNumber?(1, 2, or 3)|1}"],"id":13},{"start":{"row":237,"column":56},"end":{"row":237,"column":68},"action":"insert","lines":["?{Bar|1|2|3}"]}],[{"start":{"row":0,"column":0},"end":{"row":376,"column":3},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.3',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.1',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj, prev) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                var prevValue = prev[bar + \"_value\"];","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") PlayDeath(state.HealthColors.auraDeadFX);","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//PERCENTAGE OFF------------","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","//MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                var GM = '';","                var PC = '';","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    GM = state.HealthColors.GM_PCNames;","                    PC = state.HealthColors.PCNames","                    if (player !== undefined) pColor = player.get('color');","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    GM = state.HealthColors.GM_NPCNames;","                    PC = state.HealthColors.NPCNames","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor, GM, PC);","                }","//SPURT FX------------","                if (state.HealthColors.FX == true) {","                    if(curValue == prevValue || prevValue == \"\") return;","                    var size = obj.get(\"height\");","                    var multi = size / 70;","                    var StartColor = [150, 0, 0, 1.0];","                    var EndColor = [255, 0, 0, 0];","                     if (curValue > prevValue && prevValue !== \"\") {","                        StartColor = [0, 255, 0, 1.0];","                        EndColor = [255, 255, 255, 0];","                    }","                    var HITS = {","                        \"maxParticles\": 50,","                        \"duration\": 50,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 25,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": StartColor,","                        \"endColour\": EndColor,","                    };","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = !state.HealthColors.GM_NPCNames;","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = !state.HealthColors.GM_PCNames;","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = !state.HealthColors.NPCNames;","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = !state.HealthColors.PCNames;","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","","/*--------","FUNCTIONS","--------*/","","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 50);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor,GM,PC) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","                'showname': GM,","                'showplayers_name': PC","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 3);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + //--","                '</u><br>Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{Bar|1|2|3}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'GM Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_NPCNames !== true ? off : \"\") + ';\" href=\"!aura gmnpc\">' + (state.HealthColors.GM_NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'GM Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.GM_PCNames !== true ? off : \"\") + ';\" href=\"!aura gmpc\">' + (state.HealthColors.GM_PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'PC Sees NPC Names: <a ' + style + 'background-color:' + (state.HealthColors.NPCNames !== true ? off : \"\") + ';\" href=\"!aura pcnpc\">' + (state.HealthColors.NPCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'PC Sees PC Names: <a ' + style + 'background-color:' + (state.HealthColors.PCNames !== true ? off : \"\") + ';\" href=\"!aura pcpc\">' + (state.HealthColors.PCNames !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = true; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = true; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = true; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = true; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});"],"id":14},{"start":{"row":0,"column":0},"end":{"row":420,"column":3},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global spawnFxWithDefinition getObj Campaign state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.3',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.2',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj, prev) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                var prevValue = prev[bar + \"_value\"];","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") PlayDeath(state.HealthColors.auraDeadFX);","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//PERCENTAGE OFF------------","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","//MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                if(oCharacter !== undefined) {","                    if (getAttrByName(oCharacter.id, 'USECOLOR') === undefined) CreateAttrib(oCharacter);","                    var UseAuraAtt = findObjs({name: \"USECOLOR\",_type: \"attribute\",characterid: oCharacter.id}, {caseInsensitive: true})[0];","                    var UseAura = UseAuraAtt.get(\"current\").toUpperCase();","                    if(UseAura != \"YES\" && UseAura != \"NO\"){","                        UseAuraAtt.set('current', \"YES\");","                        var name = oCharacter.get('name')","                        GMW(name + \": USECOLOR NOT SET TO YES or NO, SETTING TO YES\");","                    }","                    var UseAura = UseAuraAtt.get(\"current\").toUpperCase();","                    if(UseAura == \"NO\") return;","                }","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                var GM = '';","                var PC = '';","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","                    var GM = state.HealthColors.GM_PCNames","                    if(GM != 'Off') {","                        var GM = (GM == \"Yes\") ? true : false;","                        obj.set({'showname': GM});","                    }","                    var PC = state.HealthColors.PCNames","                    if(PC != 'Off') {","                        var PC = (PC == \"Yes\") ? true : false;","                        obj.set({'showplayers_name': PC});","                    }","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    var GM = state.HealthColors.GM_NPCNames","                    if(GM != 'Off') {","                        var GM = (GM == \"Yes\") ? true : false;","                        obj.set({'showname': GM});","                    }","                    var PC = state.HealthColors.NPCNames","                    if(PC != 'Off') {","                        var PC = (PC == \"Yes\") ? true : false;","                        obj.set({'showplayers_name': PC});","                    }","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","//SPURT FX------------","                if (state.HealthColors.FX == true) {","                    if(curValue == prevValue || prevValue == \"\") return;","                    var size = obj.get(\"height\");","                    var multi = size / 70;","                    var StartColor = [150, 0, 0, 1.0];","                    var EndColor = [255, 0, 0, 0];","                     if (curValue > prevValue && prevValue !== \"\") {","                        StartColor = [0, 255, 0, 1.0];","                        EndColor = [255, 255, 255, 0];","                    }","                    var HITS = {","                        \"maxParticles\": 50,","                        \"duration\": 50,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 25,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": StartColor,","                        \"endColour\": EndColor,","                    };","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","/*--------","FUNCTIONS","--------*/","//WHISPER GM------------","        GMW = function(text){","            sendChat('HealthColors', \"/w GM <br><b> \" + text + \"</b>\");","        },","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 50);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//CREATE USECOLOR ATTR------------","        CreateAttrib = function(oCharacter){","            log(\"Creating USECOLOR\");","            createObj(\"attribute\", {","                name: 'USECOLOR',","                current: 'YES',","                characterid: oCharacter.id","            });","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; font-size: 9pt; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var disable = \"#D6D6D6\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; font-size: 9pt; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + '</u><br>'+//--","                'Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{Bar|1|2|3}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'Global GM Sees NPC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.GM_NPCNames,off,disable) + ';\" href=\"!aura gmnpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.GM_NPCNames + '</a><br>' + //---","                'Global GM Sees PC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.GM_PCNames,off,disable) + ';\" href=\"!aura gmpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.GM_PCNames  + '</a><br>' + //--","                '<hr>' + //--","                ' Global PC Sees NPC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.NPCNames,off,disable) + ';\" href=\"!aura pcnpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.NPCNames  + '</a><br>' + //--","                ' Global PC Sees PC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.PCNames,off,disable)+ ';\" href=\"!aura pcpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.PCNames + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        ButtonColor = function(state,off,disable) {","            var color;","            if(state == \"No\") color = off;","            if(state == \"Off\") color = disable;","            return color;","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = \"Yes\"; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = \"Yes\"; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = \"Yes\"; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = \"Yes\"; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});"]}],[{"start":{"row":12,"column":0},"end":{"row":12,"column":8},"action":"insert","lines":["        "],"id":16},{"start":{"row":13,"column":0},"end":{"row":13,"column":8},"action":"insert","lines":["        "]},{"start":{"row":14,"column":0},"end":{"row":14,"column":8},"action":"insert","lines":["        "]},{"start":{"row":23,"column":0},"end":{"row":23,"column":16},"action":"insert","lines":["                "]},{"start":{"row":29,"column":0},"end":{"row":29,"column":16},"action":"insert","lines":["                "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":16},"action":"insert","lines":["                "]},{"start":{"row":40,"column":0},"end":{"row":40,"column":16},"action":"insert","lines":["                "]},{"start":{"row":45,"column":0},"end":{"row":45,"column":16},"action":"insert","lines":["                "]},{"start":{"row":47,"column":18},"end":{"row":47,"column":19},"action":"insert","lines":[" "]},{"start":{"row":49,"column":47},"end":{"row":50,"column":24},"action":"insert","lines":["","                        "]},{"start":{"row":50,"column":41},"end":{"row":51,"column":24},"action":"insert","lines":["","                        "]},{"start":{"row":51,"column":43},"end":{"row":52,"column":24},"action":"insert","lines":["","                        "]},{"start":{"row":52,"column":50},"end":{"row":53,"column":20},"action":"insert","lines":["","                    "]},{"start":{"row":53,"column":24},"end":{"row":54,"column":24},"action":"insert","lines":["","                        "]},{"start":{"row":54,"column":45},"end":{"row":55,"column":20},"action":"insert","lines":["","                    "]},{"start":{"row":57,"column":22},"end":{"row":57,"column":23},"action":"insert","lines":[" "]},{"start":{"row":57,"column":60},"end":{"row":57,"column":61},"action":"insert","lines":[" "]},{"start":{"row":63,"column":22},"end":{"row":63,"column":23},"action":"insert","lines":[" "]},{"start":{"row":77,"column":22},"end":{"row":77,"column":23},"action":"insert","lines":[" "]},{"start":{"row":79,"column":33},"end":{"row":80,"column":28},"action":"insert","lines":["","                            "]},{"start":{"row":80,"column":42},"end":{"row":81,"column":24},"action":"insert","lines":["","                        "]},{"start":{"row":84,"column":22},"end":{"row":84,"column":23},"action":"insert","lines":[" "]},{"start":{"row":86,"column":33},"end":{"row":87,"column":28},"action":"insert","lines":["","                            "]},{"start":{"row":87,"column":50},"end":{"row":88,"column":24},"action":"insert","lines":["","                        "]},{"start":{"row":95,"column":22},"end":{"row":95,"column":23},"action":"insert","lines":[" "]},{"start":{"row":97,"column":33},"end":{"row":98,"column":28},"action":"insert","lines":["","                            "]},{"start":{"row":98,"column":42},"end":{"row":99,"column":24},"action":"insert","lines":["","                        "]},{"start":{"row":102,"column":22},"end":{"row":102,"column":23},"action":"insert","lines":[" "]},{"start":{"row":104,"column":33},"end":{"row":105,"column":28},"action":"insert","lines":["","                            "]},{"start":{"row":105,"column":50},"end":{"row":106,"column":24},"action":"insert","lines":["","                        "]},{"start":{"row":109,"column":0},"end":{"row":109,"column":16},"action":"insert","lines":["                "]},{"start":{"row":116,"column":0},"end":{"row":116,"column":16},"action":"insert","lines":["                "]},{"start":{"row":118,"column":22},"end":{"row":118,"column":23},"action":"insert","lines":[" "]},{"start":{"row":123,"column":20},"end":{"row":123,"column":21},"action":"remove","lines":[" "]},{"start":{"row":150,"column":0},"end":{"row":150,"column":8},"action":"insert","lines":["        "]},{"start":{"row":151,"column":0},"end":{"row":151,"column":8},"action":"insert","lines":["        "]},{"start":{"row":152,"column":0},"end":{"row":152,"column":8},"action":"insert","lines":["        "]},{"start":{"row":234,"column":0},"end":{"row":234,"column":8},"action":"insert","lines":["        "]},{"start":{"row":235,"column":0},"end":{"row":235,"column":8},"action":"insert","lines":["        "]},{"start":{"row":236,"column":0},"end":{"row":236,"column":8},"action":"insert","lines":["        "]},{"start":{"row":237,"column":0},"end":{"row":237,"column":8},"action":"insert","lines":["        "]},{"start":{"row":238,"column":28},"end":{"row":238,"column":29},"action":"insert","lines":[" "]},{"start":{"row":241,"column":0},"end":{"row":241,"column":8},"action":"insert","lines":["        "]},{"start":{"row":257,"column":0},"end":{"row":257,"column":8},"action":"insert","lines":["        "]},{"start":{"row":258,"column":43},"end":{"row":258,"column":44},"action":"insert","lines":[" "]},{"start":{"row":266,"column":0},"end":{"row":266,"column":8},"action":"insert","lines":["        "]},{"start":{"row":279,"column":0},"end":{"row":279,"column":8},"action":"insert","lines":["        "]},{"start":{"row":287,"column":348},"end":{"row":287,"column":349},"action":"insert","lines":[" "]},{"start":{"row":287,"column":350},"end":{"row":287,"column":351},"action":"insert","lines":[" "]},{"start":{"row":297,"column":123},"end":{"row":297,"column":124},"action":"insert","lines":[" "]},{"start":{"row":297,"column":128},"end":{"row":297,"column":129},"action":"insert","lines":[" "]},{"start":{"row":298,"column":121},"end":{"row":298,"column":122},"action":"insert","lines":[" "]},{"start":{"row":298,"column":126},"end":{"row":298,"column":127},"action":"insert","lines":[" "]},{"start":{"row":298,"column":215},"end":{"row":298,"column":216},"action":"remove","lines":[" "]},{"start":{"row":300,"column":121},"end":{"row":300,"column":122},"action":"insert","lines":[" "]},{"start":{"row":300,"column":126},"end":{"row":300,"column":127},"action":"insert","lines":[" "]},{"start":{"row":300,"column":214},"end":{"row":300,"column":215},"action":"remove","lines":[" "]},{"start":{"row":301,"column":119},"end":{"row":301,"column":120},"action":"insert","lines":[" "]},{"start":{"row":301,"column":124},"end":{"row":301,"column":125},"action":"insert","lines":[" "]},{"start":{"row":301,"column":133},"end":{"row":301,"column":134},"action":"insert","lines":[" "]},{"start":{"row":308,"column":37},"end":{"row":308,"column":38},"action":"insert","lines":[" "]},{"start":{"row":308,"column":42},"end":{"row":308,"column":43},"action":"insert","lines":[" "]},{"start":{"row":310,"column":14},"end":{"row":310,"column":15},"action":"insert","lines":[" "]},{"start":{"row":311,"column":14},"end":{"row":311,"column":15},"action":"insert","lines":[" "]},{"start":{"row":314,"column":0},"end":{"row":314,"column":8},"action":"insert","lines":["        "]},{"start":{"row":329,"column":0},"end":{"row":329,"column":8},"action":"insert","lines":["        "]},{"start":{"row":335,"column":0},"end":{"row":335,"column":8},"action":"insert","lines":["        "]},{"start":{"row":339,"column":0},"end":{"row":339,"column":8},"action":"insert","lines":["        "]},{"start":{"row":392,"column":0},"end":{"row":392,"column":8},"action":"insert","lines":["        "]},{"start":{"row":421,"column":0},"end":{"row":421,"column":4},"action":"insert","lines":["    "]},{"start":{"row":422,"column":0},"end":{"row":422,"column":4},"action":"insert","lines":["    "]},{"start":{"row":423,"column":0},"end":{"row":423,"column":4},"action":"insert","lines":["    "]},{"start":{"row":434,"column":3},"end":{"row":435,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":6,"column":9},"end":{"row":6,"column":18},"action":"insert","lines":["createObj"],"id":17}],[{"start":{"row":6,"column":18},"end":{"row":6,"column":19},"action":"insert","lines":[" "],"id":18}],[{"start":{"row":6,"column":19},"end":{"row":6,"column":32},"action":"insert","lines":["getAttrByName"],"id":19}],[{"start":{"row":6,"column":32},"end":{"row":6,"column":33},"action":"insert","lines":[" "],"id":20}],[{"start":{"row":59,"column":57},"end":{"row":59,"column":58},"action":"insert","lines":[";"],"id":21}],[{"start":{"row":94,"column":59},"end":{"row":94,"column":60},"action":"insert","lines":[";"],"id":34}],[{"start":{"row":101,"column":56},"end":{"row":101,"column":57},"action":"insert","lines":[";"],"id":35}],[{"start":{"row":62,"column":20},"end":{"row":62,"column":21},"action":"remove","lines":["v"],"id":36}],[{"start":{"row":62,"column":20},"end":{"row":62,"column":21},"action":"remove","lines":["a"],"id":37}],[{"start":{"row":62,"column":20},"end":{"row":62,"column":21},"action":"remove","lines":["r"],"id":38}],[{"start":{"row":62,"column":20},"end":{"row":62,"column":21},"action":"remove","lines":[" "],"id":39}],[{"start":{"row":76,"column":20},"end":{"row":76,"column":21},"action":"remove","lines":["v"],"id":40}],[{"start":{"row":76,"column":20},"end":{"row":76,"column":21},"action":"remove","lines":["a"],"id":41}],[{"start":{"row":76,"column":20},"end":{"row":76,"column":21},"action":"remove","lines":["r"],"id":42}],[{"start":{"row":76,"column":20},"end":{"row":76,"column":21},"action":"remove","lines":[" "],"id":43}],[{"start":{"row":76,"column":54},"end":{"row":76,"column":55},"action":"insert","lines":[";"],"id":44}],[{"start":{"row":78,"column":24},"end":{"row":78,"column":25},"action":"remove","lines":["v"],"id":45}],[{"start":{"row":78,"column":24},"end":{"row":78,"column":25},"action":"remove","lines":["a"],"id":46}],[{"start":{"row":78,"column":24},"end":{"row":78,"column":25},"action":"remove","lines":["r"],"id":47}],[{"start":{"row":78,"column":24},"end":{"row":78,"column":25},"action":"remove","lines":[" "],"id":48}],[{"start":{"row":83,"column":20},"end":{"row":83,"column":21},"action":"remove","lines":["v"],"id":49}],[{"start":{"row":83,"column":20},"end":{"row":83,"column":21},"action":"remove","lines":["a"],"id":50}],[{"start":{"row":83,"column":20},"end":{"row":83,"column":21},"action":"remove","lines":["r"],"id":51}],[{"start":{"row":83,"column":20},"end":{"row":83,"column":21},"action":"remove","lines":[" "],"id":52}],[{"start":{"row":83,"column":51},"end":{"row":83,"column":52},"action":"insert","lines":[";"],"id":53}],[{"start":{"row":85,"column":24},"end":{"row":85,"column":25},"action":"remove","lines":["v"],"id":54}],[{"start":{"row":85,"column":24},"end":{"row":85,"column":25},"action":"remove","lines":["a"],"id":55}],[{"start":{"row":85,"column":24},"end":{"row":85,"column":25},"action":"remove","lines":["r"],"id":56}],[{"start":{"row":85,"column":24},"end":{"row":85,"column":25},"action":"remove","lines":[" "],"id":57}],[{"start":{"row":94,"column":20},"end":{"row":94,"column":21},"action":"remove","lines":["v"],"id":58}],[{"start":{"row":94,"column":20},"end":{"row":94,"column":21},"action":"remove","lines":["a"],"id":59}],[{"start":{"row":94,"column":20},"end":{"row":94,"column":21},"action":"remove","lines":["r"],"id":60}],[{"start":{"row":94,"column":20},"end":{"row":94,"column":21},"action":"remove","lines":[" "],"id":61}],[{"start":{"row":96,"column":24},"end":{"row":96,"column":25},"action":"remove","lines":["v"],"id":62}],[{"start":{"row":96,"column":24},"end":{"row":96,"column":25},"action":"remove","lines":["a"],"id":63}],[{"start":{"row":96,"column":24},"end":{"row":96,"column":25},"action":"remove","lines":["r"],"id":64}],[{"start":{"row":96,"column":24},"end":{"row":96,"column":25},"action":"remove","lines":[" "],"id":65}],[{"start":{"row":101,"column":20},"end":{"row":101,"column":21},"action":"remove","lines":["v"],"id":66}],[{"start":{"row":101,"column":20},"end":{"row":101,"column":21},"action":"remove","lines":["a"],"id":67}],[{"start":{"row":101,"column":20},"end":{"row":101,"column":21},"action":"remove","lines":["r"],"id":68}],[{"start":{"row":101,"column":20},"end":{"row":101,"column":21},"action":"remove","lines":[" "],"id":69}],[{"start":{"row":103,"column":24},"end":{"row":103,"column":25},"action":"remove","lines":["v"],"id":70}],[{"start":{"row":103,"column":24},"end":{"row":103,"column":25},"action":"remove","lines":["a"],"id":71}],[{"start":{"row":103,"column":24},"end":{"row":103,"column":25},"action":"remove","lines":["r"],"id":72}],[{"start":{"row":103,"column":24},"end":{"row":103,"column":25},"action":"remove","lines":[" "],"id":73}],[{"start":{"row":6,"column":62},"end":{"row":6,"column":70},"action":"remove","lines":["Campaign"],"id":74}],[{"start":{"row":6,"column":62},"end":{"row":6,"column":63},"action":"remove","lines":[" "],"id":75}],[{"start":{"row":0,"column":0},"end":{"row":435,"column":0},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global createObj getAttrByName spawnFxWithDefinition getObj state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.3',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.2',","        /*--------","        TOKEN HANDLER","        --------*/","        handleToken = function(obj, prev) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","                //CHECK BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                var prevValue = prev[bar + \"_value\"];","                if (isNaN(maxValue) && isNaN(curValue)) return;","                //CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","                //SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") PlayDeath(state.HealthColors.auraDeadFX);","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","                //PERCENTAGE OFF------------","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","                //MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                if (oCharacter !== undefined) {","                    if (getAttrByName(oCharacter.id, 'USECOLOR') === undefined) CreateAttrib(oCharacter);","                    var UseAuraAtt = findObjs({","                        name: \"USECOLOR\",","                        _type: \"attribute\",","                        characterid: oCharacter.id","                    }, {","                        caseInsensitive: true","                    })[0];","                    var UseAura = UseAuraAtt.get(\"current\").toUpperCase();","                    if (UseAura != \"YES\" && UseAura != \"NO\") {","                        UseAuraAtt.set('current', \"YES\");","                        var name = oCharacter.get('name');","                        GMW(name + \": USECOLOR NOT SET TO YES or NO, SETTING TO YES\");","                    }","                    UseAura = UseAuraAtt.get(\"current\").toUpperCase();","                    if (UseAura == \"NO\") return;","                }","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                var GM = '';","                var PC = '';","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","                    GM = state.HealthColors.GM_PCNames;","                    if (GM != 'Off') {","                        GM = (GM == \"Yes\") ? true : false;","                        obj.set({","                            'showname': GM","                        });","                    }","                    PC = state.HealthColors.PCNames;","                    if (PC != 'Off') {","                        PC = (PC == \"Yes\") ? true : false;","                        obj.set({","                            'showplayers_name': PC","                        });","                    }","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    GM = state.HealthColors.GM_NPCNames;","                    if (GM != 'Off') {","                        GM = (GM == \"Yes\") ? true : false;","                        obj.set({","                            'showname': GM","                        });","                    }","                    PC = state.HealthColors.NPCNames;","                    if (PC != 'Off') {","                        PC = (PC == \"Yes\") ? true : false;","                        obj.set({","                            'showplayers_name': PC","                        });","                    }","                }","                //SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","                //SPURT FX------------","                if (state.HealthColors.FX == true) {","                    if (curValue == prevValue || prevValue == \"\") return;","                    var size = obj.get(\"height\");","                    var multi = size / 70;","                    var StartColor = [150, 0, 0, 1.0];","                    var EndColor = [255, 0, 0, 0];","                    if (curValue > prevValue && prevValue !== \"\") {","                        StartColor = [0, 255, 0, 1.0];","                        EndColor = [255, 255, 255, 0];","                    }","                    var HITS = {","                        \"maxParticles\": 50,","                        \"duration\": 50,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 25,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": StartColor,","                        \"endColour\": EndColor,","                    };","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","        /*--------","        CHAT MESSAGE","        --------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","        /*--------","        FUNCTIONS","        --------*/","        //WHISPER GM------------","        GMW = function(text) {","            sendChat('HealthColors', \"/w GM <br><b> \" + text + \"</b>\");","        },","        //DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 50);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","        //CREATE USECOLOR ATTR------------","        CreateAttrib = function(oCharacter) {","            log(\"Creating USECOLOR\");","            createObj(\"attribute\", {","                name: 'USECOLOR',","                current: 'YES',","                characterid: oCharacter.id","            });","        },","        //SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","            });","        },","        //HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; font-size: 9pt; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var disable = \"#D6D6D6\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; font-size: 9pt; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + '</u><br>' + //--","                'Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{Bar|1|2|3}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'Global GM Sees NPC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.GM_NPCNames, off, disable) + ';\" href=\"!aura gmnpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.GM_NPCNames + '</a><br>' + //---","                'Global GM Sees PC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.GM_PCNames, off, disable) + ';\" href=\"!aura gmpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.GM_PCNames + '</a><br>' + //--","                '<hr>' + //--","                ' Global PC Sees NPC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.NPCNames, off, disable) + ';\" href=\"!aura pcnpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.NPCNames + '</a><br>' + //--","                ' Global PC Sees PC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.PCNames, off, disable) + ';\" href=\"!aura pcpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.PCNames + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        ButtonColor = function(state, off, disable) {","            var color;","            if (state == \"No\") color = off;","            if (state == \"Off\") color = disable;","            return color;","        },","        //REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","        //SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","        //RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","        //HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","        //CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = \"Yes\"; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = \"Yes\"; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = \"Yes\"; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = \"Yes\"; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","        };","    /*-------------","    RETURN OUTSIDE FUNCTIONS","    -----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""],"id":76},{"start":{"row":0,"column":0},"end":{"row":435,"column":0},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global createObj getAttrByName spawnFxWithDefinition getObj state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.4',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.3',","        /*--------","        TOKEN HANDLER","        --------*/","        handleToken = function(obj, prev) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","                //CHECK BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                var prevValue = prev[bar + \"_value\"];","                if (isNaN(maxValue) && isNaN(curValue)) return;","                //CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","                //SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") PlayDeath(state.HealthColors.auraDeadFX);","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","                //PERCENTAGE OFF------------","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","                //MONSTER OR PLAYER------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                if (oCharacter !== undefined) {","                    if (getAttrByName(oCharacter.id, 'USECOLOR') === undefined) CreateAttrib(oCharacter);","                    var UseAuraAtt = findObjs({","                        name: \"USECOLOR\",","                        _type: \"attribute\",","                        characterid: oCharacter.id","                    }, {","                        caseInsensitive: true","                    })[0];","                    var UseAura = UseAuraAtt.get(\"current\").toUpperCase();","                    if (UseAura != \"YES\" && UseAura != \"NO\") {","                        UseAuraAtt.set('current', \"YES\");","                        var name = oCharacter.get('name');","                        GMW(name + \": USECOLOR NOT SET TO YES or NO, SETTING TO YES\");","                    }","                    UseAura = UseAuraAtt.get(\"current\").toUpperCase();","                    if (UseAura == \"NO\") return;","                }","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                var GM = '';","                var PC = '';","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","                    GM = state.HealthColors.GM_PCNames;","                    if (GM != 'Off') {","                        GM = (GM == \"Yes\") ? true : false;","                        obj.set({","                            'showname': GM","                        });","                    }","                    PC = state.HealthColors.PCNames;","                    if (PC != 'Off') {","                        PC = (PC == \"Yes\") ? true : false;","                        obj.set({","                            'showplayers_name': PC","                        });","                    }","","                }","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    GM = state.HealthColors.GM_NPCNames;","                    if (GM != 'Off') {","                        GM = (GM == \"Yes\") ? true : false;","                        obj.set({","                            'showname': GM","                        });","                    }","                    PC = state.HealthColors.NPCNames;","                    if (PC != 'Off') {","                        PC = (PC == \"Yes\") ? true : false;","                        obj.set({","                            'showplayers_name': PC","                        });","                    }","                }","                //SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","                //SPURT FX------------","                if (state.HealthColors.FX == true) {","                    if (curValue == prevValue || prevValue == \"\") return;","                    var size = obj.get(\"height\");","                    var multi = size / 70;","                    var StartColor = [150, 0, 0, 1.0];","                    var EndColor = [255, 0, 0, 0];","                    if (curValue > prevValue && prevValue !== \"\") {","                        StartColor = [0, 255, 0, 1.0];","                        EndColor = [255, 255, 255, 0];","                    }","                    var HITS = {","                        \"maxParticles\": 50,","                        \"duration\": 50,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 25,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": StartColor,","                        \"endColour\": EndColor,","                    };","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","        /*--------","        CHAT MESSAGE","        --------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","        /*--------","        FUNCTIONS","        --------*/","        //WHISPER GM------------","        GMW = function(text) {","            sendChat('HealthColors', \"/w GM <br><b> \" + text + \"</b>\");","        },","        //DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 50);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","        //CREATE USECOLOR ATTR------------","        CreateAttrib = function(oCharacter) {","            log(\"Creating USECOLOR\");","            createObj(\"attribute\", {","                name: 'USECOLOR',","                current: 'YES',","                characterid: oCharacter.id","            });","        },","        //SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","            });","        },","        //HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; font-size: 9pt; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var disable = \"#D6D6D6\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; font-size: 9pt; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + '</u><br>' + //--","                'Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{Bar|1|2|3}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'Global GM Sees NPC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.GM_NPCNames, off, disable) + ';\" href=\"!aura gmnpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.GM_NPCNames + '</a><br>' + //---","                'Global GM Sees PC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.GM_PCNames, off, disable) + ';\" href=\"!aura gmpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.GM_PCNames + '</a><br>' + //--","                '<hr>' + //--","                ' Global PC Sees NPC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.NPCNames, off, disable) + ';\" href=\"!aura pcnpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.NPCNames + '</a><br>' + //--","                ' Global PC Sees PC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.PCNames, off, disable) + ';\" href=\"!aura pcpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.PCNames + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        ButtonColor = function(state, off, disable) {","            var color;","            if (state == \"No\") color = off;","            if (state == \"Off\") color = disable;","            return color;","        },","        //REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","        //SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","        //RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","        //HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","        //CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = \"Yes\"; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = \"Yes\"; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = \"Yes\"; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = \"Yes\"; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","        };","    /*-------------","    RETURN OUTSIDE FUNCTIONS","    -----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""]}]]},"ace":{"folds":[],"scrolltop":5263,"scrollleft":0,"selection":{"start":{"row":435,"column":0},"end":{"row":435,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":374,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1487200670291,"hash":"a132d6cdb52b4b62e93ef906cf81d43a5a37bef2"}