{"filter":false,"title":"HeathColors","tooltip":"/Public/HeathColors","undoManager":{"mark":99,"position":99,"stack":[[{"start":{"row":0,"column":0},"end":{"row":439,"column":0},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global createObj getAttrByName spawnFxWithDefinition getObj state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.0.4',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.3',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj, prev) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                var prevValue = prev[bar + \"_value\"];","                if (isNaN(maxValue) && isNaN(curValue)) return;","                //CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") PlayDeath(state.HealthColors.auraDeadFX);","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//PERCENTAGE OFF------------","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","//CHECK DISABLED TOKEN------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                if (oCharacter !== undefined) {","                    if (getAttrByName(oCharacter.id, 'USECOLOR') === undefined) CreateAttrib(oCharacter);","                    var UseAuraAtt = findObjs({","                        name: \"USECOLOR\",","                        _type: \"attribute\",","                        characterid: oCharacter.id","                    }, {","                        caseInsensitive: true","                    })[0];","                    var UseAura = UseAuraAtt.get(\"current\");","                    UseAura = UseAura.toString().toUpperCase();","                    if (UseAura != \"YES\" && UseAura != \"NO\") {","                        UseAuraAtt.set('current', \"YES\");","                        var name = oCharacter.get('name');","                        GMW(name + \": USECOLOR NOT SET TO YES or NO, SETTING TO YES\");","                    }","                    UseAura = UseAuraAtt.get(\"current\").toUpperCase();","                    if (UseAura == \"NO\") return;","                }","//CHECK MONSTER OR PLAYER------------","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","//IF PLAYER------------","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                var GM = '';","                var PC = '';","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","                    GM = state.HealthColors.GM_PCNames;","                    if (GM != 'Off') {","                        GM = (GM == \"Yes\") ? true : false;","                        obj.set({","                            'showname': GM","                        });","                    }","                    PC = state.HealthColors.PCNames;","                    if (PC != 'Off') {","                        PC = (PC == \"Yes\") ? true : false;","                        obj.set({","                            'showplayers_name': PC","                        });","                    }","","                }","//IF MONSTER------------","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    GM = state.HealthColors.GM_NPCNames;","                    if (GM != 'Off') {","                        GM = (GM == \"Yes\") ? true : false;","                        obj.set({","                            'showname': GM","                        });","                    }","                    PC = state.HealthColors.NPCNames;","                    if (PC != 'Off') {","                        PC = (PC == \"Yes\") ? true : false;","                        obj.set({","                            'showplayers_name': PC","                        });","                    }","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","//SPURT FX------------","                if (state.HealthColors.FX == true) {","                    if (curValue == prevValue || prevValue == \"\") return;","                    var size = obj.get(\"height\");","                    var multi = size / 70;","                    var StartColor = [150, 0, 0, 1.0];","                    var EndColor = [255, 0, 0, 0];","                    if (curValue > prevValue && prevValue !== \"\") {","                        StartColor = [0, 255, 0, 1.0];","                        EndColor = [255, 255, 255, 0];","                    }","                    var HITS = {","                        \"maxParticles\": 50,","                        \"duration\": 50,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 25,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": StartColor,","                        \"endColour\": EndColor,","                    };","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","/*--------","FUNCTIONS","--------*/","//WHISPER GM------------","        GMW = function(text) {","            sendChat('HealthColors', \"/w GM <br><b> \" + text + \"</b>\");","        },","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 50);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//CREATE USECOLOR ATTR------------","        CreateAttrib = function(oCharacter) {","            log(\"Creating USECOLOR\");","            createObj(\"attribute\", {","                name: 'USECOLOR',","                current: 'YES',","                characterid: oCharacter.id","            });","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"text-align:center; font-size: 9pt; width: 35px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var disable = \"#D6D6D6\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; font-size: 9pt; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>Version: ' + version + '</u><br>' + //--","                'Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{Bar|1|2|3}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                '<hr>' + //--","                'Global GM Sees NPC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.GM_NPCNames, off, disable) + ';\" href=\"!aura gmnpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.GM_NPCNames + '</a><br>' + //---","                'Global GM Sees PC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.GM_PCNames, off, disable) + ';\" href=\"!aura gmpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.GM_PCNames + '</a><br>' + //--","                '<hr>' + //--","                ' Global PC Sees NPC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.NPCNames, off, disable) + ';\" href=\"!aura pcnpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.NPCNames + '</a><br>' + //--","                ' Global PC Sees PC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.PCNames, off, disable) + ';\" href=\"!aura pcpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.PCNames + '</a><br>' + //--","                '<hr>' + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                '</div>');","        },","        ButtonColor = function(state, off, disable) {","            var color;","            if (state == \"No\") color = off;","            if (state == \"Off\") color = disable;","            return color;","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = \"Yes\"; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = \"Yes\"; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = \"Yes\"; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = \"Yes\"; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set aura size?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":473,"column":0},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/14/2017","*/","/*global createObj getAttrByName spawnFxWithDefinition getObj state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.1.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.3',","/*--------","TOKEN HANDLER","--------*/","        handleToken = function(obj, prev) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                var prevValue = prev[bar + \"_value\"];","                if (isNaN(maxValue) && isNaN(curValue)) return;","                //CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") PlayDeath(state.HealthColors.auraDeadFX);","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//PERCENTAGE OFF------------","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","//CHECK DISABLED TOKEN------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                if (oCharacter !== undefined) {","                    if (getAttrByName(oCharacter.id, 'USECOLOR') === undefined) CreateAttrib(oCharacter);","                    var UseAuraAtt = findObjs({","                        name: \"USECOLOR\",","                        _type: \"attribute\",","                        characterid: oCharacter.id","                    }, {","                        caseInsensitive: true","                    })[0];","                    var UseAura = UseAuraAtt.get(\"current\");","                    UseAura = UseAura.toString().toUpperCase();","                    if (UseAura != \"YES\" && UseAura != \"NO\") {","                        UseAuraAtt.set('current', \"YES\");","                        var name = oCharacter.get('name');","                        GMW(name + \": USECOLOR NOT SET TO YES or NO, SETTING TO YES\");","                    }","                    UseAura = UseAuraAtt.get(\"current\").toUpperCase();","                    if (UseAura == \"NO\") return;","                }","//CHECK MONSTER OR PLAYER------------","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","//IF PLAYER------------","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                var GM = '';","                var PC = '';","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","                    GM = state.HealthColors.GM_PCNames;","                    if (GM != 'Off') {","                        GM = (GM == \"Yes\") ? true : false;","                        obj.set({","                            'showname': GM","                        });","                    }","                    PC = state.HealthColors.PCNames;","                    if (PC != 'Off') {","                        PC = (PC == \"Yes\") ? true : false;","                        obj.set({","                            'showplayers_name': PC","                        });","                    }","","                }","//IF MONSTER------------","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    GM = state.HealthColors.GM_NPCNames;","                    if (GM != 'Off') {","                        GM = (GM == \"Yes\") ? true : false;","                        obj.set({","                            'showname': GM","                        });","                    }","                    PC = state.HealthColors.NPCNames;","                    if (PC != 'Off') {","                        PC = (PC == \"Yes\") ? true : false;","                        obj.set({","                            'showplayers_name': PC","                        });","                    }","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","//SPURT FX------------","                if (state.HealthColors.FX == true) {","                    var HealColor = HEXtoRGB(state.HealthColors.HealFX);","                    var HurtColor = HEXtoRGB(state.HealthColors.HurtFX);","                    if (curValue == prevValue || prevValue == \"\") return;","                    var size = obj.get(\"height\");","                    var multi = size / 70;","                    var StartColor = HurtColor;","                    var EndColor = [255, 0, 0, 0];","                    if (curValue > prevValue && prevValue !== \"\") {","                        StartColor = HealColor;","                        EndColor = [255, 255, 255, 0];","                    }","                    var HITS = {","                        \"maxParticles\": 50,","                        \"duration\": 50,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 25,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": StartColor,","                        \"endColour\": EndColor,","                    };","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","/*--------","CHAT MESSAGE","--------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        case \"HEAL\":","                            var UPPER = msgFormula[2];","                            UPPER = UPPER.toUpperCase();","                            state.HealthColors.HealFX = UPPER;","                            aurahelp();","                            break;","                        case \"HURT\":","                            var UPPER = msgFormula[2];","                            UPPER = UPPER.toUpperCase();","                            state.HealthColors.HurtFX = UPPER;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","/*--------","FUNCTIONS","--------*/","//WHISPER GM------------","        GMW = function(text) {","            sendChat('HealthColors', \"/w GM <br><b> \" + text + \"</b>\");","        },","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 50);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//CREATE USECOLOR ATTR------------","        CreateAttrib = function(oCharacter) {","            log(\"Creating USECOLOR\");","            createObj(\"attribute\", {","                name: 'USECOLOR',","                current: 'YES',","                characterid: oCharacter.id","            });","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"padding-top: 1px; text-align:center; font-size: 9pt; width: 45px; height: 14px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var disable = \"#D6D6D6\";","            var HR = \"<hr style='background-color: #000000; margin: 5px; border-width:0;color: #000000;height: 1px;'/>\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; font-size: 9pt; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>HealthColors Version: ' + version + '</u><br>' + //--","                HR + //--","                'Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{Bar|1|2|3}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                HR + //--","                'Global GM Sees NPC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.GM_NPCNames, off, disable) + ';\" href=\"!aura gmnpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.GM_NPCNames + '</a><br>' + //---","                'Global GM Sees PC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.GM_PCNames, off, disable) + ';\" href=\"!aura gmpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.GM_PCNames + '</a><br>' + //--","                HR + //--","                ' Global PC Sees NPC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.NPCNames, off, disable) + ';\" href=\"!aura pcnpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.NPCNames + '</a><br>' + //--","                ' Global PC Sees PC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.PCNames, off, disable) + ';\" href=\"!aura pcpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.PCNames + '</a><br>' + //--","                HR + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'HealFX Color: <a ' + style + 'background-color:#' + state.HealthColors.HealFX + ';\"\"href=\"!aura HEAL ?{Sound Name?|00FF00}\">' + state.HealthColors.HealFX + '</a><br>' + //--","                'HurtFX Color: <a ' + style + 'background-color:#' + state.HealthColors.HurtFX + ';\"\"href=\"!aura HURT ?{Sound Name?|FF0000}\">' + state.HealthColors.HurtFX + '</a><br>' + //--","                HR + //--","                '</div>');","        },","        ButtonColor = function(state, off, disable) {","            var color;","            if (state == \"No\") color = off;","            if (state == \"Off\") color = disable;","            return color;","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//HEX TO RGB------------","        HEXtoRGB = function(hex){","            let parts=hex.match(/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/);","            if(parts){","                let rgb= _.chain(parts)","                    .rest()","                    .map((d)=>parseInt(d,16))","                    .value();","                rgb.push(1.0);","                return rgb;","            }","            return [0,0,0,1.0];","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = \"Yes\"; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = \"Yes\"; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = \"Yes\"; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = \"Yes\"; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set FX ON/OFF?","            if (_.isUndefined(state.HealthColors.HealFX)) state.HealthColors.HealFX = \"FFFF00\"; //set FX HEAL COLOR","            if (_.isUndefined(state.HealthColors.HurtFX)) state.HealthColors.HurtFX = \"FF0000\"; //set FX HURT COLOR?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""]}],[{"start":{"row":12,"column":0},"end":{"row":12,"column":8},"action":"insert","lines":["        "],"id":3},{"start":{"row":13,"column":0},"end":{"row":13,"column":8},"action":"insert","lines":["        "]},{"start":{"row":14,"column":0},"end":{"row":14,"column":8},"action":"insert","lines":["        "]},{"start":{"row":23,"column":0},"end":{"row":23,"column":16},"action":"insert","lines":["                "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":16},"action":"insert","lines":["                "]},{"start":{"row":40,"column":0},"end":{"row":40,"column":16},"action":"insert","lines":["                "]},{"start":{"row":45,"column":0},"end":{"row":45,"column":16},"action":"insert","lines":["                "]},{"start":{"row":66,"column":0},"end":{"row":66,"column":16},"action":"insert","lines":["                "]},{"start":{"row":68,"column":0},"end":{"row":68,"column":16},"action":"insert","lines":["                "]},{"start":{"row":95,"column":0},"end":{"row":95,"column":16},"action":"insert","lines":["                "]},{"start":{"row":113,"column":0},"end":{"row":113,"column":16},"action":"insert","lines":["                "]},{"start":{"row":120,"column":0},"end":{"row":120,"column":16},"action":"insert","lines":["                "]},{"start":{"row":156,"column":0},"end":{"row":156,"column":8},"action":"insert","lines":["        "]},{"start":{"row":157,"column":0},"end":{"row":157,"column":8},"action":"insert","lines":["        "]},{"start":{"row":158,"column":0},"end":{"row":158,"column":8},"action":"insert","lines":["        "]},{"start":{"row":252,"column":0},"end":{"row":252,"column":8},"action":"insert","lines":["        "]},{"start":{"row":253,"column":0},"end":{"row":253,"column":8},"action":"insert","lines":["        "]},{"start":{"row":254,"column":0},"end":{"row":254,"column":8},"action":"insert","lines":["        "]},{"start":{"row":255,"column":0},"end":{"row":255,"column":8},"action":"insert","lines":["        "]},{"start":{"row":259,"column":0},"end":{"row":259,"column":8},"action":"insert","lines":["        "]},{"start":{"row":275,"column":0},"end":{"row":275,"column":8},"action":"insert","lines":["        "]},{"start":{"row":284,"column":0},"end":{"row":284,"column":8},"action":"insert","lines":["        "]},{"start":{"row":297,"column":0},"end":{"row":297,"column":8},"action":"insert","lines":["        "]},{"start":{"row":337,"column":0},"end":{"row":337,"column":8},"action":"insert","lines":["        "]},{"start":{"row":352,"column":0},"end":{"row":352,"column":8},"action":"insert","lines":["        "]},{"start":{"row":358,"column":0},"end":{"row":358,"column":8},"action":"insert","lines":["        "]},{"start":{"row":359,"column":32},"end":{"row":359,"column":33},"action":"insert","lines":[" "]},{"start":{"row":360,"column":21},"end":{"row":360,"column":22},"action":"insert","lines":[" "]},{"start":{"row":360,"column":23},"end":{"row":360,"column":24},"action":"insert","lines":[" "]},{"start":{"row":361,"column":14},"end":{"row":361,"column":15},"action":"insert","lines":[" "]},{"start":{"row":361,"column":22},"end":{"row":361,"column":23},"action":"insert","lines":[" "]},{"start":{"row":362,"column":23},"end":{"row":362,"column":24},"action":"insert","lines":[" "]},{"start":{"row":364,"column":28},"end":{"row":364,"column":29},"action":"insert","lines":[" "]},{"start":{"row":364,"column":31},"end":{"row":364,"column":32},"action":"insert","lines":[" "]},{"start":{"row":364,"column":43},"end":{"row":364,"column":44},"action":"insert","lines":[" "]},{"start":{"row":369,"column":22},"end":{"row":369,"column":23},"action":"insert","lines":[" "]},{"start":{"row":369,"column":25},"end":{"row":369,"column":26},"action":"insert","lines":[" "]},{"start":{"row":369,"column":28},"end":{"row":369,"column":29},"action":"insert","lines":[" "]},{"start":{"row":371,"column":0},"end":{"row":371,"column":8},"action":"insert","lines":["        "]},{"start":{"row":375,"column":0},"end":{"row":375,"column":8},"action":"insert","lines":["        "]},{"start":{"row":428,"column":0},"end":{"row":428,"column":8},"action":"insert","lines":["        "]},{"start":{"row":459,"column":0},"end":{"row":459,"column":4},"action":"insert","lines":["    "]},{"start":{"row":460,"column":0},"end":{"row":460,"column":4},"action":"insert","lines":["    "]},{"start":{"row":461,"column":0},"end":{"row":461,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":461,"column":0},"end":{"row":461,"column":3},"action":"remove","lines":["   "],"id":4}],[{"start":{"row":461,"column":0},"end":{"row":461,"column":1},"action":"remove","lines":[" "],"id":5}],[{"start":{"row":460,"column":0},"end":{"row":460,"column":4},"action":"remove","lines":["    "],"id":7}],[{"start":{"row":459,"column":0},"end":{"row":459,"column":4},"action":"remove","lines":["    "],"id":8}],[{"start":{"row":428,"column":0},"end":{"row":428,"column":8},"action":"remove","lines":["        "],"id":9}],[{"start":{"row":375,"column":0},"end":{"row":375,"column":8},"action":"remove","lines":["        "],"id":10}],[{"start":{"row":371,"column":0},"end":{"row":371,"column":8},"action":"remove","lines":["        "],"id":11}],[{"start":{"row":358,"column":0},"end":{"row":358,"column":8},"action":"remove","lines":["        "],"id":12}],[{"start":{"row":352,"column":0},"end":{"row":352,"column":8},"action":"remove","lines":["        "],"id":13}],[{"start":{"row":337,"column":0},"end":{"row":337,"column":8},"action":"remove","lines":["        "],"id":14}],[{"start":{"row":297,"column":0},"end":{"row":297,"column":8},"action":"remove","lines":["        "],"id":15}],[{"start":{"row":284,"column":0},"end":{"row":284,"column":7},"action":"remove","lines":["       "],"id":16}],[{"start":{"row":284,"column":0},"end":{"row":284,"column":1},"action":"remove","lines":[" "],"id":17}],[{"start":{"row":275,"column":0},"end":{"row":275,"column":8},"action":"remove","lines":["        "],"id":18}],[{"start":{"row":259,"column":0},"end":{"row":259,"column":8},"action":"remove","lines":["        "],"id":19}],[{"start":{"row":255,"column":0},"end":{"row":255,"column":7},"action":"remove","lines":["       "],"id":20}],[{"start":{"row":255,"column":0},"end":{"row":255,"column":1},"action":"remove","lines":[" "],"id":21}],[{"start":{"row":254,"column":0},"end":{"row":254,"column":8},"action":"remove","lines":["        "],"id":22}],[{"start":{"row":253,"column":0},"end":{"row":253,"column":8},"action":"remove","lines":["        "],"id":23}],[{"start":{"row":252,"column":0},"end":{"row":252,"column":8},"action":"remove","lines":["        "],"id":24}],[{"start":{"row":158,"column":0},"end":{"row":158,"column":7},"action":"remove","lines":["       "],"id":25}],[{"start":{"row":157,"column":0},"end":{"row":157,"column":8},"action":"remove","lines":["        "],"id":26}],[{"start":{"row":156,"column":0},"end":{"row":156,"column":8},"action":"remove","lines":["        "],"id":27}],[{"start":{"row":120,"column":0},"end":{"row":120,"column":16},"action":"remove","lines":["                "],"id":28}],[{"start":{"row":113,"column":0},"end":{"row":113,"column":16},"action":"remove","lines":["                "],"id":29}],[{"start":{"row":95,"column":0},"end":{"row":95,"column":16},"action":"remove","lines":["                "],"id":30}],[{"start":{"row":68,"column":0},"end":{"row":68,"column":16},"action":"remove","lines":["                "],"id":31}],[{"start":{"row":66,"column":0},"end":{"row":66,"column":16},"action":"remove","lines":["                "],"id":32}],[{"start":{"row":45,"column":0},"end":{"row":45,"column":16},"action":"remove","lines":["                "],"id":33}],[{"start":{"row":40,"column":0},"end":{"row":40,"column":16},"action":"remove","lines":["                "],"id":34}],[{"start":{"row":32,"column":0},"end":{"row":32,"column":16},"action":"remove","lines":["                "],"id":35}],[{"start":{"row":29,"column":0},"end":{"row":29,"column":16},"action":"remove","lines":["                "],"id":36}],[{"start":{"row":23,"column":0},"end":{"row":23,"column":16},"action":"remove","lines":["                "],"id":37}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":7},"action":"remove","lines":["       "],"id":38}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":1},"action":"remove","lines":[" "],"id":39}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":7},"action":"remove","lines":["       "],"id":40}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":1},"action":"remove","lines":[" "],"id":41}],[{"start":{"row":12,"column":0},"end":{"row":12,"column":8},"action":"remove","lines":["        "],"id":42}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":13},"action":"remove","lines":["TOKEN HANDLER"],"id":43},{"start":{"row":13,"column":0},"end":{"row":13,"column":1},"action":"insert","lines":["O"]}],[{"start":{"row":13,"column":1},"end":{"row":13,"column":2},"action":"insert","lines":["n"],"id":44}],[{"start":{"row":13,"column":2},"end":{"row":13,"column":3},"action":"insert","lines":[" "],"id":45}],[{"start":{"row":13,"column":3},"end":{"row":13,"column":4},"action":"insert","lines":["T"],"id":46}],[{"start":{"row":13,"column":3},"end":{"row":13,"column":4},"action":"remove","lines":["T"],"id":47}],[{"start":{"row":13,"column":2},"end":{"row":13,"column":3},"action":"remove","lines":[" "],"id":48}],[{"start":{"row":13,"column":1},"end":{"row":13,"column":2},"action":"remove","lines":["n"],"id":49}],[{"start":{"row":13,"column":1},"end":{"row":13,"column":2},"action":"insert","lines":["N"],"id":50}],[{"start":{"row":13,"column":2},"end":{"row":13,"column":3},"action":"insert","lines":[" "],"id":51}],[{"start":{"row":13,"column":3},"end":{"row":13,"column":4},"action":"insert","lines":["O"],"id":52}],[{"start":{"row":13,"column":3},"end":{"row":13,"column":4},"action":"remove","lines":["O"],"id":53}],[{"start":{"row":13,"column":3},"end":{"row":13,"column":4},"action":"insert","lines":["T"],"id":54}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":5},"action":"insert","lines":["O"],"id":55}],[{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"insert","lines":["K"],"id":56}],[{"start":{"row":13,"column":6},"end":{"row":13,"column":7},"action":"insert","lines":["E"],"id":57}],[{"start":{"row":13,"column":7},"end":{"row":13,"column":8},"action":"insert","lines":["N"],"id":58}],[{"start":{"row":13,"column":8},"end":{"row":13,"column":9},"action":"insert","lines":[" "],"id":59}],[{"start":{"row":13,"column":9},"end":{"row":13,"column":10},"action":"insert","lines":["U"],"id":60}],[{"start":{"row":13,"column":10},"end":{"row":13,"column":11},"action":"insert","lines":["P"],"id":61}],[{"start":{"row":13,"column":11},"end":{"row":13,"column":12},"action":"insert","lines":["D"],"id":62}],[{"start":{"row":13,"column":12},"end":{"row":13,"column":13},"action":"insert","lines":["A"],"id":63}],[{"start":{"row":13,"column":13},"end":{"row":13,"column":14},"action":"insert","lines":["T"],"id":64}],[{"start":{"row":13,"column":14},"end":{"row":13,"column":15},"action":"insert","lines":["E"],"id":65}],[{"start":{"row":4,"column":16},"end":{"row":4,"column":17},"action":"remove","lines":["4"],"id":66}],[{"start":{"row":4,"column":15},"end":{"row":4,"column":16},"action":"remove","lines":["1"],"id":67}],[{"start":{"row":4,"column":15},"end":{"row":4,"column":16},"action":"insert","lines":["2"],"id":68}],[{"start":{"row":4,"column":16},"end":{"row":4,"column":17},"action":"insert","lines":["3"],"id":69}],[{"start":{"row":254,"column":10},"end":{"row":255,"column":0},"action":"insert","lines":["",""],"id":70}],[{"start":{"row":255,"column":0},"end":{"row":256,"column":0},"action":"remove","lines":["",""],"id":71}],[{"start":{"row":330,"column":10},"end":{"row":331,"column":0},"action":"insert","lines":["",""],"id":72},{"start":{"row":331,"column":0},"end":{"row":331,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":331,"column":0},"end":{"row":331,"column":24},"action":"insert","lines":["//REMOVE ALL------------"],"id":73}],[{"start":{"row":331,"column":2},"end":{"row":331,"column":12},"action":"remove","lines":["REMOVE ALL"],"id":74},{"start":{"row":331,"column":2},"end":{"row":331,"column":3},"action":"insert","lines":["O"]}],[{"start":{"row":331,"column":3},"end":{"row":331,"column":4},"action":"insert","lines":["F"],"id":75}],[{"start":{"row":331,"column":4},"end":{"row":331,"column":5},"action":"insert","lines":["F"],"id":76}],[{"start":{"row":331,"column":5},"end":{"row":331,"column":6},"action":"insert","lines":[" "],"id":77}],[{"start":{"row":331,"column":6},"end":{"row":331,"column":7},"action":"insert","lines":["C"],"id":78}],[{"start":{"row":331,"column":7},"end":{"row":331,"column":8},"action":"insert","lines":["O"],"id":79}],[{"start":{"row":331,"column":8},"end":{"row":331,"column":9},"action":"insert","lines":["L"],"id":80}],[{"start":{"row":331,"column":8},"end":{"row":331,"column":9},"action":"remove","lines":["L"],"id":81}],[{"start":{"row":331,"column":7},"end":{"row":331,"column":8},"action":"remove","lines":["O"],"id":82}],[{"start":{"row":331,"column":6},"end":{"row":331,"column":7},"action":"remove","lines":["C"],"id":83}],[{"start":{"row":331,"column":6},"end":{"row":331,"column":7},"action":"insert","lines":["B"],"id":84}],[{"start":{"row":331,"column":7},"end":{"row":331,"column":8},"action":"insert","lines":["U"],"id":85}],[{"start":{"row":331,"column":8},"end":{"row":331,"column":9},"action":"insert","lines":["T"],"id":86}],[{"start":{"row":331,"column":9},"end":{"row":331,"column":10},"action":"insert","lines":["T"],"id":87}],[{"start":{"row":331,"column":10},"end":{"row":331,"column":11},"action":"insert","lines":["O"],"id":88}],[{"start":{"row":331,"column":11},"end":{"row":331,"column":12},"action":"insert","lines":["N"],"id":89}],[{"start":{"row":331,"column":12},"end":{"row":331,"column":13},"action":"insert","lines":[" "],"id":90}],[{"start":{"row":331,"column":13},"end":{"row":331,"column":14},"action":"insert","lines":["C"],"id":91}],[{"start":{"row":331,"column":14},"end":{"row":331,"column":15},"action":"insert","lines":["O"],"id":92}],[{"start":{"row":331,"column":15},"end":{"row":331,"column":16},"action":"insert","lines":["L"],"id":93}],[{"start":{"row":331,"column":16},"end":{"row":331,"column":17},"action":"insert","lines":["O"],"id":94}],[{"start":{"row":331,"column":17},"end":{"row":331,"column":18},"action":"insert","lines":["R"],"id":95}],[{"start":{"row":331,"column":18},"end":{"row":331,"column":19},"action":"insert","lines":["S"],"id":96}],[{"start":{"row":331,"column":31},"end":{"row":331,"column":39},"action":"remove","lines":["        "],"id":97}],[{"start":{"row":453,"column":87},"end":{"row":453,"column":89},"action":"remove","lines":["FF"],"id":98},{"start":{"row":453,"column":87},"end":{"row":453,"column":88},"action":"insert","lines":["0"]}],[{"start":{"row":453,"column":88},"end":{"row":453,"column":89},"action":"insert","lines":["0"],"id":99}],[{"start":{"row":121,"column":16},"end":{"row":121,"column":50},"action":"remove","lines":["if (state.HealthColors.FX == true)"],"id":100},{"start":{"row":121,"column":16},"end":{"row":121,"column":83},"action":"insert","lines":["if (state.HealthColors.FX == true && obj.get(\"layer\") == \"objects\")"]}],[{"start":{"row":4,"column":16},"end":{"row":4,"column":17},"action":"remove","lines":["3"],"id":101},{"start":{"row":4,"column":16},"end":{"row":4,"column":17},"action":"insert","lines":["4"]}],[{"start":{"row":0,"column":0},"end":{"row":474,"column":0},"action":"remove","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/24/2017","*/","/*global createObj getAttrByName spawnFxWithDefinition getObj state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.1.0',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.3',","/*--------","ON TOKEN UPDATE","--------*/","        handleToken = function(obj, prev) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK BARS ------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                var prevValue = prev[bar + \"_value\"];","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var percReal = Math.round((curValue / maxValue) * 100);","                var perc = Math.round((curValue / maxValue) * 120);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") PlayDeath(state.HealthColors.auraDeadFX);","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//PERCENTAGE OFF------------","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","//CHECK DISABLED TOKEN------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                if (oCharacter !== undefined) {","                    if (getAttrByName(oCharacter.id, 'USECOLOR') === undefined) CreateAttrib(oCharacter);","                    var UseAuraAtt = findObjs({","                        name: \"USECOLOR\",","                        _type: \"attribute\",","                        characterid: oCharacter.id","                    }, {","                        caseInsensitive: true","                    })[0];","                    var UseAura = UseAuraAtt.get(\"current\");","                    UseAura = UseAura.toString().toUpperCase();","                    if (UseAura != \"YES\" && UseAura != \"NO\") {","                        UseAuraAtt.set('current', \"YES\");","                        var name = oCharacter.get('name');","                        GMW(name + \": USECOLOR NOT SET TO YES or NO, SETTING TO YES\");","                    }","                    UseAura = UseAuraAtt.get(\"current\").toUpperCase();","                    if (UseAura == \"NO\") return;","                }","//CHECK MONSTER OR PLAYER------------","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","//IF PLAYER------------","                var markerColor = newColor(perc);","                var pColor = '#ffffff';","                var GM = '';","                var PC = '';","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","                    GM = state.HealthColors.GM_PCNames;","                    if (GM != 'Off') {","                        GM = (GM == \"Yes\") ? true : false;","                        obj.set({","                            'showname': GM","                        });","                    }","                    PC = state.HealthColors.PCNames;","                    if (PC != 'Off') {","                        PC = (PC == \"Yes\") ? true : false;","                        obj.set({","                            'showplayers_name': PC","                        });","                    }","","                }","//IF MONSTER------------","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    GM = state.HealthColors.GM_NPCNames;","                    if (GM != 'Off') {","                        GM = (GM == \"Yes\") ? true : false;","                        obj.set({","                            'showname': GM","                        });","                    }","                    PC = state.HealthColors.NPCNames;","                    if (PC != 'Off') {","                        PC = (PC == \"Yes\") ? true : false;","                        obj.set({","                            'showplayers_name': PC","                        });","                    }","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({","                    'tint_color': markerColor,","                });","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","//SPURT FX------------","                if (state.HealthColors.FX == true && obj.get(\"layer\") == \"objects\") {","                    var HealColor = HEXtoRGB(state.HealthColors.HealFX);","                    var HurtColor = HEXtoRGB(state.HealthColors.HurtFX);","                    if (curValue == prevValue || prevValue == \"\") return;","                    var size = obj.get(\"height\");","                    var multi = size / 70;","                    var StartColor = HurtColor;","                    var EndColor = [255, 0, 0, 0];","                    if (curValue > prevValue && prevValue !== \"\") {","                        StartColor = HealColor;","                        EndColor = [255, 255, 255, 0];","                    }","                    var HITS = {","                        \"maxParticles\": 50,","                        \"duration\": 50,","                        \"size\": size / 10,","                        \"sizeRandom\": 3,","                        \"lifeSpan\": 25,","                        \"lifeSpanRandom\": 5,","                        \"speed\": multi * 8,","                        \"speedRandom\": multi * 2,","                        \"gravity\": {","                            \"x\": multi * 0.01,","                            \"y\": multi * 0.65","                        },","                        \"angle\": 270,","                        \"angleRandom\": 15,","                        \"emissionRate\": 5,","                        \"startColour\": StartColor,","                        \"endColour\": EndColor,","                    };","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","/*--------","CHAT MESSAGE"," --------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        case \"HEAL\":","                            var UPPER = msgFormula[2];","                            UPPER = UPPER.toUpperCase();","                            state.HealthColors.HealFX = UPPER;","                            aurahelp();","                            break;","                        case \"HURT\":","                            var UPPER = msgFormula[2];","                            UPPER = UPPER.toUpperCase();","                            state.HealthColors.HurtFX = UPPER;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","/*--------","FUNCTIONS","--------*/","//WHISPER GM------------","        GMW = function(text) {","            sendChat('HealthColors', \"/w GM <br><b> \" + text + \"</b>\");","        },","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({","                type: 'jukeboxtrack',","                title: trackname","            })[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 50);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//CREATE USECOLOR ATTR------------","        CreateAttrib = function(oCharacter) {","            log(\"Creating USECOLOR\");","            createObj(\"attribute\", {","                name: 'USECOLOR',","                current: 'YES',","                characterid: oCharacter.id","            });","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"http://worldcitizenfinancial.com/wp-content/uploads/2014/07/Light-Blue-Gradient-Texture-11-1024x576.jpg\";","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"padding-top: 1px; text-align:center; font-size: 9pt; width: 45px; height: 14px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var disable = \"#D6D6D6\";","            var HR = \"<hr style='background-color: #000000; margin: 5px; border-width:0;color: #000000;height: 1px;'/>\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; font-size: 9pt; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; background-image: url(' + img + '); color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>HealthColors Version: ' + version + '</u><br>' + //--","                HR + //--","                'Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{Bar|1|2|3}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                HR + //--","                'Global GM Sees NPC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.GM_NPCNames, off, disable) + ';\" href=\"!aura gmnpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.GM_NPCNames + '</a><br>' + //---","                'Global GM Sees PC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.GM_PCNames, off, disable) + ';\" href=\"!aura gmpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.GM_PCNames + '</a><br>' + //--","                HR + //--","                ' Global PC Sees NPC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.NPCNames, off, disable) + ';\" href=\"!aura pcnpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.NPCNames + '</a><br>' + //--","                ' Global PC Sees PC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.PCNames, off, disable) + ';\" href=\"!aura pcpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.PCNames + '</a><br>' + //--","                HR + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'HealFX Color: <a ' + style + 'background-color:#' + state.HealthColors.HealFX + ';\"\"href=\"!aura HEAL ?{Sound Name?|00FF00}\">' + state.HealthColors.HealFX + '</a><br>' + //--","                'HurtFX Color: <a ' + style + 'background-color:#' + state.HealthColors.HurtFX + ';\"\"href=\"!aura HURT ?{Sound Name?|FF0000}\">' + state.HealthColors.HurtFX + '</a><br>' + //--","                HR + //--","                '</div>');","        },","//OFF BUTTON COLORS------------","        ButtonColor = function(state, off, disable) {","            var color;","            if (state == \"No\") color = off;","            if (state == \"Off\") color = disable;","            return color;","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({","                    'tint_color': \"transparent\",","                });","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//SET TOKEN COLORS------------","        newColor = function(ratio) {","            var color = hsl2rgb(ratio, 100, 50);","            var hex = rgbToHex(color.r, color.g, color.b);","            return (hex);","        },","//HEX TO RGB------------","        HEXtoRGB = function(hex) {","            let parts = hex.match(/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/);","            if (parts) {","                let rgb = _.chain(parts)","                    .rest()","                    .map((d) => parseInt(d, 16))","                    .value();","                rgb.push(1.0);","                return rgb;","            }","            return [0, 0, 0, 1.0];","        },","//RGB TO HEX COLOR------------","        rgbToHex = function(r, g, b) {","            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","        },","//HSL TO RGB COLOR------------","        hsl2rgb = function(h, s, l) {","            var r, g, b, m, c, x;","            if (!isFinite(h)) h = 0;","            if (!isFinite(s)) s = 0;","            if (!isFinite(l)) l = 0;","            h /= 60;","            if (h < 0) h = 6 - (-h % 6);","            h %= 6;","            s = Math.max(0, Math.min(1, s / 100));","            l = Math.max(0, Math.min(1, l / 100));","            c = (1 - Math.abs((2 * l) - 1)) * s;","            x = c * (1 - Math.abs((h % 2) - 1));","            if (h < 1) {","                r = c;","                g = x;","                b = 0;","            }","            else if (h < 2) {","                r = x;","                g = c;","                b = 0;","            }","            else if (h < 3) {","                r = 0;","                g = c;","                b = x;","            }","            else if (h < 4) {","                r = 0;","                g = x;","                b = c;","            }","            else if (h < 5) {","                r = x;","                g = 0;","                b = c;","            }","            else {","                r = c;","                g = 0;","                b = x;","            }","            m = l - c / 2;","            r = Math.round((r + m) * 255);","            g = Math.round((g + m) * 255);","            b = Math.round((b + m) * 255);","            return {","                r: r,","                g: g,","                b: b","            };","        },","//CHECK INSTALL SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = \"Yes\"; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = \"Yes\"; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = \"Yes\"; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = \"Yes\"; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set FX ON/OFF?","            if (_.isUndefined(state.HealthColors.HealFX)) state.HealthColors.HealFX = \"00FF00\"; //set FX HEAL COLOR","            if (_.isUndefined(state.HealthColors.HurtFX)) state.HealthColors.HurtFX = \"FF0000\"; //set FX HURT COLOR?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""],"id":102},{"start":{"row":0,"column":0},"end":{"row":441,"column":0},"action":"insert","lines":["/*","My Profile link: https://app.roll20.net/users/262130/dxwarlock","GIT link: https://github.com/dxwarlock/Roll20/blob/master/Public/HeathColors","Roll20Link: https://app.roll20.net/forum/post/4630083/script-aura-slash-tint-healthcolor","Last Updated 2/24/2017","*/","/*global createObj getAttrByName spawnFxWithDefinition getObj state playerIsGM sendChat _ findObjs log on*/","var HealthColors = HealthColors || (function() {","    'use strict';","    var version = '1.1.1',","        ScriptName = \"HealthColors\",","        schemaVersion = '1.0.3',","        Updated = \"Feb 24 2017\",","/*--------","ON TOKEN UPDATE","--------*/","        handleToken = function(obj, prev) {","            var ColorOn = state.HealthColors.auraColorOn;","            var bar = state.HealthColors.auraBar;","            var tint = state.HealthColors.auraTint;","            var onPerc = state.HealthColors.auraPerc;","            var dead = state.HealthColors.auraDead;","            if (obj.get(\"represents\") !== \"\" || (obj.get(\"represents\") == \"\" && state.HealthColors.OneOff == true)) {","                if (ColorOn !== true) return; //Check Toggle","//CHECK BARS------------","                if (obj.get(bar + \"_max\") === \"\" || obj.get(bar + \"_value\") === \"\") return;","                var maxValue = parseInt(obj.get(bar + \"_max\"), 10);","                var curValue = parseInt(obj.get(bar + \"_value\"), 10);","                var prevValue = prev[bar + \"_value\"];","                if (isNaN(maxValue) && isNaN(curValue)) return;","//CALC PERCENTAGE------------","                var perc = Math.round((curValue / maxValue) * 100);","                var percReal = Math.min(100, perc);","//SET DEAD------------","                if (curValue <= 0 && dead === true) {","                    obj.set(\"status_dead\", true);","                    SetAuraNone(obj);","                    if (state.HealthColors.auraDeadFX !== \"None\") PlayDeath(state.HealthColors.auraDeadFX);","                    return;","                }","                else if (dead === true) obj.set(\"status_dead\", false);","//PERCENTAGE OFF------------","                if (percReal > onPerc) {","                    SetAuraNone(obj);","                    return;","                }","//CHECK DISABLED TOKEN------------","                var oCharacter = getObj('character', obj.get(\"_represents\"));","                if (oCharacter !== undefined) {","                    if (getAttrByName(oCharacter.id, 'USECOLOR') === undefined) CreateAttrib(oCharacter);","                    var UseAuraAtt = findObjs({name: \"USECOLOR\",_type: \"attribute\",characterid: oCharacter.id}, {caseInsensitive: true})[0];","                    var UseAura = UseAuraAtt.get(\"current\");","                    UseAura = UseAura.toString().toUpperCase();","                    if (UseAura != \"YES\" && UseAura != \"NO\") {","                        UseAuraAtt.set('current', \"YES\");","                        var name = oCharacter.get('name');","                        GMW(name + \": USECOLOR NOT SET TO YES or NO, SETTING TO YES\");","                    }","                    UseAura = UseAuraAtt.get(\"current\").toUpperCase();","                    if (UseAura == \"NO\") return;","                }","//CHECK MONSTER OR PLAYER------------","                var type = (oCharacter === undefined || oCharacter.get(\"controlledby\") === \"\") ? 'Monster' : 'Player';","//IF PLAYER------------","                var GM = '';","                var PC = '';","                var markerColor = PercentToRGB(Math.min(100, percReal));","                var pColor = '#ffffff';","                if (type == 'Player') {","                    if (state.HealthColors.PCAura === false) return;","                    var cBy = oCharacter.get('controlledby');","                    var player = getObj('player', cBy);","                    pColor = '#000000';","                    if (player !== undefined) pColor = player.get('color');","                    GM = state.HealthColors.GM_PCNames;","                    if (GM != 'Off') {","                        GM = (GM == \"Yes\") ? true : false;","                        obj.set({'showname': GM});","                    }","                    PC = state.HealthColors.PCNames;","                    if (PC != 'Off') {","                        PC = (PC == \"Yes\") ? true : false;","                        obj.set({'showplayers_name': PC});","                    }","","                }","//IF MONSTER------------","                if (type == 'Monster') {","                    if (state.HealthColors.NPCAura === false) return;","                    GM = state.HealthColors.GM_NPCNames;","                    if (GM != 'Off') {","                        GM = (GM == \"Yes\") ? true : false;","                        obj.set({'showname': GM});","                    }","                    PC = state.HealthColors.NPCNames;","                    if (PC != 'Off') {","                        PC = (PC == \"Yes\") ? true : false;","                        obj.set({'showplayers_name': PC});","                    }","                }","//SET AURA|TINT------------","                if (tint === true) obj.set({'tint_color': markerColor,});","                else {","                    TokenSet(obj, state.HealthColors.AuraSize, markerColor, pColor);","                }","//SPURT FX------------","                if (state.HealthColors.FX == true && obj.get(\"layer\") == \"objects\") {","                    if (curValue == prevValue || prevValue == \"\") return;","                    var amount = Math.abs(curValue - prevValue);","                    var HitSizeCalc = Math.min((amount / maxValue) * 4, 1);","                    var HitSize = Math.max(HitSizeCalc, 0.2) * (_.random(60, 100) / 100);","                    var HealColor = HEXtoRGB(state.HealthColors.HealFX);","                    var HurtColor = HEXtoRGB(state.HealthColors.HurtFX);","                    var size = obj.get(\"height\");","                    var multi = size / 70;","                    var StartColor;","                    var EndColor;","                    var HITS;","                    if (curValue > prevValue && prevValue !== \"\") {","                        StartColor = HealColor;","                        EndColor = [255, 255, 255, 0];","                        HITS = Heal(HitSize, multi, StartColor, EndColor, size);","                    }","                    else {","                        StartColor = HurtColor;","                        EndColor = [100, 0, 0, 0];","                        HITS = Hurt(HitSize, multi, StartColor, EndColor, size);","                    }","                    spawnFxWithDefinition(obj.get(\"left\"), obj.get(\"top\"), HITS, obj.get(\"_pageid\"));","                }","            }","        },","/*--------","CHAT MESSAGES"," --------*/","        handleInput = function(msg) {","            var msgFormula = msg.content.split(/\\s+/);","            var command = msgFormula[0].toUpperCase();","            if (msg.type == \"api\" && command.indexOf(\"!AURA\") !== -1) {","                if (!playerIsGM(msg.playerid)) {","                    sendChat('HealthColors', \"/w \" + msg.who + \" you must be a GM to use this command!\");","                    return;","                }","                else {","                    var option = msgFormula[1];","                    if (option === undefined) {","                        aurahelp();","                        return;","                    }","                    switch (msgFormula[1].toUpperCase()) {","                        case \"ON\":","                            state.HealthColors.auraColorOn = !state.HealthColors.auraColorOn;","                            aurahelp();","                            break;","                        case \"BAR\":","                            state.HealthColors.auraBar = \"bar\" + msgFormula[2];","                            aurahelp();","                            break;","                        case \"TINT\":","                            state.HealthColors.auraTint = !state.HealthColors.auraTint;","                            aurahelp();","                            break;","                        case \"PERC\":","                            state.HealthColors.auraPerc = parseInt(msgFormula[2], 10);","                            aurahelp();","                            break;","                        case \"PC\":","                            state.HealthColors.PCAura = !state.HealthColors.PCAura;","                            aurahelp();","                            break;","                        case \"NPC\":","                            state.HealthColors.NPCAura = !state.HealthColors.NPCAura;","                            aurahelp();","                            break;","                        case \"GMNPC\":","                            state.HealthColors.GM_NPCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"GMPC\":","                            state.HealthColors.GM_PCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"PCNPC\":","                            state.HealthColors.NPCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"PCPC\":","                            state.HealthColors.PCNames = msgFormula[2];","                            aurahelp();","                            break;","                        case \"DEAD\":","                            state.HealthColors.auraDead = !state.HealthColors.auraDead;","                            aurahelp();","                            break;","                        case \"DEADFX\":","                            state.HealthColors.auraDeadFX = msgFormula[2];","                            aurahelp();","                            break;","                        case \"SIZE\":","                            state.HealthColors.AuraSize = parseFloat(msgFormula[2]);","                            aurahelp();","                            break;","                        case \"ONEOFF\":","                            state.HealthColors.OneOff = !state.HealthColors.OneOff;","                            aurahelp();","                            break;","                        case \"FX\":","                            state.HealthColors.FX = !state.HealthColors.FX;","                            aurahelp();","                            break;","                        case \"HEAL\":","                            var UPPER = msgFormula[2];","                            UPPER = UPPER.toUpperCase();","                            state.HealthColors.HealFX = UPPER;","                            aurahelp();","                            break;","                        case \"HURT\":","                            var UPPER = msgFormula[2];","                            UPPER = UPPER.toUpperCase();","                            state.HealthColors.HurtFX = UPPER;","                            aurahelp();","                            break;","                        default:","                            return;","                    }","                }","            }","        },","/*--------","FUNCTIONS","--------*/","//HURT FX----------","        Hurt = function(HitSize, multi, StartColor, EndColor, size) {","            var FX = {","                \"maxParticles\": 150,","                \"duration\": 70 * HitSize,","                \"size\": size / 10 * HitSize,","                \"sizeRandom\": 3,","                \"lifeSpan\": 25,","                \"lifeSpanRandom\": 5,","                \"speed\": multi * 8,","                \"speedRandom\": multi * 3,","                \"gravity\": {","                    \"x\": multi * 0.01,","                    \"y\": multi * 0.65","                },","                \"angle\": 270,","                \"angleRandom\": 25,","                \"emissionRate\": 100 * HitSize,","                \"startColour\": StartColor,","                \"endColour\": EndColor,","            };","            return FX;","        },","//HEAL FX----------","        Heal = function(HitSize, multi, StartColor, EndColor, size) {","            var FX = {","                \"maxParticles\": 150,","                \"duration\": 50 * HitSize,","                \"size\": size / 10 * HitSize,","                \"sizeRandom\": 15 * HitSize,","                \"lifeSpan\": multi * 50,","                \"lifeSpanRandom\": 30,","                \"speed\": multi * 0.5,","                \"speedRandom\": multi / 2 * 1.1,","                \"angle\": 0,","                \"angleRandom\": 180,","                \"emissionRate\": 1000,","                \"startColour\": StartColor,","                \"endColour\": EndColor,","            };","            return FX;","        },","//WHISPER GM------------","        GMW = function(text) {","            sendChat('HealthColors', \"/w GM <br><b> \" + text + \"</b>\");","        },","//DEATH SOUND------------","        PlayDeath = function(trackname) {","            var track = findObjs({type: 'jukeboxtrack',title: trackname})[0];","            if (track) {","                track.set('playing', false);","                track.set('softstop', false);","                track.set('volume', 50);","                track.set('playing', true);","            }","            else {","                log(\"No track found\");","            }","        },","//CREATE USECOLOR ATTR------------","        CreateAttrib = function(oCharacter) {","            log(\"Creating USECOLOR\");","            createObj(\"attribute\", {name: 'USECOLOR',current: 'YES',characterid: oCharacter.id});","        },","//SET TOKEN COLORS------------","        TokenSet = function(obj, sizeSet, markerColor, pColor) {","            var Pageon = getObj(\"page\", obj.get(\"_pageid\"));","            var scale = Pageon.get(\"scale_number\") / 10;","            obj.set({","                'aura1_radius': sizeSet * scale * 1.8,","                'aura2_radius': sizeSet * scale * 0.1,","                'aura1_color': markerColor,","                'aura2_color': pColor,","                'showplayers_aura1': true,","                'showplayers_aura2': true,","            });","        },","//HELP MENU------------","        aurahelp = function() {","            var img = \"background-image: -webkit-linear-gradient(-45deg, #a7c7dc 0%,#85b2d3 100%);\"","            var tshadow = \"-1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000 , 2px 2px #222;\";","            var style = 'style=\"padding-top: 1px; text-align:center; font-size: 9pt; width: 45px; height: 14px; border: 1px solid black; margin: 1px; background-color: #6FAEC7;border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';","            var off = \"#A84D4D\";","            var disable = \"#D6D6D6\";","            var HR = \"<hr style='background-color: #000000; margin: 5px; border-width:0;color: #000000;height: 1px;'/>\";","            var FX = state.HealthColors.auraDeadFX.substring(0, 4);","            sendChat('HealthColors', \"/w GM <b><br>\" + '<div style=\"border-radius: 8px 8px 8px 8px; padding: 5px; font-size: 9pt; text-shadow: ' + tshadow + '; box-shadow: 3px 3px 1px #707070; '+img+' color:#FFF; border:2px solid black; text-align:right; vertical-align:middle;\">' + '<u>HealthColors Version: ' + version + '</u><br>' + //--","                HR + //--","                'Is On: <a ' + style + 'background-color:' + (state.HealthColors.auraColorOn !== true ? off : \"\") + ';\" href=\"!aura on\">' + (state.HealthColors.auraColorOn !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Bar: <a ' + style + '\" href=\"!aura bar ?{Bar|1|2|3}\">' + state.HealthColors.auraBar + '</a><br>' + //--","                'Use Tint: <a ' + style + 'background-color:' + (state.HealthColors.auraTint !== true ? off : \"\") + ';\" href=\"!aura tint\">' + (state.HealthColors.auraTint !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Percentage: <a ' + style + '\" href=\"!aura perc ?{Percent?|100}\">' + state.HealthColors.auraPerc + '</a><br>' + //--","                'Show on PC: <a ' + style + 'background-color:' + (state.HealthColors.PCAura !== true ? off : \"\") + ';\" href=\"!aura pc\">' + (state.HealthColors.PCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show on NPC: <a ' + style + 'background-color:' + (state.HealthColors.NPCAura !== true ? off : \"\") + ';\" href=\"!aura npc\">' + (state.HealthColors.NPCAura !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'Show Dead: <a ' + style + 'background-color:' + (state.HealthColors.auraDead !== true ? off : \"\") + ';\" href=\"!aura dead\">' + (state.HealthColors.auraDead !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'DeathSFX: <a ' + style + '\" href=\"!aura deadfx ?{Sound Name?|None}\">' + FX + '</a><br>' + //--","                HR + //--","                'Global GM Sees NPC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.GM_NPCNames, off, disable) + ';\" href=\"!aura gmnpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.GM_NPCNames + '</a><br>' + //---","                'Global GM Sees PC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.GM_PCNames, off, disable) + ';\" href=\"!aura gmpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.GM_PCNames + '</a><br>' + //--","                HR + //--","                ' Global PC Sees NPC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.NPCNames, off, disable) + ';\" href=\"!aura pcnpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.NPCNames + '</a><br>' + //--","                ' Global PC Sees PC Names: <a ' + style + 'background-color:' + ButtonColor(state.HealthColors.PCNames, off, disable) + ';\" href=\"!aura pcpc ?{Setting|Yes|No|Off}\">' + state.HealthColors.PCNames + '</a><br>' + //--","                HR + //--","                'Aura Size: <a ' + style + '\" href=\"!aura size ?{Size?|0.7}\">' + state.HealthColors.AuraSize + '</a><br>' + //--","                'One Offs: <a ' + style + 'background-color:' + (state.HealthColors.OneOff !== true ? off : \"\") + ';\" href=\"!aura ONEOFF\">' + (state.HealthColors.OneOff !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'FX: <a ' + style + 'background-color:' + (state.HealthColors.FX !== true ? off : \"\") + ';\" href=\"!aura FX\">' + (state.HealthColors.FX !== true ? \"No\" : \"Yes\") + '</a><br>' + //--","                'HealFX Color: <a ' + style + 'background-color:#' + state.HealthColors.HealFX + ';\"\"href=\"!aura HEAL ?{Color?|00FF00}\">' + state.HealthColors.HealFX + '</a><br>' + //--","                'HurtFX Color: <a ' + style + 'background-color:#' + state.HealthColors.HurtFX + ';\"\"href=\"!aura HURT ?{Color?|FF0000}\">' + state.HealthColors.HurtFX + '</a><br>' + //--","                HR + //--","                '</div>');","        },","//OFF BUTTON COLORS------------","        ButtonColor = function(state, off, disable) {","            var color;","            if (state == \"No\") color = off;","            if (state == \"Off\") color = disable;","            return color;","        },","//REMOVE ALL------------","        SetAuraNone = function(obj) {","            var tint = state.HealthColors.auraTint;","            if (tint === true) {","                obj.set({'tint_color': \"transparent\",});","            }","            else {","                obj.set({","                    'aura1_color': \"\",","                    'aura2_color': \"\",","                });","            }","        },","//PERC TO RGB------------","        PercentToRGB = function(percent) {","            if (percent === 100) percent = 99;","            var r, g, b;","            if (percent < 50) {","                g = Math.floor(255 * (percent / 50));","                r = 255;","            }","            else {","                g = 255;","                r = Math.floor(255 * ((50 - percent % 50) / 50));","            }","            b = 0;","            var Gradient = rgbToHex(r, g, b);","            return Gradient;","        },","//RGB TO HEX------------","        rgbToHex = function(r, g, b) {","            var Color = \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","            return Color;","        },","//HEX TO RGB------------","        HEXtoRGB = function(hex) {","            let parts = hex.match(/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/);","            if (parts) {","                let rgb = _.chain(parts)","                    .rest()","                    .map((d) => parseInt(d, 16))","                    .value();","                rgb.push(1.0);","                return rgb;","            }","            return [0, 0, 0, 1.0];","        },","//CHECK INSTALL & SET STATE------------","        checkInstall = function() {","            log('<' + ScriptName + ' v' + version + ' Ready [Updated: '+ Updated+']>');","            if (!_.has(state, 'HealthColors') || state.HealthColors.schemaVersion !== schemaVersion) {","                log('<' + ScriptName + ' Updating Schema to v' + schemaVersion + '>');","                state.HealthColors = {","                    schemaVersion: schemaVersion","                };","                state.HealthColors.version = version;","            }","            if (_.isUndefined(state.HealthColors.auraColorOn)) state.HealthColors.auraColorOn = true; //global on or off","            if (_.isUndefined(state.HealthColors.auraBar)) state.HealthColors.auraBar = \"bar1\"; //bar to use","            if (_.isUndefined(state.HealthColors.PCAura)) state.HealthColors.PCAura = true; //show players Health?","            if (_.isUndefined(state.HealthColors.NPCAura)) state.HealthColors.NPCAura = true; //show NPC Health?","            if (_.isUndefined(state.HealthColors.auraTint)) state.HealthColors.auraTint = false; //use tint instead?","            if (_.isUndefined(state.HealthColors.auraPerc)) state.HealthColors.auraPerc = 100; //precent to start showing","            if (_.isUndefined(state.HealthColors.auraDead)) state.HealthColors.auraDead = true; //show dead X status","            if (_.isUndefined(state.HealthColors.auraDeadFX)) state.HealthColors.auraDeadFX = 'None'; //Sound FX Name","            if (_.isUndefined(state.HealthColors.GM_NPCNames)) state.HealthColors.GM_NPCNames = \"Yes\"; //show GM NPC names?","            if (_.isUndefined(state.HealthColors.NPCNames)) state.HealthColors.NPCNames = \"Yes\"; //show players NPC Names?","            if (_.isUndefined(state.HealthColors.GM_PCNames)) state.HealthColors.GM_PCNames = \"Yes\"; //show GM PC names?","            if (_.isUndefined(state.HealthColors.PCNames)) state.HealthColors.PCNames = \"Yes\"; //show players PC Names?","            if (_.isUndefined(state.HealthColors.AuraSize)) state.HealthColors.AuraSize = 0.7; //set aura size?","            if (_.isUndefined(state.HealthColors.FX)) state.HealthColors.FX = true; //set FX ON/OFF?","            if (_.isUndefined(state.HealthColors.HealFX)) state.HealthColors.HealFX = \"00FF00\"; //set FX HEAL COLOR","            if (_.isUndefined(state.HealthColors.HurtFX)) state.HealthColors.HurtFX = \"FF0000\"; //set FX HURT COLOR?","        },","        registerEventHandlers = function() {","            on('chat:message', handleInput);","            on(\"change:token\", handleToken);","        };","/*-------------","RETURN OUTSIDE FUNCTIONS","-----------*/","    return {","        CheckInstall: checkInstall,","        RegisterEventHandlers: registerEventHandlers","    };","}());","//On Ready","on('ready', function() {","    'use strict';","    HealthColors.CheckInstall();","    HealthColors.RegisterEventHandlers();","});",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":441,"column":0},"end":{"row":441,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1487976134836,"hash":"b374adf5a200a8ad3efb265f05f076da460d5644"}