function randomFromTo(from, to){
       return Math.floor(Math.random() * (to - from + 1) + from);
    }
//CODE-----------------
on("change:token", function (obj) {
    //SET ENEMY AURA----------
    if(obj.get('represents') === "") {
        var eBar = parseInt(obj.get("bar1_value"));
        if(!isNaN(eBar) && obj.get("name") === '') {
            obj.set({'aura1_radius': -0.2,'aura1_color': '#980000','aura1_square': false,'showplayers_aura1': true,'showplayers_aura2': true});
        }
    }
    //SET PLAYER AURA------------
    if(obj.get("represents") !== "") {
        var oCharacter = getObj('character', obj.get("_represents"));
        var type = (oCharacter.get("controlledby") === "") ? 'Monster' : 'Player';
        if(type == 'Player') {
            var cBy = oCharacter.get('controlledby');
            if(cBy.split(',').length == 1 && cBy != 'all') {
                var player = getObj('player', cBy);
                var pColor = player.get('color');
                obj.set({'aura1_radius': 0.3,'aura1_color': pColor,'aura1_square': false,'showplayers_aura1': true,'showplayers_aura2': true});
            }
        }
    }
    //SET HURT ICONS-----------
    CONFIG.forEach(function (opts) {
        if(obj.get("bar" + opts.barId + "_max") !== "" && obj.get("bar" + opts.barId + "_value") !== "") {
            var maxValue = parseInt(obj.get("bar" + opts.barId + "_max"));
            var curValue = parseInt(obj.get("bar" + opts.barId + "_value"));
            if(maxValue !== NaN && curValue !== NaN && obj.get("controlledby") != '-J54-6mE5Q1BnpKxGOrZ') {
                var markerName = "status_" + opts.status;
                if(curValue <= (maxValue * opts.barRatioMax) && curValue > (maxValue * opts.barRatioMin)) {
                    obj.set(markerName, opts.whenLow);
                } else {
                    obj.set(markerName, !opts.whenLow);
                }
            }
        }
    });
});
/*-----------
SET FOOD CHAT
-----------*/
on('chat:message', function (msg) {
  if(msg.type == 'api' && msg.content.indexOf('!Food') !== -1) {
    var selected = msg.selected;
    i = 0;
    _.each(selected, function (obj) {
      var token = getObj('graphic', msg.selected[i]._id);
      if(token.get("represents") !== '') {
        if(token.get('subtype') !== 'token') return;
        var oCharacter = getObj('character', token.get("_represents"));
        var oFoodset = findObjs({_type: "attribute",name: "HUNGER",_characterid: oCharacter.id});
        var name = (oCharacter.get('name'));
        oFoodset = oFoodset[0];
        var cFood = parseInt(oFoodset.get("current"));
        var mFood = parseInt(oFoodset.get("max"));
        var cmdName = "!Food ";
        var amount = msg.content.slice(cmdName.length);
        var add = cFood + +amount;
        if(add >= 100) add = 100;
        if(add <= 0) add = 0;
        oFoodset.set('current', add);
        FOOD.forEach(function (opts) {
          var markerName = "status_" + opts.status;
          if(add <= opts.FoodRatioMax && add >= opts.FoodRatioMin) {
            var tFood= fPart+"background-color:#826B2C;'>" + name + " is "+opts.stype+"</div>";
            sendChat('', "/direct " + tFood);    
          }
        });
      }
      i++;
    });
  }
});
