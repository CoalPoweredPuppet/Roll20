/*global iPart createObj log on obj _ state getObj sendChat CONFIG fPart findObjs OuterDiv Campaign randomFromTo  fixNO toFront randomInteger FOOD*/
function FoodSet(Hours) {
    var characters = findObjs({_type: "character" ,inplayerjournals: "all"});
    _.each(characters, function(id) {
        var aName = findObjs({_type: "attribute",name: "Name",_characterid: id.id}, {caseInsensitive: true})[0];
        var aFood = findObjs({ _type: "attribute",name: "HUNGER",_characterid: id.id}, {caseInsensitive: true})[0];
        var HungH = findObjs({_type: "attribute",name: "HUNGERH",_characterid: id.id}, {caseInsensitive: true})[0];
        var aSleep = findObjs({ _type: "attribute",name: "SLEEP",_characterid: id.id}, {caseInsensitive: true})[0];
        var SleepH = findObjs({_type: "attribute",name: "SLEEPH",_characterid: id.id}, {caseInsensitive: true})[0];
        //food
        if(HungH !== undefined) {
            var tFood = '';
            var Hperc = HungH.get("current");
            var FoodCount = parseFloat(aFood.get("current")-(Hperc*Hours));
            if (FoodCount > 100) FoodCount = 100;
            FoodCount = Math.round(FoodCount.toFixed(1));
            var name = aName.get("current");
            aFood.set('current', FoodCount);
            if (FoodCount < 15) {
                tFood = OuterDiv+iPart +"background-color:#825930;'>" + name + " is starving to death!<br>(-8 on all rolls -60% skills).</div>";
                sendChat('', "/direct " + tFood);
                return;
            }
            if (FoodCount < 30) {
                tFood = OuterDiv+iPart +"background-color:#825930;'>" + name + " seriously needs to eat.<br>(-2 on all rolls -30% skills).</div>";
                sendChat('', "/direct " + tFood);
                return;
            }
            else if (FoodCount < 50) {
                tFood = OuterDiv+iPart +"background-color:#999999;'>" + name + " is getting hungry.</div>";
                sendChat('', "/direct " + tFood);
            }
        }
        //sleep
        if(SleepH !== undefined) {
            var tSleep = '';
            var Hperc = SleepH.get("current");
            var SleepCount = parseFloat(aSleep.get("current")-(Hperc*Hours));
            if (SleepCount > 100) SleepCount = 100;
            SleepCount = Math.round(SleepCount.toFixed(1));
            var name = aName.get("current");
            aSleep.set('current', SleepCount);
            if (SleepCount < 30) {
                tSleep = OuterDiv+iPart +"background-color:#825930;'>" + name + " is barely able to stay awake!<br>(-8 on all rolls -75% on perception rolls -75% skills 75% to fall asleep).</div>";
                sendChat('', "/direct " + tSleep);
                return;
            }
            if (SleepCount < 40) {
                tSleep = OuterDiv+iPart +"background-color:#825930;'>" + name + " seriously needs to sleep.<br>(-2 on all rolls -30% on perception rolls -30% skills 30% to fall asleep).</div>";
                sendChat('', "/direct " + tSleep);
                return;
            }
            else if (SleepCount < 60) {
                tSleep = OuterDiv+iPart +"background-color:#999999;'>" + name + " is getting sleepy.<br>(-15% on perception rolls).</div>";
                sendChat('', "/direct " + tSleep);
            }
        }

    });
};